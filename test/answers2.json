{"swap 1 eth for usdc": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}]], "swap 1 eth for usdc on uniswap": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc", "protocolName": "uniswap"}}]], "bridge 1 usdt from base to arbitrum": [[{"name": "bridge", "args": {"amount": "1", "token": "usdt", "sourceChainName": "base", "destinationChainName": "arbitrum"}}]], "bridge 1 usdt from base to arbitrum on hop protocol": [[{"name": "bridge", "args": {"amount": "1", "token": "usdt", "sourceChainName": "base", "destinationChainName": "arbitrum", "protocolName": "hop"}}]], "transfer 10 dai to niyant.eth": [[{"name": "transfer", "args": {"amount": "10", "token": "dai", "recipient": "niyant.eth"}}]], "swap 1 eth for usdc on ethereum then bridge to arbitrum": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc", "chainName": "ethereum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}]], "bridge 1 eth from ethereum to optimism then buy usdc": [[{"name": "bridge", "args": {"amount": "1", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "optimism"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "usdc", "chainName": "optimism"}}]], "bridge 1 weth from base to ethereum and deposit in aave": [[{"name": "bridge", "args": {"amount": "1", "token": "weth", "sourceChainName": "base", "destinationChainName": "ethereum"}}, {"name": "deposit", "args": {"protocolName": "aave", "amount": "outputAmount", "token": "weth", "chainName": "ethereum"}}]], "swap 10 eth for usdc when gas is below 20": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas"}}]], "swap 10 eth for usdc when eth is below 1600": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "1600", "type": "price", "value_units": "usd"}}]], "swap 10 eth for usdc in twelve hours": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "time", "args": {"start_time": "twelve hours"}}]], "swap 10 eth for usdc at 5pm": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "time", "args": {"start_time": "5pm"}}]], "swap 10 eth for usdc in twelve hours, repeating every twelve hours": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "time", "args": {"start_time": "twelve hours", "recurrence": {"type": "hours", "interval": 12}}}]], "swap 10 eth for usdc at 5pm, repeating every 1 hour": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "time", "args": {"start_time": "5pm", "recurrence": {"type": "hours", "interval": 1}}}]], "deposit all my weth into aave": [[{"name": "deposit", "args": {"protocolName": "aave", "amount": "all", "token": "weth"}}]], "swap all my weth into usdc": [[{"name": "swap", "args": {"inputToken": "weth", "outputToken": "usdc", "inputAmount": "all"}}]], "buy usdt with all my weth": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "weth", "outputToken": "usdt"}}]], "bridge all my weth to base": [[{"name": "bridge", "args": {"amount": "all", "token": "weth", "destinationChainName": "base"}}]], "withdraw 0.1 eth from compound and buy op": [[{"name": "withdraw", "args": {"protocolName": "compound", "amount": "0.1", "token": "eth"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "op"}}]], "bridge 3 eth to avalanche and buy ohm": [[{"name": "bridge", "args": {"amount": "3", "token": "eth", "destinationChainName": "avalanche"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "ohm", "chainName": "avalanche"}}]], "use 3 eth to buy ohm on avalanche": [[{"name": "swap", "args": {"inputAmount": "3", "inputToken": "eth", "outputToken": "ohm", "chainName": "avalanche"}}]], "buy grail with 4 weth": [[{"name": "swap", "args": {"inputAmount": "4", "inputToken": "weth", "outputToken": "grail"}}]], "bridge all my tokens on canto to ethereum": [[{"name": "bridge", "args": {"amount": "all", "token": "all", "sourceChainName": "canto", "destinationChainName": "ethereum"}}]], "open a short trade on kwenta on btc with 3 eth with 3x leverage": [[{"name": "short", "args": {"protocolName": "kwenta", "inputAmount": "3", "inputToken": "eth", "outputToken": "btc", "leverageMultiplier": "3"}}]], "withdraw from all my positions, convert to weth, and bridge to arbitrum": [[{"name": "withdraw", "args": {"protocolName": "all"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "weth"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "weth", "destinationChainName": "arbitrum"}}]], "swap eth for usdt, swap usdc for usdt, bridge usdt to arbitrum": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdt"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "usdt"}}, {"name": "bridge", "args": {"token": "usdt", "destinationChainName": "arbitrum"}}]], "when gas is below 10, deposit 100 usdc into morpho": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "deposit", "args": {"protocolName": "morpho", "amount": "100", "token": "usdc"}}]], "at 10am tomorrow, transfer 200 usdc to 0x2b605c2a76ee3f08a48b4b4a9d7d4dad3ed46bf3": [[{"name": "time", "args": {"start_time": "10am tomorrow"}}, {"name": "transfer", "args": {"amount": "200", "token": "usdc", "recipient": "0x2b605c2a76ee3f08a48b4b4a9d7d4dad3ed46bf3"}}]], "stake 10 eth on rocket pool": [[{"name": "stake", "args": {"protocolName": "rocket pool", "amount": "10", "token": "eth"}}]], "harvest all my positions on arbitrum": [[{"name": "claim", "args": {"protocolName": "all", "chainName": "arbitrum"}}]], "swap all my tokens on optimism to weth and bridge to arbitrum": [[{"name": "swap", "args": {"inputToken": "all", "outputToken": "weth", "chainName": "optimism"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "weth", "sourceChainName": "optimism", "destinationChainName": "arbitrum"}}], [{"name": "swap", "args": {"inputToken": "all", "inputAmount": "all", "outputToken": "weth", "chainName": "optimism"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "weth", "sourceChainName": "optimism", "destinationChainName": "arbitrum"}}]], "swap 1 eth to usdc, bridge to arbitrum, deposit into jonesdao, then deposit lp into rodeo": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "destinationChainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "jonesdao", "amount": "outputAmount", "token": "usdc", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "rodeo", "amount": "outputAmount", "token": "lp", "chainName": "arbitrum"}}], [{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "destinationChainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "jonesdao", "amount": "outputAmount", "token": "usdc", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "rodeo", "amount": "outputAmount", "token": "outputToken", "chainName": "arbitrum"}}]], "bridge 1 eth to base, swap half to usdc, deposit into kyber eth-usdc pool": [[{"name": "bridge", "args": {"amount": "1", "token": "eth", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "half", "inputToken": "eth", "outputToken": "usdc", "chainName": "base"}}, {"name": "deposit", "args": {"protocolName": "kyber", "poolName": "eth-usdc", "amount": "outputAmount", "token": "usdc", "chainName": "base"}}]], "harvest my mmf yield farms and automatically stake mmf every day at 8am": [[{"name": "claim", "args": {"protocolName": "mmf"}}, {"name": "stake", "args": {"protocolName": "mmf", "amount": "outputAmount", "token": "mmf"}}, {"name": "time", "args": {"start_time": "8am", "recurrence": {"type": "days", "interval": 1}}}], [{"name": "claim", "args": {"protocolName": "mmf"}}, {"name": "stake", "args": {"protocolName": "mmf", "amount": "outputAmount", "token": "outputToken"}}, {"name": "time", "args": {"start_time": "8am", "recurrence": {"type": "days", "interval": 1}}}]], "harvest my positions every wednesday": [[{"name": "claim", "args": {"protocolName": "all"}}, {"name": "time", "args": {"start_time": "wednesday", "recurrence": {"type": "weeks", "interval": 1}}}]], "3x leverage long glp with 1000 usdc on gmx and swap 1000 usdc into uni": [[{"name": "long", "args": {"protocolName": "gmx", "inputAmount": "1000", "inputToken": "usdc", "outputToken": "glp", "leverageMultiplier": "3"}}, {"name": "swap", "args": {"inputAmount": "1000", "inputToken": "usdc", "outputToken": "uni"}}]], "swap 500 dai for wbtc every day for a month when gas is less than 30": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "30", "type": "gas"}}, {"name": "time", "args": {"recurrence": {"type": "days", "interval": 1}, "end_time": "1 month"}}, {"name": "swap", "args": {"inputAmount": "500", "inputToken": "dai", "outputToken": "wbtc"}}]], "claim and restake rewards from all my positions every monday": [[{"name": "claim", "args": {"protocolName": "all"}}, {"name": "stake", "args": {"protocolName": "all", "amount": "outputAmount", "token": "outputToken"}}, {"name": "time", "args": {"start_time": "monday", "recurrence": {"type": "weeks", "interval": 1}}}], [{"name": "claim", "args": {"protocolName": "all"}}, {"name": "stake", "args": {"protocolName": "all", "amount": "outputAmount", "token": "outputToken"}}, {"name": "time", "args": {"start_time": "monday", "recurrence": {"type": "weeks", "interval": 1}}}]], "bridge 200 usdt from ethereum to base and buy pepe": [[{"name": "bridge", "args": {"amount": "200", "token": "usdt", "sourceChainName": "ethereum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdt", "outputToken": "pepe", "chainName": "base"}}]], "harvesting on camelot": [[{"name": "claim", "args": {"protocolName": "camelot"}}]], "using 2 eth buy usdc, usdt, and dai, then deposit into curve tricrypto pool": [[{"name": "swap", "args": {"inputAmount": "2", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "swap", "args": {"inputAmount": "2", "inputToken": "eth", "outputToken": "usdt"}}, {"name": "swap", "args": {"inputAmount": "2", "inputToken": "eth", "outputToken": "dai"}}, {"name": "deposit", "args": {"protocolName": "curve", "poolName": "tricrypto", "amount": "outputAmount", "token": "usdc"}}, {"name": "deposit", "args": {"protocolName": "curve", "poolName": "tricrypto", "amount": "outputAmount", "token": "usdt"}}, {"name": "deposit", "args": {"protocolName": "curve", "poolName": "tricrypto", "amount": "outputAmount", "token": "dai"}}]], "vote on my thena position every week on wednesday": [[{"name": "vote", "args": {"protocolName": "thena", "chainName": "ethereum"}}, {"name": "time", "args": {"start_time": "wednesday", "recurrence": {"type": "weeks", "interval": 1}}}]], "deposit 100 arb into plutus, stake lp for pls, then lock pls": [[{"name": "deposit", "args": {"protocolName": "plutus", "amount": "100", "token": "arb"}}, {"name": "stake", "args": {"protocolName": "plutus", "amount": "outputAmount", "token": "lp"}}, {"name": "lock", "args": {"protocolName": "plutus", "amount": "outputAmount", "token": "pls"}}], [{"name": "deposit", "args": {"protocolName": "plutus", "amount": "100", "token": "arb"}}, {"name": "stake", "args": {"protocolName": "plutus", "amount": "outputAmount", "token": "outputToken"}}, {"name": "lock", "args": {"protocolName": "plutus", "amount": "outputAmount", "token": "outputToken"}}]], "withdraw position from trader joe": [[{"name": "withdraw", "args": {"protocolName": "trader joe"}}]], "vote on solidly every wednesday and claim solidly rewards every thursday": [[{"name": "vote", "args": {"protocolName": "solidly"}}, {"name": "time", "args": {"start_time": "wednesday", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "claim", "args": {"protocolName": "solidly"}}, {"name": "time", "args": {"start_time": "thursday", "recurrence": {"type": "weeks", "interval": 1}}}]], "borrow usdc from compound and deposit into aave": [[{"name": "borrow", "args": {"protocolName": "compound", "token": "usdc"}}, {"name": "deposit", "args": {"protocolName": "aave", "amount": "outputAmount", "token": "usdc"}}], [{"name": "borrow", "args": {"protocolName": "compound", "token": "usdc", "amount": "all"}}, {"name": "deposit", "args": {"protocolName": "aave", "amount": "outputAmount", "token": "usdc"}}]], "borrow 1000 usdc from compound and deposit into aave": [[{"name": "borrow", "args": {"protocolName": "compound", "amount": "1000", "token": "usdc"}}, {"name": "deposit", "args": {"protocolName": "aave", "amount": "outputAmount", "token": "usdc"}}]], "withdraw from all my positions on ethereum and convert everything to eth": [[{"name": "withdraw", "args": {"protocolName": "all", "chainName": "ethereum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth", "chainName": "ethereum"}}], [{"name": "withdraw", "args": {"protocolName": "all", "chainName": "ethereum", "amount": "all"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "all", "outputToken": "eth", "chainName": "ethereum"}}], [{"name": "withdraw", "args": {"protocolName": "all", "chainName": "ethereum", "amount": "all"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth", "chainName": "ethereum"}}]], "vote, harvest, and restake all my positions every day": [[{"name": "vote", "args": {"protocolName": "all"}}, {"name": "claim", "args": {"protocolName": "all"}}, {"name": "stake", "args": {"protocolName": "all", "amount": "outputAmount", "token": "outputToken"}}, {"name": "time", "args": {"recurrence": {"type": "days", "interval": 1}}}]], "vote on all my positions every sunday": [[{"name": "vote", "args": {"protocolName": "all"}}, {"name": "time", "args": {"start_time": "sunday", "recurrence": {"type": "weeks", "interval": 1}}}]], "vote on the most optimal pair on solidly every wednesday at this time": [[{"name": "vote", "args": {"protocolName": "solidly"}}, {"name": "time", "args": {"start_time": "wednesday", "recurrence": {"type": "weeks", "interval": 1}}}]], "harvest and restake all my positions every week": [[{"name": "claim", "args": {"protocolName": "all"}}, {"name": "stake", "args": {"protocolName": "all", "amount": "outputAmount", "token": "outputToken"}}, {"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}}}], [{"name": "claim", "args": {"protocolName": "all"}}, {"name": "stake", "args": {"protocolName": "all", "amount": "all", "token": "outputToken"}}, {"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}}}]], "process rewards on redacted cartel, swap to weth, and deposit into blur, biweekly": [[{"name": "claim", "args": {"protocolName": "redacted cartel"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "weth"}}, {"name": "deposit", "args": {"protocolName": "blur", "amount": "outputAmount", "token": "weth"}}, {"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 2}}}]], "grab weekly rewards from ve(3,3) dexes and convert them to eth": [[{"name": "claim", "args": {"protocolName": "all"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth"}}]], "grab rewards from balancer and convert to eth every week": [[{"name": "claim", "args": {"protocolName": "balancer"}}, {"name": "swap", "args": {"inputToken": "outputToken", "inputAmount": "outputAmount", "outputToken": "eth"}}, {"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}}}]], "bridge 1000 usdc from ethereum to zksync and deposit into pancakeswap": [[{"name": "bridge", "args": {"amount": "1000", "token": "usdc", "sourceChainName": "ethereum", "destinationChainName": "zksync"}}, {"name": "deposit", "args": {"protocolName": "pancakeswap", "amount": "outputAmount", "token": "usdc", "chainName": "zksync"}}]], "withdraw 100 usdc from jonesdao, bridge to ethereum, and deposit it into yearn": [[{"name": "withdraw", "args": {"protocolName": "jonesdao", "amount": "100", "token": "usdc"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "destinationChainName": "ethereum"}}, {"name": "deposit", "args": {"protocolName": "yearn", "amount": "outputAmount", "token": "usdc", "chainName": "ethereum"}}]], "claim and redeposit rewards on all my protocols every week on wednesday": [[{"name": "claim", "args": {"protocolName": "all"}}, {"name": "deposit", "args": {"protocolName": "all", "amount": "outputAmount", "token": "outputToken"}}, {"name": "time", "args": {"start_time": "wednesday", "recurrence": {"type": "weeks", "interval": 1}}}], [{"name": "claim", "args": {"protocolName": "all"}}, {"name": "deposit", "args": {"protocolName": "all", "amount": "all", "token": "outputToken"}}, {"name": "time", "args": {"start_time": "wednesday", "recurrence": {"type": "weeks", "interval": 1}}}]], "buy btc with 1 eth every week": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "btc"}}, {"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}}}]], "buy btc with 1 eth when btc is at or below $25000 and sell 0.2 btc for eth when btc is at or above $30000, forever": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "btc"}}, {"name": "condition", "args": {"subject": "btc", "comparator": "<=", "value": "25000", "period": "forever", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputAmount": "0.2", "inputToken": "btc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "btc", "comparator": ">=", "value": "30000", "period": "forever", "type": "price", "value_units": "usd"}}]], "claim and restake my chronos position every week on monday": [[{"name": "claim", "args": {"protocolName": "chronos"}}, {"name": "stake", "args": {"protocolName": "chronos", "amount": "outputAmount", "token": "outputToken"}}, {"name": "time", "args": {"start_time": "monday", "recurrence": {"type": "weeks", "interval": 1}}}]], "bridge 4 usdt to base": [[{"name": "bridge", "args": {"amount": "4", "token": "usdt", "destinationChainName": "base"}}]], "swap 3 eth to usdc and deposit into the eth-usdc pool on dolomite": [[{"name": "swap", "args": {"inputAmount": "3", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "deposit", "args": {"protocolName": "dolomite", "poolName": "eth-usdc", "amount": "outputAmount", "token": "usdc"}}]], "open a 2x eth long on gmx with 1000 usdc": [[{"name": "long", "args": {"protocolName": "gmx", "inputAmount": "1000", "inputToken": "usdc", "outputToken": "eth", "leverageMultiplier": "2"}}]], "vote on my thena position every wednesday": [[{"name": "vote", "args": {"protocolName": "thena"}}, {"name": "time", "args": {"start_time": "wednesday", "recurrence": {"type": "weeks", "interval": 1}}}]], "loop 1 eth with usdc on lodestar 3 times": [[{"name": "loop", "args": {"protocolName": "lodestar", "inputAmount": "1", "inputToken": "eth", "outputToken": "usdc", "numberLoops": "3"}}]], "withdraw 2 eth from my eth-usdc pool position on camelot": [[{"name": "withdraw", "args": {"protocolName": "camelot", "poolName": "eth-usdc", "amount": "2", "token": "eth"}}]], "claim stg from my stargate positions, swap to weth, and deposit back into stargate": [[{"name": "claim", "args": {"protocolName": "stargate"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "stg", "outputToken": "weth"}}, {"name": "deposit", "args": {"protocolName": "stargate", "amount": "outputAmount", "token": "weth"}}]], "for my pendle token, if it reaches $1.50, sell it for usdc. if it reaches $1.20, buy back with usdc": [[{"name": "condition", "args": {"subject": "pendle", "comparator": "==", "value": "1.50", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputToken": "pendle", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "pendle", "comparator": "==", "value": "1.20", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "pendle"}}]], "stake my arb on arbitrum": [[{"name": "stake", "args": {"token": "arb", "chainName": "arbitrum", "protocolName": "all"}}]], "harvest my balancer position and stake the rewards": [[{"name": "claim", "args": {"protocolName": "balancer"}}, {"name": "stake", "args": {"protocolName": "balancer", "amount": "outputAmount", "token": "outputToken"}}]], "withdraw half the liquidity from my dolomite usdc-usdt position": [[{"name": "withdraw", "args": {"protocolName": "dolomite", "poolName": "usdc-usdt", "amount": "half", "token": "liquidity"}}], [{"name": "withdraw", "args": {"protocolName": "dolomite", "poolName": "usdc-usdt", "amount": "half"}}]], "claim weth-grail lp rewards from camelot and sell for usdc": [[{"name": "claim", "args": {"protocolName": "camelot", "token": "weth-grail lp"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "weth-grail lp", "outputToken": "usdc"}}], [{"name": "claim", "args": {"protocolName": "camelot", "poolName": "weth-grail"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "usdc"}}]], "sell all my usdc for eth if usdc goes below $.95": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "usdc", "comparator": "<=", "value": ".95", "type": "price", "value_units": "usd"}}]], "buy jones with half my eth, deposit into the eth-jones pool on sushi, then trade lp for plsjones": [[{"name": "swap", "args": {"inputAmount": "half", "inputToken": "eth", "outputToken": "jones"}}, {"name": "deposit", "args": {"protocolName": "sushi", "poolName": "eth-jones", "amount": "outputAmount", "token": "jones"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "plsjones"}}], [{"name": "swap", "args": {"inputAmount": "half", "inputToken": "eth", "outputToken": "jones"}}, {"name": "deposit", "args": {"protocolName": "sushi", "poolName": "eth-jones", "amount": "outputAmount", "token": "jones"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "lp", "outputToken": "plsjones"}}]], "buy eth with 1000 usdc on uniswap on ethereum, bridge to optimism, and sell for usdc on velodrome": [[{"name": "swap", "args": {"protocolName": "uniswap", "inputAmount": "1000", "inputToken": "usdc", "outputToken": "eth", "chainName": "ethereum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "optimism"}}, {"name": "swap", "args": {"protocolName": "velodrome", "inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "usdc", "chainName": "optimism"}}]], "swap 5000 usdc for eth on sushiswap on ethereum, bridge to base, sell eth for usdc on kyberswap, bridge usdc back to mainnet": [[{"name": "swap", "args": {"protocolName": "sushiswap", "inputAmount": "5000", "inputToken": "usdc", "outputToken": "eth", "chainName": "ethereum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "base"}}, {"name": "swap", "args": {"protocolName": "kyberswap", "inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "usdc", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "base", "destinationChainName": "ethereum"}}]], "buy wbtc with eth on uniswap and sell it for eth on sushiswap": [[{"name": "swap", "args": {"protocolName": "uniswap", "inputToken": "eth", "outputToken": "wbtc"}}, {"name": "swap", "args": {"protocolName": "sushiswap", "inputAmount": "outputAmount", "inputToken": "wbtc", "outputToken": "eth"}}], [{"name": "swap", "args": {"protocolName": "uniswap", "inputToken": "eth", "outputToken": "wbtc"}}, {"name": "swap", "args": {"protocolName": "sushiswap", "inputToken": "wbtc", "outputToken": "eth"}}]], "buy wbtc with 1 eth on uniswap": [[{"name": "swap", "args": {"protocolName": "uniswap", "inputAmount": "1", "inputToken": "eth", "outputToken": "wbtc"}}]], "swap 1 eth for usdt": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdt"}}]], "swap xyz for abc on pancakeswap in 35 minutes": [[{"name": "swap", "args": {"inputToken": "xyz", "outputToken": "abc", "protocolName": "pancakeswap"}}, {"name": "time", "args": {"start_time": "35 minutes"}}]], "swap xyz for abc on pancakeswap at 11 pm ust": [[{"name": "swap", "args": {"protocolName": "pancakeswap", "inputToken": "xyz", "outputToken": "abc"}}, {"name": "time", "args": {"start_time": "11 pm ust"}}]], "claim my camelot rewards, swap to usdc, and deposit back into camelot": [[{"name": "claim", "args": {"protocolName": "camelot"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "usdc"}}, {"name": "deposit", "args": {"protocolName": "camelot", "amount": "outputAmount", "token": "usdc"}}]], "buy wbtc with 1 eth every sunday": [[{"name": "time", "args": {"start_time": "sunday", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "wbtc"}}]], "withdraw from my lodestar position": [[{"name": "withdraw", "args": {"protocolName": "lodestar"}}]], "harvest all my rewards on arbitrum and buy eth": [[{"name": "claim", "args": {"protocolName": "all", "chainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth", "chainName": "arbitrum"}}]], "lend 5 eth, borrow 100 pt, then deposit 100 pt and 100 glp into the pt-glp pool on pendle": [[{"name": "lend", "args": {"protocolName": "pendle", "amount": "5", "token": "eth"}}, {"name": "borrow", "args": {"protocolName": "pendle", "amount": "100", "token": "pt"}}, {"name": "deposit", "args": {"protocolName": "pendle", "poolName": "pt-glp", "amount": "100", "token": "pt"}}, {"name": "deposit", "args": {"protocolName": "pendle", "poolName": "pt-glp", "amount": "100", "token": "glp"}}]], "lend 250 smp and borrow 125 lmp on pendle": [[{"name": "lend", "args": {"protocolName": "pendle", "amount": "250", "token": "smp"}}, {"name": "borrow", "args": {"protocolName": "pendle", "amount": "125", "token": "lmp"}}]], "buy pt with usdc on pendle, then loop pt on dolomite 5 times": [[{"name": "swap", "args": {"inputToken": "usdc", "outputToken": "pt", "protocolName": "pendle"}}, {"name": "loop", "args": {"inputAmount": "outputAmount", "inputToken": "pt", "outputToken": "pt", "protocolName": "dolomite", "numberLoops": "5"}}]], "claim rewards from camelot, swap rewards and grail into xgrail, then deposit xgrail into camelot": [[{"name": "claim", "args": {"protocolName": "camelot"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "xgrail"}}, {"name": "swap", "args": {"inputToken": "grail", "outputToken": "xgrail"}}, {"name": "deposit", "args": {"protocolName": "camelot", "amount": "outputAmount", "token": "xgrail"}}]], "claim redacted rewards and relock btrfly": [[{"name": "claim", "args": {"protocolName": "redacted"}}, {"name": "lock", "args": {"protocolName": "redacted", "token": "btrfly", "amount": "outputAmount"}}]], "withdraw all my usdc from aave and deposit into compound": [[{"name": "withdraw", "args": {"protocolName": "aave", "token": "usdc", "amount": "all"}}, {"name": "deposit", "args": {"protocolName": "compound", "amount": "outputAmount", "token": "usdc"}}]], "if bitcoin goes below 15k, buy eth": [[{"name": "condition", "args": {"subject": "bitcoin", "comparator": "<=", "value": "15000.0", "type": "price"}}, {"name": "swap", "args": {"outputToken": "eth"}}], [{"name": "condition", "args": {"subject": "bitcoin", "comparator": "<=", "value": "15000.0", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"outputToken": "eth"}}]], "claim stargate rewards, swap to eth, redeposit": [[{"name": "claim", "args": {"protocolName": "stargate"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth"}}, {"name": "deposit", "args": {"protocolName": "stargate", "amount": "outputAmount", "token": "eth"}}]], "buy eth with 5000 usdc. sell eth for usdc if the price goes below 1000 or above 3000": [[{"name": "swap", "args": {"inputAmount": "5000", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "1000", "type": "price", "value_units": "usd"}}, {"name": "condition", "args": {"operator": "or", "subject": "eth", "comparator": ">=", "value": "3000", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc"}}]], "buy dpx with rdpx if the price of dpx/rdpx <= 0.8": [[{"name": "swap", "args": {"inputToken": "rdpx", "outputToken": "dpx"}}, {"name": "condition", "args": {"subject": "dpx/rdpx", "comparator": "<=", "value": "0.8", "type": "price"}}]], "unstake all my plsdpx and sell it for dpx if the price of plsdpx/dpx < 0.95": [[{"name": "unstake", "args": {"amount": "all", "token": "plsdpx", "protocolName": "all"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "plsdpx", "outputToken": "dpx"}}, {"name": "condition", "args": {"subject": "plsdpx/dpx", "comparator": "<=", "value": "0.95", "type": "price"}}]], "bridge 4 eth from arbitrum to base and buy coin when gas is under 12": [[{"name": "bridge", "args": {"amount": "4", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "coin", "chainName": "base"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "12", "type": "gas"}}]], "swap all my tokens to eth and buy arb when gas is below 10": [[{"name": "swap", "args": {"inputToken": "all", "outputToken": "eth"}}, {"name": "swap", "args": {"inputToken": "eth", "outputToken": "arb", "inputAmount": "outputAmount"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}], [{"name": "swap", "args": {"inputToken": "all", "inputAmount": "all", "outputToken": "eth"}}, {"name": "swap", "args": {"inputToken": "eth", "outputToken": "arb", "inputAmount": "outputAmount"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}], [{"name": "swap", "args": {"inputToken": "all", "inputAmount": "all", "outputToken": "eth"}}, {"name": "swap", "args": {"inputToken": "eth", "outputToken": "arb"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}]], "swap all my tokens to eth and transfer to niyant.eth on mainnet": [[{"name": "swap", "args": {"inputToken": "all", "outputToken": "eth", "chainName": "ethereum"}}, {"name": "transfer", "args": {"amount": "outputAmount", "token": "eth", "recipient": "niyant.eth", "chainName": "ethereum"}}], [{"name": "swap", "args": {"inputToken": "all", "inputAmount": "all", "outputToken": "eth", "chainName": "ethereum"}}, {"name": "transfer", "args": {"amount": "outputAmount", "token": "eth", "recipient": "niyant.eth", "chainName": "ethereum"}}], [{"name": "swap", "args": {"inputToken": "all", "inputAmount": "all", "outputToken": "eth"}}, {"name": "transfer", "args": {"amount": "outputAmount", "token": "eth", "recipient": "niyant.eth", "chainName": "ethereum"}}]], "swap half of all my tokens to eth and transfer to niyant.eth on mainnet": [[{"name": "swap", "args": {"inputAmount": "half", "inputToken": "all", "outputToken": "eth", "chainName": "ethereum"}}, {"name": "transfer", "args": {"amount": "outputAmount", "token": "eth", "recipient": "niyant.eth", "chainName": "ethereum"}}]], "can you use my dai to purchase sweed": [[{"name": "swap", "args": {"inputToken": "dai", "outputToken": "sweed"}}]], "use dai to purchase sweed": [[{"name": "swap", "args": {"inputToken": "dai", "outputToken": "sweed"}}]], "deposit 50 usdc and 50 usdt into dodo finance usdc-usdt pool, then every friday claim dodo and swap to usdt": [[{"name": "deposit", "args": {"protocolName": "dodo finance", "poolName": "usdc-usdt", "amount": "50", "token": "usdc"}}, {"name": "deposit", "args": {"protocolName": "dodo finance", "poolName": "usdc-usdt", "amount": "50", "token": "usdt"}}, {"name": "time", "args": {"start_time": "friday", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "claim", "args": {"protocolName": "dodo finance"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "dodo", "outputToken": "usdt"}}]], "when my eth balance hits 1, buy 0.5 eth worth of saint once the price of saint/eth is under 20 and gas under 15": [[{"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1", "type": "balance"}}, {"name": "swap", "args": {"inputAmount": "0.5", "inputToken": "eth", "outputToken": "saint"}}, {"name": "condition", "args": {"subject": "saint/eth", "comparator": "<=", "value": "20", "type": "price"}}, {"name": "condition", "args": {"operator": "and", "subject": "gas", "comparator": "<=", "value": "15", "type": "gas"}}], [{"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1", "type": "balance"}}, {"name": "swap", "args": {"inputAmount": "0.5", "inputToken": "eth", "outputToken": "saint"}}, {"name": "condition", "args": {"subject": "saint/eth", "comparator": "<=", "value": "20", "type": "price"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "15", "type": "gas"}}]], "stake stg on stargate, then every friday claim and restake rewards": [[{"name": "stake", "args": {"protocolName": "stargate", "token": "stg"}}, {"name": "time", "args": {"start_time": "friday", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "claim", "args": {"protocolName": "stargate"}}, {"name": "stake", "args": {"protocolName": "stargate", "amount": "outputAmount", "token": "outputToken"}}], [{"name": "stake", "args": {"protocolName": "stargate", "token": "stg"}}, {"name": "time", "args": {"start_time": "friday", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "claim", "args": {"protocolName": "stargate", "token": "all"}}, {"name": "stake", "args": {"protocolName": "stargate", "amount": "outputAmount", "token": "outputToken"}}], [{"name": "stake", "args": {"protocolName": "stargate", "amount": "all", "token": "stg"}}, {"name": "time", "args": {"start_time": "friday", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "claim", "args": {"protocolName": "stargate"}}, {"name": "stake", "args": {"protocolName": "stargate", "amount": "outputAmount", "token": "outputToken"}}]], "swap 10 eth for usdc when the eth market cap is below 20": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "20", "type": "market cap"}}]], "swap 10 eth for usdc when the market cap of eth is below 1600": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "1600", "type": "market cap", "value_units": "usd"}}]], "swap 10 eth for usdc when my eth balance is below 1600": [[{"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "1600", "type": "balance"}}, {"name": "swap", "args": {"inputAmount": "10", "inputToken": "eth", "outputToken": "usdc"}}]], "when my camelot rewards balance is greater than 10 eth, swap to usdc": [[{"name": "condition", "args": {"subject": "camelot rewards", "comparator": ">=", "value": "10", "value_token": "eth", "type": "balance"}}, {"name": "swap", "args": {"inputToken": "camelot rewards", "outputToken": "usdc"}}]], "deposit 10 eth into the yearn yeth pool when the apy is 15%": [[{"name": "deposit", "args": {"protocolName": "yearn", "poolName": "yeth", "amount": "10", "token": "eth"}}, {"name": "condition", "args": {"subject": "apy", "comparator": "==", "value": "15%", "type": "yield"}}]], "deposit 10 eth into the yeth pool on yearn when apy is 15%": [[{"name": "deposit", "args": {"protocolName": "yearn", "poolName": "yeth", "amount": "10", "token": "eth"}}, {"name": "condition", "args": {"subject": "apy", "comparator": "==", "value": "15%", "type": "yield"}}], [{"name": "deposit", "args": {"protocolName": "yearn", "poolName": "yeth", "amount": "10", "token": "eth"}}, {"name": "condition", "args": {"subject": "apy", "comparator": ">=", "value": "15%", "type": "yield"}}]], "buy 1 eth": [[{"name": "swap", "args": {"outputAmount": "1", "outputToken": "eth"}}]], "swap all my wbtc for usdt at 12pm tomorrow or if usdt price goes below $0.9": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "wbtc", "outputToken": "usdt"}}, {"name": "time", "args": {"start_time": "12pm tomorrow"}}, {"name": "condition", "args": {"operator": "or", "subject": "usdt", "comparator": "<=", "value": "0.9", "type": "price", "value_units": "usd"}}]], "swap xyz for abc when gas is below 14 and abc market cap is below 100 eth": [[{"name": "swap", "args": {"inputToken": "xyz", "outputToken": "abc"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "14", "type": "gas"}}, {"name": "condition", "args": {"operator": "and", "subject": "abc", "comparator": "<=", "value": "100", "value_token": "eth", "type": "market cap"}}], [{"name": "swap", "args": {"inputToken": "xyz", "outputToken": "abc"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "14", "type": "gas"}}, {"name": "condition", "args": {"subject": "abc", "comparator": "<=", "value": "100", "value_token": "eth", "type": "market cap"}}]], "swap all my eth for usdc when gas is less than 20 or eth/usdt goes above 2000": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas"}}, {"name": "condition", "args": {"operator": "or", "subject": "eth/usdt", "comparator": ">=", "value": "2000", "type": "price"}}]], "swap all my wbtc for usdt when my eth balance is greater than 2 or eth/dai goes above 2000": [[{"name": "swap", "args": {"inputToken": "wbtc", "inputAmount": "all", "outputToken": "usdt"}}, {"name": "condition", "args": {"subject": "eth", "comparator": ">=", "value": "2", "type": "balance"}}, {"name": "condition", "args": {"operator": "or", "subject": "eth/dai", "comparator": ">=", "value": "2000", "type": "price"}}]], "swap 1 eth for usdc with 2% slippage": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc", "slippage": "2%"}}]], "swap 1 eth for usdc with max 3% slippage": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc", "slippage": "3%"}}]], "bridge 1 eth for usdc with 2% slippage": [[{"name": "bridge", "args": {"amount": "1", "token": "eth"}}]], "bridge 1 eth for usdc then swap to dai with max 2% slippage": [[{"name": "bridge", "args": {"amount": "1", "token": "eth"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "dai", "slippage": "2%"}}]], "swap all my usdt for dai": [[{"name": "swap", "args": {"inputToken": "usdt", "outputToken": "dai", "inputAmount": "all"}}]], "swap all my usdt and usdc for dai": [[{"name": "swap", "args": {"inputToken": ["usdt", "usdc"], "inputAmount": ["all", "all"], "outputToken": "dai"}}]], "withdraw all my usdc and usdt from rodeo, convert to eth, and bridge all of it to mainnet": [[{"name": "withdraw", "args": {"protocolName": "rodeo", "amount": "all", "token": "usdc"}}, {"name": "withdraw", "args": {"protocolName": "rodeo", "amount": "all", "token": "usdt"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": ["usdc", "usdt"], "outputToken": "eth"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "destinationChainName": "ethereum"}}]], "deposit 10 usdc and usdt into the uniswap usdc-usdt pool": [[{"name": "deposit", "args": {"protocolName": "uniswap", "poolName": "usdc-usdt", "amount": "10", "token": "usdc"}}, {"name": "deposit", "args": {"protocolName": "uniswap", "poolName": "usdc-usdt", "amount": "10", "token": "usdt"}}]], "swap all my dai and half my usdt for usdc on curve": [[{"name": "swap", "args": {"protocolName": "curve", "inputAmount": ["all", "half"], "inputToken": ["dai", "usdt"], "outputToken": "usdc"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "dai", "outputToken": "usdc", "protocolName": "curve"}}, {"name": "swap", "args": {"inputAmount": "half", "inputToken": "usdt", "outputToken": "usdc", "protocolName": "curve"}}]], "buy eth with 1000 usdc when eth/usdc is less than 2000": [[{"name": "swap", "args": {"inputAmount": "1000", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth/usdc", "comparator": "<=", "value": "2000", "type": "price"}}]], "buy eth with 1000 usdc when eth/usdc price is less than 2000": [[{"name": "swap", "args": {"inputAmount": "1000", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth/usdc", "comparator": "<=", "value": "2000", "type": "price"}}]], "buy eth with 1000 usdc when the price of eth/usdc is less than 2000": [[{"name": "swap", "args": {"inputAmount": "1000", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth/usdc", "comparator": "<=", "value": "2000", "type": "price"}}]], "when my usdc balance hits 3000, send it to arkham.eth": [[{"name": "condition", "args": {"subject": "usdc", "comparator": "==", "value": "3000", "type": "balance"}}, {"name": "transfer", "args": {"token": "usdc", "recipient": "arkham.eth"}}]], "bridge 1 eth from etheruem to arbitum": [[{"name": "bridge", "args": {"amount": "1", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}]], "deposit 1 gril into camlot": [[{"name": "deposit", "args": {"amount": "1", "token": "gril", "protocolName": "camelot"}}]], "buy ustd with 2 eth": [[{"name": "swap", "args": {"inputAmount": "2", "inputToken": "eth", "outputToken": "usdt"}}]], "when my dolomite rewards hit $2000, swap them for usdc": [[{"name": "condition", "args": {"subject": "dolomite rewards", "comparator": "==", "value": "2000", "value_units": "usd", "type": "balance"}}, {"name": "swap", "args": {"inputToken": "dolomite rewards", "outputToken": "usdc"}}], [{"name": "condition", "args": {"subject": "dolomite rewards", "comparator": "==", "value": "2000", "value_units": "usd", "type": "price"}}, {"name": "swap", "args": {"inputToken": "dolomite rewards", "outputToken": "usdc"}}]], "when my dolomite rewards balance hits $2000, swap them for usdc": [[{"name": "condition", "args": {"subject": "dolomite rewards", "comparator": "==", "value": "2000", "value_units": "usd", "type": "balance"}}, {"name": "swap", "args": {"inputToken": "dolomite rewards", "outputToken": "usdc"}}], [{"name": "condition", "args": {"subject": "dolomite rewards", "comparator": "==", "value": "2000", "value_units": "usd", "type": "balance"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "dolomite rewards", "outputToken": "usdc"}}]], "once my plutus rewards hit 2 eth, claim rewards and transfer to person.eth": [[{"name": "condition", "args": {"subject": "plutus rewards", "comparator": "==", "value": "2", "value_token": "eth", "type": "balance"}}, {"name": "claim", "args": {"protocolName": "plutus"}}, {"name": "transfer", "args": {"token": "outputToken", "amount": "outputAmount", "recipient": "person.eth"}}]], "sell 2 eth": [[{"name": "swap", "args": {"inputAmount": "2", "inputToken": "eth"}}]], "buy 0.1 eth": [[{"name": "swap", "args": {"outputAmount": "0.1", "outputToken": "eth"}}]], "buy 10 usdc": [[{"name": "swap", "args": {"outputAmount": "10", "outputToken": "usdc"}}]], "once btc hits 20000, sell all my btc at midnight": [[{"name": "condition", "args": {"subject": "btc", "comparator": "==", "value": "20000", "type": "price"}}, {"name": "time", "args": {"start_time": "midnight"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "btc"}}], [{"name": "condition", "args": {"subject": "btc", "comparator": "==", "value": "20000", "type": "price", "value_units": "usd"}}, {"name": "time", "args": {"start_time": "midnight"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "btc"}}]], "at 2am, swap all my wbtc for eth if gas is less than 15": [[{"name": "time", "args": {"start_time": "2am"}}, {"name": "swap", "args": {"inputToken": "wbtc", "inputAmount": "all", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "15", "type": "gas"}}]], "swap 1 eth to usdc with 1.5% slippage when gas is less than 10": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc", "slippage": "1.5%"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}]], "take my 1000 usdc, convert it into eth, deposit it into my prologue nft on spice, then borrow 60%": [[{"name": "swap", "args": {"inputAmount": "1000", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "deposit", "args": {"protocolName": "spice", "poolName": "prologue nft", "amount": "outputAmount", "token": "eth"}}, {"name": "borrow", "args": {"protocolName": "spice", "poolName": "prologue nft", "amount": "60%", "token": "outputToken"}}]], "bridge 5 eth from arbitrum to ethereum mainnet and long $pepe": [[{"name": "bridge", "args": {"amount": "5", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "ethereum"}}, {"name": "long", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "pepe", "chainName": "ethereum"}}], [{"name": "bridge", "args": {"amount": "5", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "ethereum"}}, {"name": "long", "args": {"inputToken": "eth", "outputToken": "pepe", "chainName": "ethereum"}}]], "swap everything i own on eth mainnet to $eth and bridge it all to arbitrum": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "all", "outputToken": "eth", "chainName": "ethereum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "all", "outputToken": "eth", "chainName": "ethereum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}]], "withdraw 1 eth from my jonesdao position and ape $jesus": [[{"name": "withdraw", "args": {"protocolName": "jonesdao", "amount": "1", "token": "eth"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "jesus"}}]], "swap by 2 $eth for $geth, convert to 1 $reth and 1 $steth, stake both on rocketpool": [[{"name": "swap", "args": {"inputAmount": "2", "inputToken": "eth", "outputToken": "geth"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "geth", "outputToken": "reth"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "geth", "outputToken": "steth"}}, {"name": "stake", "args": {"amount": "outputAmount", "token": "reth"}}, {"name": "stake", "args": {"amount": "outputAmount", "token": "steth"}}]], "deposit 0.33 eth and 500 usdt in the eth/usdt lp on uniswap": [[{"name": "deposit", "args": {"protocolName": "uniswap", "poolName": "eth/usdt", "amount": "0.33", "token": "eth"}}, {"name": "deposit", "args": {"protocolName": "uniswap", "poolName": "eth/usdt", "amount": "500", "token": "usdt"}}]], "short $uni on october 16 at 12pm est": [[{"name": "time", "args": {"start_time": "october 16 at 12pm est"}}, {"name": "short", "args": {"leverageMultiplier": "1", "outputToken": "uni"}}], [{"name": "time", "args": {"start_time": "october 16 at 12pm est"}}, {"name": "short", "args": {"inputToken": "uni", "outputToken": "uni"}}]], "buy $eth with 7500 $usdc when $eth is $1400 and sell it all at $1600": [[{"name": "swap", "args": {"inputAmount": "7500", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1400", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc", "outputAmount": "7500"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1600", "type": "price", "value_units": "usd"}}]], "lend weth as collateral on polylend, borrow weth on polylend": [[{"name": "lend", "args": {"protocolName": "polylend", "token": "weth"}}, {"name": "borrow", "args": {"protocolName": "polylend", "token": "weth"}}]], "lend eth as collateral on wing-finance which earns a supply apy of 90.79%. borrow usdt against your eth collateral with a max ltv of 85% and a borrow apy of -1.55% (the interest you need to pay). farm with usdt on paraspace-lending-v1 which earns 26.65%.": [[{"name": "lend", "args": {"protocolName": "wing-finance", "amount": "all", "token": "eth"}}, {"name": "borrow", "args": {"protocolName": "wing-finance", "amount": "outputAmount", "token": "usdt", "collateraltoken": "eth", "maxltv": "85"}}, {"name": "deposit", "args": {"protocolName": "paraspace-lending-v1", "amount": "outputAmount", "token": "usdt"}}]], "on pancakeswap and zksync era network, swap all of my usdc for weth, and reverse this process": [[{"name": "swap", "args": {"protocolName": "pancakeswap", "inputToken": "usdc", "inputAmount": "all", "outputToken": "weth", "chainName": "zksync"}}, {"name": "swap", "args": {"protocolName": "pancakeswap", "inputToken": "weth", "inputAmount": "outputAmount", "outputToken": "usdc", "chainName": "zksync"}}]], "swap 2.5 eth for sis and and 2.5 eth for usdc (on symbiosis finance & the zksync network) and then swap both back to eth": [[{"name": "swap", "args": {"protocolName": "symbiosis finance", "inputAmount": "2.5", "inputToken": "eth", "outputToken": "sis", "chainName": "zksync"}}, {"name": "swap", "args": {"protocolName": "symbiosis finance", "inputAmount": "2.5", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync"}}, {"name": "swap", "args": {"protocolName": "symbiosis finance", "inputAmount": ["outputAmount", "outputAmount"], "inputToken": ["sis", "usdc"], "outputToken": "eth", "chainName": "zksync"}}], [{"name": "swap", "args": {"protocolName": "symbiosis finance", "inputAmount": "2.5", "inputToken": "eth", "outputToken": "sis", "chainName": "zksync"}}, {"name": "swap", "args": {"protocolName": "symbiosis finance", "inputAmount": "2.5", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync"}}, {"name": "swap", "args": {"protocolName": "symbiosis finance", "inputAmount": "outputAmount", "inputToken": "sis", "outputToken": "eth", "chainName": "zksync"}}, {"name": "swap", "args": {"protocolName": "symbiosis finance", "inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "eth", "chainName": "zksync"}}]], "on mav protocol, swap 1 eth for lusd, 1 eth for usdc, and 1 eth for mav, lp into usdc-lusd pair": [[{"name": "swap", "args": {"protocolName": "mav", "inputAmount": "1", "inputToken": "eth", "outputToken": "lusd"}}, {"name": "swap", "args": {"protocolName": "mav", "inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "swap", "args": {"protocolName": "mav", "inputAmount": "1", "inputToken": "eth", "outputToken": "mav"}}, {"name": "deposit", "args": {"protocolName": "mav", "poolName": "usdc-lusd", "amount": "outputAmount", "token": "outputToken"}}], [{"name": "swap", "args": {"protocolName": "mav", "inputAmount": "1", "inputToken": "eth", "outputToken": "lusd"}}, {"name": "swap", "args": {"protocolName": "mav", "inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "swap", "args": {"protocolName": "mav", "inputAmount": "1", "inputToken": "eth", "outputToken": "mav"}}, {"name": "deposit", "args": {"protocolName": "mav", "poolName": "usdc-lusd", "amount": "outputAmount", "token": "lusd"}}], [{"name": "swap", "args": {"protocolName": "mav", "inputAmount": "1", "inputToken": "eth", "outputToken": "lusd"}}, {"name": "swap", "args": {"protocolName": "mav", "inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "swap", "args": {"protocolName": "mav", "inputAmount": "1", "inputToken": "eth", "outputToken": "mav"}}, {"name": "deposit", "args": {"protocolName": "mav", "poolName": "usdc-lusd", "amount": "outputAmount", "token": "lusd"}}, {"name": "deposit", "args": {"protocolName": "mav", "poolName": "usdc-lusd", "amount": "outputAmount", "token": "usdc"}}, {"name": "deposit", "args": {"protocolName": "mav", "poolName": "usdc-lusd", "amount": "outputAmount", "token": "mav"}}]], "vote on the thena bnb/the pool every wednesday at 8pm est": [[{"name": "vote", "args": {"protocolName": "thena", "poolName": "bnb/the"}}, {"name": "time", "args": {"start_time": "wednesday 8pm est", "recurrence": {"type": "weeks", "interval": 1}}}]], "deposit all of my wsteth in the kyber axl-wsteth-wsteth pool on pendle": [[{"name": "deposit", "args": {"protocolName": "pendle", "poolName": "axl-wsteth-wsteth", "amount": "all", "token": "wsteth"}}]], "claim all rewards, swap everything into eth, bridge to mainnet": [[{"name": "claim", "args": {"protocolName": "all"}}, {"name": "swap", "args": {"inputAmount": "all", "outputToken": "eth", "inputToken": "outputToken"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "destinationChainName": "ethereum"}}], [{"name": "claim", "args": {"protocolName": "all"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "outputToken": "eth", "inputToken": "outputToken"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "destinationChainName": "ethereum"}}]], "claim rlbtrfly rewards whenever available, convert to eth and deposit into the spice blur vault": [[{"name": "claim", "args": {"token": "rlbtrfly", "protocolName": "all"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth"}}, {"name": "deposit", "args": {"protocolName": "spice", "poolName": "blur", "amount": "outputAmount", "token": "eth"}}]], "swap 1 $eth to $usdc and then bridge it to arbitrum": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "destinationChainName": "arbitrum"}}]], "bridge 2 $eth to arbitrum, swap $eth to $gmx, open an 0.5 $eth short position with 10x leverage with $eth market price, set stop loss at $1500 per $eth": [[{"name": "bridge", "args": {"amount": "2", "token": "eth", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "gmx", "chainName": "arbitrum"}}, {"name": "short", "args": {"inputAmount": "0.5", "inputToken": "eth", "outputToken": "eth", "chainName": "arbitrum", "leverageMultiplier": "10"}}, {"name": "condition", "args": {"subject": "eth", "comparator": ">=", "value": "1500", "type": "price", "value_units": "usd"}}]], "long $eth on arbitrum with 1 $eth": [[{"name": "long", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "eth", "chainName": "arbitrum"}}], [{"name": "long", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "eth", "chainName": "arbitrum", "leverageMultiplier": "1"}}]], "send 0.5 $eth to bicep.eth": [[{"name": "transfer", "args": {"amount": "0.5", "token": "eth", "recipient": "bicep.eth"}}]], "withdraw all funds from the spice finance prologue vault, swap to eth, bridge all funds to arbitrum when gas is <10 swap everything except gas into steth": [[{"name": "withdraw", "args": {"protocolName": "spice finance", "poolName": "prologue", "amount": "all"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "destinationChainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "swap", "args": {"inputAmount": "all", "outputToken": "steth", "chainName": "arbitrum", "inputToken": "eth"}}], [{"name": "withdraw", "args": {"protocolName": "spice finance", "poolName": "prologue", "amount": "all"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "destinationChainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "outputToken": "steth", "chainName": "arbitrum", "inputToken": "eth"}}]], "send 0.05 eth to 0x6955e7216e8d9d2ab2ca5ca5e31ccf7307e9d59f when gas is < 10": [[{"name": "transfer", "args": {"amount": "0.05", "token": "eth", "recipient": "0x6955e7216e8d9d2ab2ca5ca5e31ccf7307e9d59f"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}]], "send all my funds to 0x6955e7216e8d9d2ab2ca5ca5e31ccf7307e9d59f": [[{"name": "transfer", "args": {"amount": "all", "recipient": "0x6955e7216e8d9d2ab2ca5ca5e31ccf7307e9d59f"}}]], "bridge all funds from canto to ethereum, swap everything to eth": [[{"name": "bridge", "args": {"amount": "all", "token": "all", "sourceChainName": "canto", "destinationChainName": "ethereum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "all", "outputToken": "eth", "chainName": "ethereum"}}], [{"name": "bridge", "args": {"amount": "all", "sourceChainName": "canto", "destinationChainName": "ethereum"}}, {"name": "swap", "args": {"inputAmount": "all", "outputToken": "eth", "chainName": "ethereum", "inputToken": "outputToken"}}]], "swap 0.22 eth into steth when gas is sub 6": [[{"name": "swap", "args": {"inputAmount": "0.22", "inputToken": "eth", "outputToken": "steth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "6", "type": "gas"}}]], "claim blur points whenever they release, swap them to eth if gas is <40": [[{"name": "claim", "args": {"protocolName": "blur"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "40", "type": "gas"}}]], "sell all my $temple for usdc when temple/usdc > 1.03. afterwards swap the usdc to eth when gas is <6": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "temple", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "temple/usdc", "comparator": ">=", "value": "1.03", "type": "price"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "6", "type": "gas"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "temple", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "temple/usdc", "comparator": ">=", "value": "1.03", "type": "price"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "6", "type": "gas"}}]], "withdraw all my eth from yearn when gas is less than <6": [[{"name": "withdraw", "args": {"amount": "all", "protocolName": "yearn", "token": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "6", "type": "gas"}}]], "sell all my $dpi tokens for eth when gas is less than 6": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "dpi", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "6", "type": "gas"}}]], "swap all my merit circle, dai, fxs, for eth. then brdige all the eth as well as my 12,227 usdc position over to arbitrum when gas is <10": [[{"name": "swap", "args": {"inputAmount": ["all", "all", "all"], "inputToken": ["merit circle", "dai", "fxs"], "outputToken": "eth"}}, {"name": "bridge", "args": {"amount": "all", "token": "eth", "destinationChainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "12227", "token": "usdc", "destinationChainName": "arbitrum", "sourceChainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}]], "unvest 300000 trove from nitro cartel and swap to usdc": [[{"name": "unlock", "args": {"protocolName": "nitro cartel", "amount": "300000", "token": "trove"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "trove", "outputToken": "usdc"}}], [{"name": "unlock", "args": {"protocolName": "nitro cartel", "amount": "300000", "token": "trove"}}, {"name": "swap", "args": {"inputAmount": "300000", "inputToken": "trove", "outputToken": "usdc"}}]], "revest remaining trove at 16:00 utc": [[{"name": "lock", "args": {"protocolName": "all", "token": "trove"}}, {"name": "time", "args": {"start_time": "16:00 utc"}}], [{"name": "lock", "args": {"protocolName": "all", "token": "trove", "amount": "all"}}, {"name": "time", "args": {"start_time": "16:00 utc"}}], [{"name": "lock", "args": {"token": "trove", "amount": "all"}}, {"name": "time", "args": {"start_time": "16:00 utc"}}]], "perform $xxx swap to $yyy using ___ (specific dex) when gas is below __(given gwei)": [[{"name": "swap", "args": {"inputToken": "xx", "outputToken": "yay"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "given", "value_token": "gwei", "type": "gas"}}]], "when gas is below x use defillama to swap eth or usdc to x coin": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "x", "type": "gas"}}, {"name": "swap", "args": {"protocolName": "defillama", "inputToken": ["eth", "usdc"], "outputToken": "x"}}]], "stake eth on lido": [[{"name": "stake", "args": {"protocolName": "lido", "token": "eth"}}]], "bridge through stargate 100 usdc with cheapest fee's on any eth l2": [[{"name": "bridge", "args": {"protocolName": "stargate", "amount": "100", "token": "usdc"}}]], "claim my presale on this contract and do it weekly": [[{"name": "claim", "args": {"protocolName": "all"}}, {"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}}}]], "trade 10000 usdc for $rlb when price reaches 10 cents": [[{"name": "swap", "args": {"inputAmount": "10000", "inputToken": "usdc", "outputToken": "rlb"}}, {"name": "condition", "args": {"subject": "rlb", "comparator": "==", "value": "0.10", "type": "price", "value_units": "usd"}}], [{"name": "swap", "args": {"inputAmount": "10000", "inputToken": "usdc", "outputToken": "rlb"}}, {"name": "condition", "args": {"subject": "rlb", "comparator": "==", "value": "0.10", "type": "price"}}], [{"name": "swap", "args": {"inputAmount": "10000", "inputToken": "usdc", "outputToken": "rlb"}}, {"name": "condition", "args": {"subject": "rlb", "comparator": "==", "value": "0.1", "type": "price", "value_units": "usd"}}]], "when gas is under 20, bridge 1 eth to base and swap to $wig": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas"}}, {"name": "bridge", "args": {"amount": "1", "token": "eth", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "wig", "chainName": "base"}}]], "claim livethe rewards once their balance is greater than 10$ and deposit them back into the thena livethe pool": [[{"name": "claim", "args": {"protocolName": "thena", "poolName": "livethe", "token": "livethe"}}, {"name": "deposit", "args": {"protocolName": "thena", "poolName": "livethe", "amount": "outputAmount", "token": "outputToken"}}, {"name": "condition", "args": {"subject": "livethe rewards", "comparator": ">=", "value": "10", "value_units": "usd", "type": "balance"}}]], "claims livethe rewards once the balance is greater than 10$ and swap to usdt": [[{"name": "claim", "args": {"protocolName": "all", "token": "livethe"}}, {"name": "swap", "args": {"inputToken": "outputToken", "inputAmount": "outputAmount", "outputToken": "usdt"}}, {"name": "condition", "args": {"subject": "livethe rewards", "comparator": ">=", "value": "10", "value_units": "usd", "type": "balance"}}]], "vote on thena on wednesday at 2355 utc": [[{"name": "vote", "args": {"protocolName": "thena"}}, {"name": "time", "args": {"start_time": "wednesday at 23:55 utc"}}]], "when camelot rewards balance hits $100. claim and convert all rewards to weth. then deposit in spice vault.": [[{"name": "condition", "args": {"subject": "camelot rewards", "comparator": "==", "value": "100", "value_units": "usd", "type": "balance"}}, {"name": "claim", "args": {"protocolName": "camelot"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "outputToken", "outputToken": "weth"}}, {"name": "deposit", "args": {"protocolName": "spice", "amount": "outputAmount", "token": "weth"}}], [{"name": "condition", "args": {"subject": "camelot rewards", "comparator": "==", "value": "100", "type": "balance"}}, {"name": "claim", "args": {"protocolName": "camelot", "token": "all"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "outputToken", "outputToken": "weth"}}, {"name": "deposit", "args": {"protocolName": "spice", "amount": "outputAmount", "token": "weth"}}]], "short eth with usdc if it goes below or touches x price": [[{"name": "short", "args": {"inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "x", "type": "price", "value_units": "usd"}}]], "repay my borrow position on dolomite when borrow apy rises above 69%": [[{"name": "repay", "args": {"protocolName": "dolomite"}}, {"name": "condition", "args": {"subject": "borrow apy", "comparator": ">=", "value": "69%", "type": "yield"}}]], "pull my liquidity on uniswap if price falls below x": [[{"name": "withdraw", "args": {"protocolName": "uniswap", "token": "liquidity", "amount": "all"}}, {"name": "condition", "args": {"subject": "liquidity", "comparator": "<=", "value": "x", "type": "price", "value_units": "usd"}}]], "sell half of asset x as soon as price hits $2": [[{"name": "swap", "args": {"inputAmount": "half", "inputToken": "x"}}, {"name": "condition", "args": {"subject": "x", "comparator": "==", "value": "2", "type": "price", "value_units": "usd"}}], [{"name": "swap", "args": {"inputAmount": "half", "inputToken": "asset x"}}, {"name": "condition", "args": {"subject": "asset x", "comparator": "==", "value": "2", "type": "price", "value_units": "usd"}}], [{"name": "swap", "args": {"inputAmount": "half", "inputToken": "asset x"}}, {"name": "condition", "args": {"subject": "asset x", "comparator": "==", "value": "2", "type": "price"}}]], "when gas is below 8 bridge 0.1 eth to zksync": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "8", "type": "gas"}}, {"name": "bridge", "args": {"amount": "0.1", "token": "eth", "destinationChainName": "zksync"}}]], "at exactly 10pm tomorrow buy \"random ca\" with 40 gwei": [[{"name": "time", "args": {"start_time": "10pm tomorrow"}}, {"name": "swap", "args": {"inputAmount": "40", "inputToken": "gwei", "outputToken": "random ca"}}]], "swap 0.05 eth to usdt and send the swapped usdt to \"wallet address\"": [[{"name": "swap", "args": {"inputAmount": "0.05", "inputToken": "eth", "outputToken": "usdt"}}, {"name": "transfer", "args": {"amount": "outputAmount", "token": "usdt", "recipient": "wallet address"}}]], "if usdr goes below 0.98, swap my usdr to dai": [[{"name": "condition", "args": {"subject": "usdr", "comparator": "<=", "value": "0.98", "type": "price"}}, {"name": "swap", "args": {"inputToken": "usdr", "outputToken": "dai"}}], [{"name": "condition", "args": {"subject": "usdr", "comparator": "<=", "value": "0.98", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputToken": "usdr", "outputToken": "dai"}}]], "swap 0.25eth for *contract-adress using 5% slippage": [[{"name": "swap", "args": {"inputAmount": "0.25", "inputToken": "eth", "outputToken": "contract-adress", "slippage": "5%"}}]], "long btc with 3x leverage at 6pm gmt today": [[{"name": "long", "args": {"outputToken": "btc", "leverageMultiplier": "3"}}, {"name": "time", "args": {"start_time": "6pm gmt today"}}], [{"name": "long", "args": {"outputToken": "btc", "leverageMultiplier": "3x"}}, {"name": "time", "args": {"start_time": "6pm gmt today"}}], [{"name": "long", "args": {"inputToken": "btc", "outputToken": "btc", "leverageMultiplier": "3x"}}, {"name": "time", "args": {"start_time": "6pm gmt today"}}]], "stake 3 eth at lido for 2 weeks": [[{"name": "stake", "args": {"amount": "3", "token": "eth", "protocolName": "lido"}}, {"name": "time", "args": {"end_time": "2 weeks"}}]], "deposit 0.35 eth into aave, borrow $400 usdc and swap to $bitcoin": [[{"name": "deposit", "args": {"protocolName": "aave", "amount": "0.35", "token": "eth"}}, {"name": "borrow", "args": {"protocolName": "aave", "amount": "400", "token": "usdc"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "bitcoin"}}]], "lock steth for 2 months": [[{"name": "lock", "args": {"protocolName": "all", "token": "steth"}}, {"name": "time", "args": {"end_time": "2 months"}}]], "move all assets in active wallet to *x-adress": [[{"name": "transfer", "args": {"amount": "all", "recipient": "*x-adress"}}]], "when eth is below $1600, buy $500 usd worth each week": [[{"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "1600", "type": "price", "value_units": "usd"}}, {"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}}}, {"name": "swap", "args": {"inputAmount": "500", "inputToken": "usd", "outputToken": "eth"}}]], "vote for <pool> on <protocol> every wednesday at 2355h (utc)": [[{"name": "vote", "args": {"protocolName": "all"}}, {"name": "time", "args": {"start_time": "wednesday at 2355h (utc)", "recurrence": {"type": "weeks", "interval": 1}}}]], "at 10am, swap 100 usdc to eth, if gas below 50": [[{"name": "time", "args": {"start_time": "10am"}}, {"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "50", "type": "gas"}}]], "bridge 2000 usdc to arbitrum, when gas <30": [[{"name": "bridge", "args": {"amount": "2000", "token": "usdc", "destinationChainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "30", "type": "gas"}}]], "whenever the eth price reaches $1,500, buy eth": [[{"name": "swap", "args": {"outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1500", "type": "price", "value_units": "usd"}}]], "vote for the most profitable strategy on any >10m mcap -pool in the thena ve(3,3) voting pools. do this at 11:55. at 12:05, collect the rewards of the previous voting epoch and exchange them for doge at market prices, using swap aggregator swap.defillama.com with 0.5% slippage.": [[{"name": "vote", "args": {"protocolName": "thena", "poolName": "ve(3,3)"}}, {"name": "time", "args": {"start_time": "11:55"}}, {"name": "time", "args": {"start_time": "12:05"}}, {"name": "claim", "args": {"protocolName": "thena", "poolName": "ve(3,3)"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "doge", "slippage": "0.5%"}}]], "buy 1 eth when eth price is $1550": [[{"name": "swap", "args": {"outputAmount": "1", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1550", "type": "price", "value_units": "usd"}}]], "lp 2 eth into balancer and compound the rewards every 3 days": [[{"name": "deposit", "args": {"protocolName": "balancer", "amount": "2", "token": "eth"}}, {"name": "claim", "args": {"protocolName": "balancer"}}, {"name": "deposit", "args": {"protocolName": "balancer", "amount": "outputAmount", "token": "outputToken"}}, {"name": "time", "args": {"recurrence": {"type": "days", "interval": 3}}}]], "at exactly 19:05 utc, bridge $50 eth to starknet eth": [[{"name": "time", "args": {"start_time": "19:05"}}, {"name": "bridge", "args": {"amount": "50", "amount_units": "usd", "token": "eth", "destinationChainName": "starknet"}}]], "if eth is over 1800, sell for usdc": [[{"name": "condition", "args": {"subject": "eth", "comparator": ">=", "value": "1800", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc"}}]], "bridge [amount] eth from ethereum to arbitrum using the most cost-effective method. then, convert it to weth.": [[{"name": "bridge", "args": {"token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "weth", "chainName": "arbitrum"}}]], "bridge [amount] weth from arbitrum one back to ethereum and then trade it for usdc.": [[{"name": "bridge", "args": {"token": "weth", "sourceChainName": "arbitrum", "destinationChainName": "ethereum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "weth", "outputToken": "usdc", "chainName": "ethereum"}}]], "exchange all existing tokens in my wallet for eth. once, finished send it to [cex deposit wallet]": [[{"name": "swap", "args": {"inputToken": "all", "outputToken": "eth"}}, {"name": "transfer", "args": {"amount": "outputAmount", "token": "eth", "recipient": "[cex deposit wallet]"}}]], "when gas is below 10, harvest the eth yield from dolomite and deposit the eth to rodeo": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "claim", "args": {"protocolName": "dolomite", "token": "eth"}}, {"name": "deposit", "args": {"protocolName": "rodeo", "amount": "outputAmount", "token": "eth"}}]], "set stop loss for eth on arbitrum chain. sell 0.1 eth when price goes lower than 1500": [[{"name": "swap", "args": {"inputAmount": "0.1", "inputToken": "eth", "chainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "1500", "type": "price", "value_units": "usd"}}]], "set limit orders to buy eth each time the price dips 10% from the current price, buy for 100 usdc each time.": [[{"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "-10%", "type": "price"}}, {"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "eth"}}]], "each monday, claim my vested token from the dolomite protocol, and sell it for eth at market price.": [[{"name": "time", "args": {"start_time": "monday", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "claim", "args": {"protocolName": "dolomite"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth"}}], [{"name": "time", "args": {"start_time": "monday", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "claim", "args": {"protocolName": "dolomite", "poolName": "vested"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth"}}]], "each monday, claim my vested tokens, and stake them in jones jusdc pool": [[{"name": "time", "args": {"start_time": "monday", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "claim", "args": {"protocolName": "jones", "poolName": "jusdc"}}, {"name": "stake", "args": {"protocolName": "jones", "poolName": "jusdc", "token": "outputToken", "amount": "outputAmount"}}], [{"name": "time", "args": {"start_time": "monday", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "claim", "args": {"protocolName": "jones"}}, {"name": "stake", "args": {"protocolName": "jones", "poolName": "jusdc", "token": "outputToken", "amount": "outputAmount"}}]], "bridge 500 usdc each to linea, zk sync and base when gas is below 10": [[{"name": "bridge", "args": {"amount": "500", "token": "usdc", "destinationChainName": "linea"}}, {"name": "bridge", "args": {"amount": "500", "token": "usdc", "destinationChainName": "zksync"}}, {"name": "bridge", "args": {"amount": "500", "token": "usdc", "destinationChainName": "base"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}]], "bridge 1 ether to arb chain": [[{"name": "bridge", "args": {"amount": "1", "token": "eth", "destinationChainName": "arbitrum"}}]], "bridge 1 ether to arbitrum via hop": [[{"name": "bridge", "args": {"amount": "1", "token": "eth", "destinationChainName": "arbitrum", "protocolName": "hop"}}]], "bridge 3.2 eth to mainnet": [[{"name": "bridge", "args": {"amount": "3.2", "token": "eth", "destinationChainName": "ethereum"}}]], "send $5 to [insert wallet] every 3 hours": [[{"name": "transfer", "args": {"amount": "5", "token": "usd", "recipient": "[insert wallet]"}}, {"name": "time", "args": {"recurrence": {"type": "hours", "interval": 3}}}]], "convert 1e to usdc": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}]], "swap usdc to usdt when usdc/usdt is more than 101%": [[{"name": "swap", "args": {"inputToken": "usdc", "outputToken": "usdt"}}, {"name": "condition", "args": {"subject": "usdc/usdt", "comparator": ">=", "value": "1.01", "type": "price"}}], [{"name": "swap", "args": {"inputToken": "usdc", "outputToken": "usdt"}}, {"name": "condition", "args": {"subject": "usdc/usdt", "comparator": ">=", "value": "101%", "type": "price"}}]], "transfer 100 coins staked on protocol x [dapp link] to protocol y [dapp link].": [[{"name": "transfer", "args": {"amount": "100", "token": "coins", "recipient": "protocol y [dapp link]"}}]], "swap all eth from this address [address] into usdt and sends these usdt to this address [address]": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdt", "inputAmount": "all"}}, {"name": "transfer", "args": {"amount": "outputAmount", "token": "usdt", "recipient": "[address]"}}]], "bridge all eth at this address [address] from the arbitrum blockchain to the ether blockchain": [[{"name": "bridge", "args": {"amount": "all", "token": "eth", "sourceChainName": "arbitrum"}}]], "when $tok is at 12k market cap, buy $20 worth of $tok": [[{"name": "condition", "args": {"subject": "tok", "comparator": "==", "value": "12000", "type": "market cap", "value_units": "usd"}}, {"name": "swap", "args": {"inputAmount": "20", "inputToken": "usd", "outputToken": "tok"}}]], "claim and compound rewards from gnd protocol": [[{"name": "claim", "args": {"protocolName": "gnd"}}, {"name": "deposit", "args": {"protocolName": "gnd", "amount": "outputAmount", "token": "outputToken"}}]], "claim rewards from tig staking and tigusd staking and then add that tigusd back to tigusd position in tigristrade everyday if the tigusd rewards balance is above 5": [[{"name": "claim", "args": {"protocolName": "tigristrade", "token": "tig"}}, {"name": "claim", "args": {"protocolName": "tigristrade", "token": "tigusd"}}, {"name": "deposit", "args": {"protocolName": "tigristrade", "poolName": "tigusd", "token": "tigusd", "amount": "outputAmount"}}, {"name": "condition", "args": {"subject": "tigusd", "comparator": ">=", "value": "5", "type": "balance"}}, {"name": "time", "args": {"recurrence": {"type": "days", "interval": 1}}}]], "swap 100 of 0x... to y": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "0x...", "outputToken": "y"}}]], "bridge 100 of x on base to bnb and swap to y": [[{"name": "bridge", "args": {"amount": "100", "token": "x", "sourceChainName": "base", "destinationChainName": "bsc"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "x", "outputToken": "y", "chainName": "bsc"}}]], "bridge 1 eth from base to zksync and swap to usdc": [[{"name": "bridge", "args": {"amount": "1", "token": "eth", "sourceChainName": "base", "destinationChainName": "zksync"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync"}}]], "transfer 10 usdc to address": [[{"name": "transfer", "args": {"amount": "10", "token": "usdc", "recipient": "address"}}]], "transfer all usdc to address": [[{"name": "transfer", "args": {"amount": "all", "token": "usdc", "recipient": "address"}}]], "deposit 100 usdc into morpho": [[{"name": "deposit", "args": {"protocolName": "morpho", "amount": "100", "token": "usdc"}}]], "deposit all eth-usdc lp into dodoex": [[{"name": "deposit", "args": {"protocolName": "dodoex", "amount": "all", "token": "eth-usdc lp"}}], [{"name": "deposit", "args": {"protocolName": "dodoex", "amount": "all", "token": "eth-usdc"}}]], "lock all lp into dodoex": [[{"name": "lock", "args": {"protocolName": "dodoex", "amount": "all", "token": "lp"}}]], "bridge all usdc from arbitrum to optimism with bungee": [[{"name": "bridge", "args": {"amount": "all", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "optimism", "protocolName": "bungee"}}]], "long asset with 10x leverage": [[{"name": "long", "args": {"inputToken": "asset", "outputToken": "asset", "leverageMultiplier": "10"}}], [{"name": "long", "args": {"outputToken": "asset", "leverageMultiplier": "10"}}]], "increase the x asset's long position by keeping the leverage the same and adding xyz amount of asset y as collateral": [[{"name": "long", "args": {"inputToken": "y", "outputToken": "x", "leverageMultiplier": "same"}}]], "compound my staking rewards": [[{"name": "claim", "args": {"protocolName": "all"}}, {"name": "deposit", "args": {"amount": "outputAmount", "token": "outputToken", "protocolName": "all"}}]], "swap asset # x for y, at % max price impact": [[{"name": "swap", "args": {}}]], "swap 100 usdc on syncswap every hours for 3 days": [[{"name": "swap", "args": {"protocolName": "syncswap", "inputAmount": "100", "inputToken": "usdc"}}, {"name": "time", "args": {"recurrence": {"type": "hours", "interval": 1}, "end_time": "3 days"}}]], "bridge 100usdc on stargate every hour for 10 days when gas is less than 10": [[{"name": "bridge", "args": {"amount": "100", "token": "usdc", "protocolName": "stargate"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "time", "args": {"recurrence": {"type": "hours", "interval": 1}, "end_time": "10 days"}}]], "remove 50% lp from (app) on the 15 october and swap usdt for usdc on 16 october. act only when gas is below 20 gwei": [[{"name": "withdraw", "args": {"amount": "50%", "token": "lp"}}, {"name": "time", "args": {"start_time": "october 15"}}, {"name": "swap", "args": {"inputToken": "usdt", "outputToken": "usdc"}}, {"name": "time", "args": {"start_time": "october 16"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "operator": "and", "type": "gas", "value_units": "gwei"}}], [{"name": "withdraw", "args": {"amount": "50%", "token": "lp"}}, {"name": "time", "args": {"start_time": "october 15"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdt", "outputToken": "usdc"}}, {"name": "time", "args": {"start_time": "october 16"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas", "value_units": "gwei"}}]], "on the 16 october bridge 0.5 eth to zk sync using (app name) when gas is below 20 gwei": [[{"name": "time", "args": {"start_time": "october 16"}}, {"name": "bridge", "args": {"amount": "0.5", "token": "eth", "destinationChainName": "zksync"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas"}}]], "buy 0.2eth of x when x is 0.5 usd price": [[{"name": "swap", "args": {"inputAmount": "0.2", "inputToken": "eth", "outputToken": "x"}}, {"name": "condition", "args": {"subject": "x", "comparator": "==", "value": "0.5", "type": "price", "value_units": "usd"}}]], "swap 100 usdc.e to eth on llamaswap and long eth with 5x leverage on gmx when eth is $1550": [[{"name": "swap", "args": {"protocolName": "llamaswap", "inputAmount": "100", "inputToken": "usdc.e", "outputToken": "eth"}}, {"name": "long", "args": {"protocolName": "gmx", "inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "eth", "leverageMultiplier": "5"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1550", "type": "price", "value_units": "usd"}}]], "borrow 1000 usdc.e when usdc.e is above $1.005 and swap to usdt": [[{"name": "borrow", "args": {"amount": "1000", "token": "usdc.e"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc.e", "outputToken": "usdt"}}, {"name": "condition", "args": {"subject": "usdc.e", "comparator": ">=", "value": "1.005", "type": "price", "value_units": "usd"}}]], "every morning at 9:00 am, claim deepp rewards and use that to buy dlp": [[{"name": "time", "args": {"start_time": "9:00 am", "recurrence": {"type": "days", "interval": 1}}}, {"name": "claim", "args": {"protocolName": "deepp"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "dlp"}}]], "when btc goes below 25k, market buy eth at the best available price with 5000 usdc": [[{"name": "condition", "args": {"subject": "btc", "comparator": "<=", "value": "25000.0", "type": "price"}}, {"name": "swap", "args": {"inputAmount": "5000", "inputToken": "usdc", "outputToken": "eth"}}], [{"name": "condition", "args": {"subject": "btc", "comparator": "<=", "value": "25000.0", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputAmount": "5000", "inputToken": "usdc", "outputToken": "eth"}}]], "i have an existing dola usdc position on aurat. can you help me harvest my yield every week and compound into the same position?": [[{"name": "claim", "args": {"protocolName": "aura"}}, {"name": "deposit", "args": {"protocolName": "aura", "amount": "outputAmount", "token": "outputToken"}}, {"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}}}]], "vote 100% for bnb/thena pool on thena": [[{"name": "vote", "args": {"protocolName": "thena", "poolName": "bnb/thena"}}]], "claim and sell stg rewards for usdc": [[{"name": "claim", "args": {"protocolName": "all", "token": "stg"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "usdc"}}]], "dump all positions to cash": [[{"name": "swap", "args": {"inputToken": "all", "outputToken": "cash"}}]], "buy dai every 37 min for 2 days": [[{"name": "swap", "args": {"outputToken": "dai"}}, {"name": "time", "args": {"recurrence": {"type": "minutes", "interval": 37}, "end_time": "2 days"}}]], "deposit usdc and eth into camelot usdc/eth pool, stake the spnft into a nitro pool": [[{"name": "deposit", "args": {"protocolName": "camelot", "poolName": "usdc/eth", "amount": "all", "token": "usdc"}}, {"name": "deposit", "args": {"protocolName": "camelot", "poolName": "usdc/eth", "amount": "outputAmount", "token": "eth"}}, {"name": "stake", "args": {"amount": "outputAmount", "token": "spnft", "protocolName": "camelot"}}]], "sell everything from multiple chains into jusdc": [[{"name": "swap", "args": {"outputToken": "jusdc"}}]], "when eth price hits $1500 buy 3 eth worth using my $usdc balance": [[{"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1500", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputAmount": "3", "outputToken": "eth"}}]], "swap my $bitcoin for usdc": [[{"name": "swap", "args": {"inputToken": "bitcoin", "outputToken": "usdc"}}]], "disperse 0.1e to these 10 wallets": [[{"name": "transfer", "args": {"amount": "0.1", "token": "eth", "recipient": "wallet1"}}, {"name": "transfer", "args": {"amount": "0.1", "token": "eth", "recipient": "wallet2"}}, {"name": "transfer", "args": {"amount": "0.1", "token": "eth", "recipient": "wallet3"}}, {"name": "transfer", "args": {"amount": "0.1", "token": "eth", "recipient": "wallet4"}}, {"name": "transfer", "args": {"amount": "0.1", "token": "eth", "recipient": "wallet5"}}, {"name": "transfer", "args": {"amount": "0.1", "token": "eth", "recipient": "wallet6"}}, {"name": "transfer", "args": {"amount": "0.1", "token": "eth", "recipient": "wallet7"}}, {"name": "transfer", "args": {"amount": "0.1", "token": "eth", "recipient": "wallet8"}}, {"name": "transfer", "args": {"amount": "0.1", "token": "eth", "recipient": "wallet9"}}, {"name": "transfer", "args": {"amount": "0.1", "token": "eth", "recipient": "wallet10"}}]], "when gas is below 7, swap 0.01 eth to usdc, repay 50% of usdc loan on aave, withdraw 50% of supplied eth on aave.": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "7", "type": "gas"}}, {"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "repay", "args": {"protocolName": "aave", "amount": "50%", "token": "usdc"}}, {"name": "withdraw", "args": {"protocolName": "aave", "amount": "50%", "token": "eth"}}]], "buy 1 eth with usdt if price goes to 1200$": [[{"name": "swap", "args": {"outputAmount": "1", "inputToken": "usdt", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1200", "type": "price", "value_units": "usd"}}]], "swap 100 of token a for token b": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "a", "outputToken": "b"}}]], "swap for z token": [[{"name": "swap", "args": {"outputToken": "z"}}]], "swap weth into eth": [[{"name": "swap", "args": {"inputToken": "weth", "outputToken": "eth"}}]], "trade 1 baby bear for eth then swap that eth for usdc and send that usdc over to the arbitrum network with hop exchange": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "baby bear", "outputToken": "eth"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "destinationChainName": "arbitrum", "protocolName": "hop"}}]], "disperse eth into few wallets": [[{"name": "transfer", "args": {"token": "eth", "recipient": "0x1234567890abcdef"}}, {"name": "transfer", "args": {"token": "eth", "recipient": "0xabcdef1234567890", "amount": "outputAmount"}}, {"name": "transfer", "args": {"token": "eth", "recipient": "0x7890abcdef123456", "amount": "outputAmount"}}]], "every saturday at 18:00 claim incentives from my velodrome lock positions. sell all incentives into velo. lock that velo into the same lock position.": [[{"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}, "start_time": "saturday at 18:00"}}, {"name": "claim", "args": {"protocolName": "velodrome"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "outputToken", "outputToken": "velo"}}, {"name": "lock", "args": {"protocolName": "velodrome", "amount": "outputAmount", "token": "velo"}}]], "if token x goes -30%, sell to usdc": [[{"name": "condition", "args": {"subject": "x", "comparator": "<=", "value": "-30%", "type": "price"}}, {"name": "swap", "args": {"inputToken": "x", "outputToken": "usdc"}}]], "buy xxx$ of $ticker with stablecoins/from my usdc": [[{"name": "swap", "args": {"inputToken": ["stablecoins", "usdc"], "outputToken": "ticker"}}]], "bridge 20$ from polygon to arbitrum": [[{"name": "bridge", "args": {"amount": "20", "amount_units": "usd", "sourceChainName": "polygon", "destinationChainName": "arbitrum"}}]], "bridge eth from mainnet to arbitrum": [[{"name": "bridge", "args": {"token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}]], "swap eth to usdc": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc"}}]], "cheapest route for eth to arbitrum now": [[{"name": "bridge", "args": {"token": "eth", "destinationChainName": "arbitrum"}}]], "sell eth for usdc. move usdc to wallet 2. turn usdc into (some shitcoin)": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc"}}, {"name": "transfer", "args": {"amount": "outputAmount", "token": "usdc", "recipient": "wallet 2"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "(some shitcoin)", "inputAmount": "outputAmount"}}]], "sell eth to usdc. move usdc to coinbase wallet on tuesday": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc"}}, {"name": "transfer", "args": {"amount": "outputAmount", "token": "usdc", "recipient": "coinbase protocol wallet"}}, {"name": "time", "args": {"start_time": "tuesday"}}]], "stake btrfly. restake rewards on may 15th": [[{"name": "stake", "args": {"token": "btrfly", "protocolName": "all"}}, {"name": "time", "args": {"start_time": "may 15th"}}, {"name": "stake", "args": {"token": "outputToken", "protocolName": "all"}}], [{"name": "stake", "args": {"token": "btrfly"}}, {"name": "time", "args": {"start_time": "may 15th"}}, {"name": "stake", "args": {"token": "outputToken"}}]], "once a week, when gas is below 10, claim my wjaura - weth lp rewards on balancer. deposit all aura into jones' wjaura and stake bal as aurabal.": [[{"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "claim", "args": {"protocolName": "balancer", "poolName": "wjaura-weth"}}, {"name": "deposit", "args": {"protocolName": "jones", "poolName": "wjaura", "amount": "all", "token": "aura"}}, {"name": "stake", "args": {"protocolName": "balancer", "poolName": "aurabal", "amount": "all", "token": "bal"}}], [{"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "claim", "args": {"protocolName": "balancer", "poolName": "wjaura-weth"}}, {"name": "deposit", "args": {"protocolName": "jones", "poolName": "wjaura", "amount": "all", "token": "aura"}}, {"name": "stake", "args": {"protocolName": "balancer", "amount": "outputAmount", "token": "bal"}}]], "each day, claim my arb rewards on jones dao from the jglp & jusdc masterchef contract and convert to $eth": [[{"name": "time", "args": {"recurrence": {"type": "days", "interval": 1}}}, {"name": "claim", "args": {"protocolName": "jones dao", "poolName": "masterchef"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "eth"}}]], "bridge 1 eth from mainnet to zksync and swap 0.5 eth to usdc on zksync": [[{"name": "bridge", "args": {"amount": "1", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "zksync"}}, {"name": "swap", "args": {"inputAmount": "0.5", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync"}}]], "once eth balance hits x, buy y of $token when gas": [[{"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "x", "type": "balance"}}, {"name": "swap", "args": {"inputToken": "eth", "outputToken": ""}}, {"name": "condition", "args": {"subject": "gas", "type": "gas"}}]], "buy 0.35 eth worth of $mog and sell when mog/eth hits 0.7": [[{"name": "swap", "args": {"inputAmount": "0.35", "inputToken": "eth", "outputToken": "mog"}}, {"name": "condition", "args": {"subject": "mog/eth", "comparator": "==", "value": "0.7", "type": "price"}}, {"name": "swap", "args": {"inputToken": "mog", "outputToken": "eth"}}]], "dump all positions to usdc": [[{"name": "swap", "args": {"outputToken": "usdc"}}], [{"name": "swap", "args": {"inputToken": "all", "outputToken": "usdc"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "all", "outputToken": "usdc"}}]], "once eth balance hits x, buy y of $token when gas is below z": [[{"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "x", "type": "balance"}}, {"name": "swap", "args": {"inputToken": "eth", "outputToken": ""}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "z", "type": "gas"}}]], "swap my ohm to steth, bridge everything to arbitrum": [[{"name": "swap", "args": {"inputToken": "ohm", "outputToken": "steth"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "steth", "destinationChainName": "arbitrum"}}]], "swap usdc to usdt when usdc/usdt is more than 1.01": [[{"name": "swap", "args": {"inputToken": "usdc", "outputToken": "usdt"}}, {"name": "condition", "args": {"subject": "usdc/usdt", "comparator": ">=", "value": "1.01", "type": "price"}}]], "send/transfer 1 eth on base and give me usdc on zksync": [[{"name": "bridge", "args": {"amount": "1", "token": "eth", "destinationChainName": "base"}}, {"name": "bridge", "args": {"token": "usdc", "destinationChainName": "zksync", "sourceChainName": "base", "amount": "outputAmount"}}]], "swap all of my usdc to eth and eth to usdc on woofi on the zksync network": [[{"name": "swap", "args": {"protocolName": "woofi", "inputAmount": "all", "inputToken": "usdc", "outputToken": "eth", "chainName": "zksync"}}, {"name": "swap", "args": {"protocolName": "woofi", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync", "inputAmount": "outputAmount"}}]], "on every wednesday at 10am until the end of november send 500usdt to address 0x-------- and $500 worth of eth to 0x---- when gas is below 10": [[{"name": "time", "args": {"start_time": "wednesday 10am", "end_time": "end of november", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "transfer", "args": {"amount": "500", "token": "usdt", "recipient": "0x--------"}}, {"name": "transfer", "args": {"amount": "500", "amount_units": "usd", "token": "eth", "recipient": "0x----"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}]], "when gas is below 20, withdraw 40.74 eth from spice finance blur vault, repay morpho, then withdraw 10k usdc from morpho": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas"}}, {"name": "withdraw", "args": {"protocolName": "spice finance", "poolName": "blur", "amount": "40.74", "token": "eth"}}, {"name": "repay", "args": {"protocolName": "morpho", "token": "eth", "amount": "outputAmount"}}, {"name": "withdraw", "args": {"protocolName": "morpho", "amount": "10000.0", "token": "usdc"}}], [{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas"}}, {"name": "withdraw", "args": {"protocolName": "spice finance", "poolName": "blur", "amount": "40.74", "token": "eth"}}, {"name": "repay", "args": {"protocolName": "morpho", "token": "eth", "amount": "40.74"}}, {"name": "withdraw", "args": {"protocolName": "morpho", "amount": "10000.0", "token": "usdc"}}]], "wrap eth": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "weth"}}]], "notify me when eth hits 2000": [[{"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "2000", "type": "price", "value_units": "usd"}}]], "when mkr hits $1500, buy 1 mkr with eth": [[{"name": "condition", "args": {"subject": "mkr", "comparator": "==", "value": "1500", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputToken": "eth", "outputToken": "mkr", "outputAmount": "1"}}]], "when mkr trades at $1500, buy 1 mkr with eth": [[{"name": "condition", "args": {"subject": "mkr", "comparator": "==", "value": "1500", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputToken": "eth", "outputToken": "mkr", "outputAmount": "1"}}]], "give me an alert if $bnb break the 200$ support": [[{"name": "condition", "args": {"subject": "bnb", "comparator": "<=", "value": "200", "type": "price", "value_units": "usd"}}], [{"name": "condition", "args": {"subject": "bnb", "comparator": "<=", "value": "200", "type": "price"}}]], "give me an alert whenever stablecoin inflow see a significant growth over 30d period (atleast +10%)": [[{"name": "condition", "args": {"subject": "stablecoin_inflow", "comparator": ">=", "value": "10%", "period": "30 days", "type": "price"}}]], "buy xyz if its market cap falls below 50mn over the next 7 days": [[{"name": "swap", "args": {"outputToken": "xyz"}}, {"name": "condition", "args": {"subject": "xyz", "comparator": "<=", "value": "50000000.0", "period": "7 days", "type": "market cap"}}], [{"name": "swap", "args": {"outputToken": "xyz"}}, {"name": "condition", "args": {"subject": "xyz", "comparator": "<=", "value": "50000000.0", "type": "market cap"}}, {"name": "condition", "args": {"period": "7 days"}}]], "transfer lodestar rewards to niyant.eth on arbitrum": [[{"name": "transfer", "args": {"token": "lodestar rewards", "recipient": "niyant.eth", "chainName": "arbitrum"}}]], "swap all my plutus rewards to usdc": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "plutus rewards", "outputToken": "usdc"}}]], "notify me when eth hits $3000": [[{"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "3000", "type": "price", "value_units": "usd"}}]], "unwrap weth into eth": [[{"name": "swap", "args": {"inputToken": "weth", "outputToken": "eth"}}]], "swap $100 eth for usdc and bridge to avalanche": [[{"name": "swap", "args": {"inputAmount": "100", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "destinationChainName": "avalanche"}}]], "swap $100 of eth to usdc and bridge to avalanche": [[{"name": "swap", "args": {"inputAmount": "100", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "destinationChainName": "avalanche"}}]], "swap $100 of eth to usdc on arbitrum, and bridge to avalanche": [[{"name": "swap", "args": {"inputAmount": "100", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "avalanche"}}]], "swap 0.05 eth for usdc on arb and deposit on lodestar ": [[{"name": "swap", "args": {"inputAmount": "0.05", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "lodestar", "amount": "outputAmount", "token": "usdc", "chainName": "arbitrum"}}], [{"name": "swap", "args": {"inputAmount": "0.05", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "lodestar", "amount": "outputAmount", "token": "usdc"}}]], "   swap 0.05 eth for usdc on arbitrum and deposit on lodestar": [[{"name": "swap", "args": {"inputAmount": "0.05", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "lodestar", "amount": "outputAmount", "token": "usdc", "chainName": "arbitrum"}}]], "swap $100 eth for usdc on arbitrum": [[{"name": "swap", "args": {"inputAmount": "100", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}]], "deposit all my usdc into lodestar": [[{"name": "deposit", "args": {"protocolName": "lodestar", "amount": "all", "token": "usdc"}}]], "   deposit all my usdc into lodestar": [[{"name": "deposit", "args": {"protocolName": "lodestar", "amount": "all", "token": "usdc"}}]], "swap all my usdc for eth on arbitrum ": [[{"name": "swap", "args": {"inputToken": "usdc", "inputAmount": "all", "outputToken": "eth", "chainName": "arbitrum"}}]], "swap half my eth for usdc on arbitrum and deposit on lodestar": [[{"name": "swap", "args": {"inputAmount": "half", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "lodestar", "amount": "outputAmount", "token": "usdc", "chainName": "arbitrum"}}]], "swap 0.05 eth for usdc on arbitrum and deposit on lodestar": [[{"name": "swap", "args": {"inputAmount": "0.05", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "lodestar", "amount": "outputAmount", "token": "usdc", "chainName": "arbitrum"}}]], " deposit half my eth into jonesdao": [[{"name": "deposit", "args": {"protocolName": "jonesdao", "token": "eth", "amount": "half"}}]], "deposit half my eth on arbitrum into jonesdao": [[{"name": "deposit", "args": {"protocolName": "jonesdao", "token": "eth", "amount": "half", "chainName": "arbitrum"}}]], "swap $100 of eth and $20 of wbtc into blur": [[{"name": "swap", "args": {"inputAmount": ["100", "20"], "inputAmountUnits": ["usd", "usd"], "inputToken": ["eth", "wbtc"], "outputToken": "blur"}}], [{"name": "swap", "args": {"inputAmount": "100", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "blur"}}, {"name": "swap", "args": {"inputAmount": "20", "inputAmountUnits": "usd", "inputToken": "wbtc", "outputToken": "blur"}}]], "deposit 1 eth worth of usdc into dolomite": [[{"name": "deposit", "args": {"protocolName": "dolomite", "amount": "1", "amount_units": "eth", "token": "usdc"}}]], "transfer $50 eth and half my usdt to 7bfee.eth": [[{"name": "transfer", "args": {"amount": "50", "amount_units": "usd", "token": "eth", "recipient": "7bfee.eth"}}, {"name": "transfer", "args": {"amount": "half", "token": "usdt", "recipient": "7bfee.eth"}}]], "bridge half my usdc and all my dai to base": [[{"name": "bridge", "args": {"amount": "half", "token": "usdc", "destinationChainName": "base"}}, {"name": "bridge", "args": {"amount": "all", "token": "dai", "destinationChainName": "base"}}]], "on gmx v2, when eth price is near x, can you deposit x usdc collateral to avoid liquidation": [[{"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "x", "type": "price", "value_units": "usd"}}, {"name": "deposit", "args": {"token": "usdc", "protocolName": "all"}}]], "can you gather all the eth that i have spread around different chains and bridge it in the most cost-efficient form to arbitrum": [[{"name": "bridge", "args": {"amount": "all", "destinationChainName": "arbitrum", "token": "eth"}}]], "bridge eth to zkynsc swap half of eth to usdc then stake it": [[{"name": "bridge", "args": {"token": "eth", "destinationChainName": "zksync"}}, {"name": "swap", "args": {"inputAmount": "half", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync"}}, {"name": "stake", "args": {"token": "usdc", "chainName": "zksync", "amount": "outputAmount"}}], [{"name": "bridge", "args": {"amount": "all", "token": "eth", "destinationChainName": "zksync"}}, {"name": "swap", "args": {"inputAmount": "half", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync"}}, {"name": "stake", "args": {"token": "usdc", "chainName": "zksync", "amount": "outputAmount"}}]], "if ldo goes down 10% or has a onchain liquidation bid it": [[{"name": "condition", "args": {"subject": "ldo", "comparator": "<=", "value": "-10%", "type": "price"}}, {"name": "swap", "args": {"outputToken": "ldo"}}]], "claim livethe rewards once they are worth greater than 10$ and compound them back into livethe": [[{"name": "claim", "args": {"poolName": "livethe", "protocolName": "all"}}, {"name": "deposit", "args": {"protocolName": "all", "poolName": "livethe", "token": "outputToken", "amount": "outputAmount"}}, {"name": "condition", "args": {"subject": "livethe rewards", "comparator": ">=", "value": "10", "type": "balance", "value_units": "usd"}}]], "claims livethe rewards once they are greater than 10$ and swap to usdt": [[{"name": "claim", "args": {"token": "livethe", "protocolName": "all"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken", "outputToken": "usdt"}}, {"name": "condition", "args": {"subject": "livethe rewards", "comparator": ">=", "value": "10", "type": "balance", "value_units": "usd"}}]], "vote for the highest yielding bribe on thena on wednesday at 2355 utc": [[{"name": "vote", "args": {"protocolName": "thena"}}, {"name": "time", "args": {"start_time": "wednesday at 2355 utc"}}]], "bridge 0.1 eth from base to linea": [[{"name": "bridge", "args": {"amount": "0.1", "token": "eth", "sourceChainName": "base", "destinationChainName": "linea"}}]], "swap $50 of eth into usdc on kyberswap": [[{"name": "swap", "args": {"protocolName": "kyberswap", "inputAmount": "50", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "usdc"}}]], "swap asset x for y, at % max price impact": [[{"name": "swap", "args": {"inputToken": "x", "outputToken": "y", "slippage": "% max slippage"}}]], "unvest 300000 trove from nitro cartel and swap to usdc; revest remaining trove at 16:00 utc": [[{"name": "unlock", "args": {"protocolName": "nitro cartel", "amount": "300000", "token": "trove"}}, {"name": "swap", "args": {"inputToken": "trove", "outputToken": "usdc", "inputAmount": "outputAmount"}}, {"name": "time", "args": {"start_time": "16:00 utc"}}, {"name": "lock", "args": {"protocolName": "nitro cartel", "token": "trove", "amount": "outputAmount"}}]], "deposit usdc into jones jusdc and deposit to rodeo finance usdc: (contract address)": [[{"name": "deposit", "args": {"protocolName": "jones", "poolName": "jusdc", "token": "usdc"}}, {"name": "deposit", "args": {"protocolName": "rodeo finance", "poolName": "usdc", "token": "usdc", "amount": "outputAmount"}}]], "bridge eth from mainnet to arb when gas is below 15": [[{"name": "bridge", "args": {"token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "15", "type": "gas"}}], [{"name": "bridge", "args": {"amount": "all", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "15", "type": "gas"}}]], "claim rewards from thena/velodrome/aerodrome, convert them to eth and bridge them to ethereum": [[{"name": "claim", "args": {"protocolName": "thena"}}, {"name": "swap", "args": {"outputToken": "eth", "inputToken": "outputToken", "inputAmount": "outputAmount"}}, {"name": "bridge", "args": {"token": "eth", "destinationChainName": "ethereum", "amount": "outputAmount"}}]], "whenever i have over $4000 in ethereum, send $3500 to the gemini address, but only do this once a week at most": [[{"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}}}, {"name": "condition", "args": {"subject": "eth", "comparator": ">=", "value": "4000", "value_token": "usd", "type": "balance"}}, {"name": "transfer", "args": {"amount": "3500", "amount_units": "usd", "token": "eth", "recipient": "gemini_address", "chainName": "ethereum"}}]], "claim and sell and stg rewards": [[{"name": "claim", "args": {"token": "stg", "protocolName": "all"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "outputToken"}}]], "collect weekly synthetix rewards, claim as soon as gas is below 10": [[{"name": "claim", "args": {"protocolName": "synthetix"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}]], "bridge 500 usdc  each to linea, zk sync and base when gas is below 10": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "bridge", "args": {"amount": "500", "token": "usdc", "destinationChainName": "linea"}}, {"name": "bridge", "args": {"amount": "500", "token": "usdc", "destinationChainName": "zksync"}}, {"name": "bridge", "args": {"amount": "500", "token": "usdc", "destinationChainName": "base"}}]], "harvest my position on sushi and also my position on camelot": [[{"name": "claim", "args": {"protocolName": "sushi"}}, {"name": "claim", "args": {"protocolName": "camelot"}}]], "harvest on sushi and sell/restake.": [[{"name": "claim", "args": {"protocolName": "sushi"}}, {"name": "swap", "args": {"inputToken": "outputToken", "inputAmount": "outputAmount"}}, {"name": "stake", "args": {"protocolName": "sushi", "token": "outputToken", "amount": "outputAmount"}}]], "stake btrfly. restake rewards on may 15th (etc)": [[{"name": "stake", "args": {"token": "btrfly", "protocolName": "all"}}, {"name": "time", "args": {"start_time": "may 15th"}}, {"name": "stake", "args": {"protocolName": "all", "token": "outputToken"}}]], "carry out x no of swap on the dapp  daily for 1 month when gas is less than 30": [[{"name": "time", "args": {"end_time": "1 month", "recurrence": {"type": "days", "interval": 1}}}, {"name": "swap", "args": {"protocolName": "dapp"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "30", "type": "gas"}}]], "swap 100 of 0x... to y ": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "0x...", "outputToken": "y"}}]], "bridge all my eth from arbitrum to ethereum": [[{"name": "bridge", "args": {"amount": "all", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "ethereum"}}]], "swap 200 usdt for btc when btc price is 26700$": [[{"name": "swap", "args": {"inputAmount": "200", "inputToken": "usdt", "outputToken": "btc"}}, {"name": "condition", "args": {"subject": "btc", "comparator": "==", "value": "26700", "type": "price", "value_units": "usd"}}]], "sell x% of x$coin when price is x": [[{"name": "swap", "args": {"inputToken": "coin", "outputToken": ""}}, {"name": "condition", "args": {"subject": "coin", "comparator": "==", "value": "x", "type": "price", "value_units": "usd"}}]], "short eth if it goes below or touches xxx price": [[{"name": "short", "args": {"inputToken": "eth", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "xxx", "type": "price", "value_units": "usd"}}]], "deposit $500 usdc and 0.35eth into an lp on uniswap v3": [[{"name": "deposit", "args": {"protocolName": "uniswap", "amount": "500", "amount_units": "usd", "token": "usdc"}}, {"name": "deposit", "args": {"protocolName": "uniswap", "amount": "0.35", "token": "eth"}}]], "deposit 0.35 eth into aave": [[{"name": "deposit", "args": {"protocolName": "aave", "amount": "0.35", "token": "eth"}}]], "borrow $400 usdc and swap to $bitcoin": [[{"name": "borrow", "args": {"amount": "400", "token": "usdc", "protocolName": "all"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "bitcoin", "inputAmount": "outputAmount"}}]], "when gas is below 15, deposit 10 eth as collateral in aave. then take out a loan of 10,000 usdc against that eth. then take that 10,000 usdc and deposit it into rollbit": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "15", "type": "gas"}}, {"name": "deposit", "args": {"protocolName": "aave", "amount": "10", "token": "eth"}}, {"name": "borrow", "args": {"protocolName": "aave", "token": "usdc", "amount": "10000"}}, {"name": "deposit", "args": {"token": "usdc", "protocolName": "rollbit", "amount": "10000"}}]], "deposit 2 eth as collateral into rage trade on arbitrum. once eth price goes below $1,750, long eth with 5x leverage": [[{"name": "deposit", "args": {"amount": "2", "token": "eth", "chainName": "arbitrum", "protocolName": "rage trade"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "1750", "type": "price", "value_units": "usd"}}, {"name": "long", "args": {"outputToken": "eth", "chainName": "arbitrum", "leverageMultiplier": "5", "protocolName": "rage trade"}}], [{"name": "deposit", "args": {"amount": "2", "token": "eth", "chainName": "arbitrum", "protocolName": "rage trade"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "1750", "type": "price", "value_units": "usd"}}, {"name": "long", "args": {"outputToken": "eth", "chainName": "arbitrum", "leverageMultiplier": "5x", "protocolName": "rage trade"}}]], "buy 5,000 usdc worth of eth and then bridge it to zk sync era using orbiter bridge. then at noon each day for the next week swap $500 of eth for usdc and then swap back $500 worth of usdc for eth": [[{"name": "swap", "args": {"inputAmount": "5000", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "bridge", "args": {"token": "eth", "destinationChainName": "zksync", "protocolName": "orbiter", "amount": "outputAmount"}}, {"name": "time", "args": {"start_time": "noon", "end_time": "1 week", "recurrence": {"type": "days", "interval": 1}}}, {"name": "swap", "args": {"inputAmount": "500", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync"}}, {"name": "swap", "args": {"inputAmount": "500", "inputAmountUnits": "usd", "inputToken": "usdc", "outputToken": "eth", "chainName": "zksync"}}]], "whenever $winr (0xd77b108d4f6cefaa0cae9506a934e825becca46e) falls below 3$, swap 2eth for it": [[{"name": "swap", "args": {"inputAmount": "2", "inputToken": "eth", "outputToken": "0xd77b108d4f6cefaa0cae9506a934e825becca46e"}}, {"name": "condition", "args": {"subject": "0xd77b108d4f6cefaa0cae9506a934e825becca46e", "comparator": "<=", "value": "3", "type": "price", "value_units": "usd"}}], [{"name": "swap", "args": {"inputAmount": "2", "inputToken": "eth", "outputToken": "winr"}}, {"name": "condition", "args": {"subject": "winr", "comparator": "<=", "value": "3", "type": "price", "value_units": "usd"}}]], "swap my $bitcoin on the dex with the least amount of slippage": [[{"name": "swap", "args": {"inputToken": "bitcoin", "outputToken": "", "slippage": "0.1%"}}]], "bridge eth to arb when gas is sub .5$ and swap back when arb hits .90": [[{"name": "bridge", "args": {"amount": "all", "token": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "0.5", "value_units": "usd", "type": "gas"}}, {"name": "swap", "args": {"outputToken": "eth", "inputToken": "outputToken"}}, {"name": "condition", "args": {"subject": "arb", "comparator": "==", "value": "0.90", "type": "price", "value_units": "usd"}}]], "unwind my borrow position on dolomite when borrow apy rises above 69 %": [[{"name": "repay", "args": {"protocolName": "dolomite"}}, {"name": "condition", "args": {"subject": "borrow apy", "comparator": ">=", "value": "69%", "type": "yield"}}]], "sell x% of y coin (or insert contract address?) every (day of week) at 12am utc on (insert preferred dex).": [[{"name": "time", "args": {"start_time": "12am", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "swap", "args": {"inputToken": "y"}}]], "swap usdc for arb if the price reaches $0.90": [[{"name": "swap", "args": {"inputToken": "usdc", "outputToken": "arb"}}, {"name": "condition", "args": {"subject": "usdc", "comparator": "==", "value": "0.90", "type": "price", "value_units": "usd"}}]], "if eth hits 1200 usd open a 12x long on gmx": [[{"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1200", "type": "price", "value_units": "usd"}}, {"name": "long", "args": {"protocolName": "gmx", "leverageMultiplier": "12", "inputToken": "eth", "outputToken": "eth"}}]], "send 0.01e to [wallet/contract address] every hour for 5 days": [[{"name": "transfer", "args": {"amount": "0.01", "token": "eth", "recipient": "[wallet/contract address]"}}, {"name": "time", "args": {"recurrence": {"type": "hours", "interval": 1}, "end_time": "5 days"}}]], "bridge 3.2 ethereums to mainnet": [[{"name": "bridge", "args": {"amount": "3.2", "destinationChainName": "ethereum"}}]], "send $1000 to [insert wallet] every": [[{"name": "transfer", "args": {"amount": "1000", "recipient": "[insert wallet]", "token": "usd"}}]], "bridge .01 eth to base chain when gas is less than $10": [[{"name": "bridge", "args": {"token": "eth", "destinationChainName": "base", "amount": ".01"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "value_units": "usd", "type": "gas"}}], [{"name": "bridge", "args": {"token": "eth", "destinationChainName": "base", "amount": ".01"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "value_units": "usd", "type": "price"}}]], "swap all my usdt to avax": [[{"name": "swap", "args": {"inputToken": "usdt", "inputAmount": "all", "outputToken": "avax"}}]], "sell all my usdc for eth if usdc goes below $0.95": [[{"name": "swap", "args": {"inputToken": "usdc", "inputAmount": "all", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "usdc", "comparator": "<=", "value": "0.95", "type": "price", "value_units": "usd"}}]], "buy btc with eth when it is at 20000": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "btc"}}, {"name": "condition", "args": {"subject": "btc", "comparator": "==", "value": "20000", "type": "price"}}]], "when its at 20000, buy btc": [[{"name": "condition", "args": {"subject": "btc", "comparator": "==", "value": "20000", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"outputToken": "btc"}}]], "what protocols are supported": [[{"name": "support", "args": {}}]], "what actions are supported?": [[{"name": "support", "args": {}}]], "whats current eth gas price": [[{"name": "chat", "args": {"query": "what is the current gas price for ethereum?"}}]], "which chains do you support?": [[{"name": "support", "args": {}}]], "i want to stake my arb, please give me 3 options": [[{"name": "chat", "args": {"query": "i want to stake my arb token, please give me 3 options"}}]], "what i do with my steth?": [[{"name": "chat", "args": {"query": "what can i do with steth?"}}]], "give me the 3 best dai farms on ethereum": [[{"name": "chat", "args": {"query": "what are the 3 best dai token farms on the ethereum chain?"}}]], "what is the cheapest way for me to leverage up to go long on eth and crv": [[{"name": "chat", "args": {"query": "what is the cheapest way for me to leverage up to go long on eth token and crv token"}}]], "find profitable arb opportunities on chain": [[{"name": "chat", "args": {"query": "find profitable arbitrage token opportunities on chain."}}]], "give me the highest yield strategy on eth now and execute for me": [[{"name": "chat", "args": {"query": "what is the highest yield strategy on eth token now?"}}, {"name": "stake", "args": {"protocolName": "all", "token": "eth"}}]], "when ltv is greater than 80%, repay 10% of loan.": [[{"name": "condition", "args": {"subject": "ltv", "comparator": ">=", "value": "80%", "type": "ltv"}}, {"name": "repay", "args": {"amount": "10%", "protocolName": "all"}}], [{"name": "condition", "args": {"subject": "ltv", "comparator": ">=", "value": "80%", "type": "ltv"}}, {"name": "repay", "args": {"amount": "10%", "token": "loan", "protocolName": "all"}}]], "lend all my usdc.e on arbitrum on lodestar": [[{"name": "lend", "args": {"protocolName": "lodestar", "amount": "all", "token": "usdc.e", "chainName": "arbitrum"}}]], "swap all of my usdc for usdc.e on arbitrum and lend all my usdc.e on lodestar": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "usdc", "outputToken": "usdc.e", "chainName": "arbitrum"}}, {"name": "lend", "args": {"amount": "outputAmount", "protocolName": "lodestar", "token": "usdc.e", "chainName": "arbitrum"}}]], "swap all of my usdc for usdc.e and lend all usdc.e on lodestar": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "usdc", "outputToken": "usdc.e"}}, {"name": "lend", "args": {"amount": "outputAmount", "protocolName": "lodestar", "token": "usdc.e"}}]], "bridge all eth from ethereum mainnet to arbitrum": [[{"name": "bridge", "args": {"amount": "all", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}]], "swap 20 usdc.e for wbtc and lend wbtc on lodestar hourly starting at 10:05 pm east": [[{"name": "swap", "args": {"inputAmount": "20", "inputToken": "usdc.e", "outputToken": "wbtc"}}, {"name": "lend", "args": {"protocolName": "lodestar", "token": "wbtc", "amount": "outputAmount"}}, {"name": "time", "args": {"start_time": "10:05 pm east", "recurrence": {"type": "hours", "interval": 1}}}]], "swap 20 usdc.e for wbtc and lend wbtc on lodestar every hour starting today at 10pm east.": [[{"name": "swap", "args": {"inputAmount": "20", "inputToken": "usdc.e", "outputToken": "wbtc"}}, {"name": "lend", "args": {"protocolName": "lodestar", "token": "wbtc", "amount": "outputAmount"}}, {"name": "time", "args": {"start_time": "10pm today", "recurrence": {"type": "hours", "interval": 1}}}], [{"name": "swap", "args": {"inputAmount": "20", "inputToken": "usdc.e", "outputToken": "wbtc"}}, {"name": "lend", "args": {"protocolName": "lodestar", "token": "wbtc", "amount": "outputAmount"}}, {"name": "time", "args": {"start_time": "today at 10pm east", "recurrence": {"type": "hours", "interval": 1}}}]], "swap 20 usdc.e for wbtc and lend wbtc on lodestar every hour starting at at 7pm east ": [[{"name": "swap", "args": {"inputAmount": "20", "inputToken": "usdc.e", "outputToken": "wbtc"}}, {"name": "lend", "args": {"protocolName": "lodestar", "token": "wbtc", "amount": "outputAmount"}}, {"name": "time", "args": {"start_time": "7pm east", "recurrence": {"type": "hours", "interval": 1}}}]], "swap 100 usdc for wbtc on arbitrum and lend wbtc on lodestar": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "wbtc", "chainName": "arbitrum"}}, {"name": "lend", "args": {"protocolName": "lodestar", "token": "wbtc", "chainName": "arbitrum", "amount": "outputAmount"}}]], "swap all of my tokens on arbitrum to eth": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "all", "outputToken": "eth", "chainName": "arbitrum"}}]], "swap 100 usdc.e for usdc": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc.e", "outputToken": "usdc"}}]], "buy wbtc with 100 usdc.e": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc.e", "outputToken": "wbtc"}}]], "buy wbtc with 100 usdc.e and lend wbtc on lodestar": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc.e", "outputToken": "wbtc"}}, {"name": "lend", "args": {"protocolName": "lodestar", "token": "wbtc", "amount": "outputAmount"}}]], "buy wbtc with 100 usdc.e and lend on lodestar protocol": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc.e", "outputToken": "wbtc"}}, {"name": "lend", "args": {"protocolName": "lodestar", "token": "wbtc", "amount": "outputAmount"}}]], "swap 100 usdc.e for wbtc and lend all wbtc on lodestar": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc.e", "outputToken": "wbtc"}}, {"name": "lend", "args": {"amount": "outputAmount", "protocolName": "lodestar", "token": "wbtc"}}]], "swap 100 usdc.e for wbtc and lend wbtc on lodestar": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc.e", "outputToken": "wbtc"}}, {"name": "lend", "args": {"protocolName": "lodestar", "token": "wbtc", "amount": "outputAmount"}}]], "swap 100 usdc.e for 150 usdc and lend 95 on lodestar": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc.e", "outputToken": "usdc"}}, {"name": "lend", "args": {"protocolName": "lodestar", "amount": "95", "token": "usdc"}}]], "swap 100 usdc.e for usdc and deposit 100 usdc.e on lodestar": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc.e", "outputToken": "usdc"}}, {"name": "deposit", "args": {"protocolName": "lodestar", "amount": "100", "token": "usdc.e"}}]], "lend 100 usdc.e on lodestar": [[{"name": "lend", "args": {"protocolName": "lodestar", "amount": "100", "token": "usdc.e"}}]], "deposit 100 usdc.e into lodestar": [[{"name": "deposit", "args": {"protocolName": "lodestar", "amount": "100", "token": "usdc.e"}}]], "transfer 69 jones to 0x0b1a89664970ebeb16d6a1a039017049eea45a20": [[{"name": "transfer", "args": {"amount": "69", "token": "jones", "recipient": "0x0b1a89664970ebeb16d6a1a039017049eea45a20"}}]], "deposit 50 usdc in rodeo glp farm with 2x leverage": [[{"name": "deposit", "args": {"protocolName": "rodeo", "poolName": "glp", "amount": "50", "token": "usdc"}}]], "depoist 50 usdc in pendle pt glp 28mar2024": [[{"name": "deposit", "args": {"protocolName": "pendle", "amount": "50", "token": "usdc"}}, {"name": "time", "args": {"start_time": "28mar2024"}}]], "deposit 50 usdc in pendle's glp pool.": [[{"name": "deposit", "args": {"protocolName": "pendle", "poolName": "glp", "amount": "50", "token": "usdc"}}]], "swap 5 usdc.e for jones on arbitrum": [[{"name": "swap", "args": {"inputAmount": "5", "inputToken": "usdc.e", "outputToken": "jones", "chainName": "arbitrum"}}]], "buy 2 jones with usdc.e": [[{"name": "swap", "args": {"inputToken": "usdc.e", "outputAmount": "2", "outputToken": "jones"}}]], "buy 3 jones with usdc.e and deposit 100 usdc.e on lodestar": [[{"name": "swap", "args": {"inputToken": "usdc.e", "outputAmount": "3", "outputToken": "jones"}}, {"name": "deposit", "args": {"protocolName": "lodestar", "amount": "100", "token": "usdc.e"}}]], "buy 3 jones with usdc.3 and deposit 100 usdc.e on lodestar": [[{"name": "swap", "args": {"inputToken": "usdc.e", "outputAmount": "3", "outputToken": "jones"}}, {"name": "deposit", "args": {"protocolName": "lodestar", "amount": "100", "token": "usdc.e"}}]], "supply 100 usdc.e on lodestat": [[{"name": "lend", "args": {"protocolName": "lodestar", "amount": "100", "token": "usdc.e"}}]], "buy jones with 3 usdc.e and deposit 75 usdc.e on lodestar": [[{"name": "swap", "args": {"inputAmount": "3", "inputToken": "usdc.e", "outputToken": "jones"}}, {"name": "deposit", "args": {"protocolName": "lodestar", "amount": "75", "token": "usdc.e"}}]], "buy 3 jones with usdc.e ": [[{"name": "swap", "args": {"inputToken": "usdc.e", "outputAmount": "3", "outputToken": "jones"}}]], "buy 3 jones with usdc.e and lend 75 usdc.e on lodestar": [[{"name": "swap", "args": {"inputToken": "usdc.e", "outputAmount": "3", "outputToken": "jones"}}, {"name": "lend", "args": {"protocolName": "lodestar", "amount": "75", "token": "usdc.e"}}]], "buy 3 jones with usdc.e and lend 75 usdc.e on lonestar": [[{"name": "swap", "args": {"inputToken": "usdc.e", "outputAmount": "3", "outputToken": "jones"}}, {"name": "lend", "args": {"protocolName": "lodestar", "amount": "75", "token": "usdc.e"}}]], "buy 50 usdc.e with eth at 5:55pm pst": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc.e", "outputAmount": "50"}}, {"name": "time", "args": {"start_time": "5:55pm pst"}}]], "buy 50 usdc.e with eth at 5:45pm pst": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc.e", "outputAmount": "50"}}, {"name": "time", "args": {"start_time": "5:45pm pst"}}]], "buy 50 usdc.e with eth and deposit on rodeo": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc.e", "outputAmount": "50"}}, {"name": "deposit", "args": {"protocolName": "rodeo", "token": "usdc.e", "amount": "50"}}], [{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc.e", "outputAmount": "50"}}, {"name": "deposit", "args": {"protocolName": "rodeo", "token": "usdc.e", "amount": "outputAmount"}}]], "buy 50 usdc.e and deposit into silo": [[{"name": "swap", "args": {"outputAmount": "50", "outputToken": "usdc.e"}}, {"name": "deposit", "args": {"protocolName": "silo", "token": "usdc.e", "amount": "outputAmount"}}]], "swap 0.039 eth for jones on arbitrum": [[{"name": "swap", "args": {"inputAmount": "0.039", "inputToken": "eth", "outputToken": "jones", "chainName": "arbitrum"}}]], "buy 70 jones with eth": [[{"name": "swap", "args": {"inputToken": "eth", "outputAmount": "70", "outputToken": "jones"}}]], "bridge 0.01 eth from arbitrum to optimism": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "optimism"}}]], "bridge 0.04 eth from arbitrum to base and buy \"fren pet\"": [[{"name": "bridge", "args": {"amount": "0.04", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"outputToken": "fren pet", "chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge 0.04 eth from arbitrum to base and buy fren pet": [[{"name": "bridge", "args": {"amount": "0.04", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge 0.04 eth from arbitrum to base and buy toshi": [[{"name": "bridge", "args": {"amount": "0.04", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"outputToken": "toshi", "chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "buy boop with 0.01 eth": [[{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "boop"}}]], "bridge all of my eth from ethereum to arbitrum. on arbitrum, swap 0.05 eth to usdc": [[{"name": "bridge", "args": {"amount": "all", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "0.05", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}]], "bridge all of my tokens from ethereum to arbitrum": [[{"name": "bridge", "args": {"amount": "all", "token": "all", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}]], "bridge 0.01 eth from arbitrum to base": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}]], "bridge 0.069 eth from arbitrum to base and buy usdc with 0.069 eth on base": [[{"name": "bridge", "args": {"amount": "0.069", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "0.069", "inputToken": "eth", "outputToken": "usdc", "chainName": "base"}}]], "bridge 0.069 weth from arbitrum to base and buy usdc with 0.069 weth on base": [[{"name": "bridge", "args": {"amount": "0.069", "token": "weth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "0.069", "inputToken": "weth", "outputToken": "usdc", "chainName": "base"}}]], "bridge 0.069 eth from arbitrum to base and buy usdc with 0.069 eth": [[{"name": "bridge", "args": {"amount": "0.069", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "0.069", "inputToken": "eth", "outputToken": "usdc", "chainName": "base"}}]], "bridge 0.069 eth from arbitrum to base and buy usdc": [[{"name": "bridge", "args": {"amount": "0.069", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"outputToken": "usdc", "chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge 0.069 eth from arbitrum to base and buy usdcb": [[{"name": "bridge", "args": {"amount": "0.069", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"outputToken": "usdcb", "chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge 0.04 eth from arbitrum to base and buy usdc": [[{"name": "bridge", "args": {"amount": "0.04", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"outputToken": "usdc", "chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge 0.01 eth from arbitrum to base and buy toshi": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"outputToken": "toshi", "chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge 0.01 eth to base and buy toshi": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "destinationChainName": "base"}}, {"name": "swap", "args": {"outputToken": "toshi", "chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge 0.01 eth to base and buy 0xac1bd2486aaf3b5c0fc3fd868558b082a531b2b4": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "destinationChainName": "base"}}, {"name": "swap", "args": {"outputToken": "0xac1bd2486aaf3b5c0fc3fd868558b082a531b2b4", "chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge 0.01 eth to base and buy 0xff0c532fdb8cd566ae169c1cb157ff2bdc83e105": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "destinationChainName": "base"}}, {"name": "swap", "args": {"outputToken": "0xff0c532fdb8cd566ae169c1cb157ff2bdc83e105", "chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge 0.05 eth to base and buy 0xff0c532fdb8cd566ae169c1cb157ff2bdc83e105": [[{"name": "bridge", "args": {"amount": "0.05", "token": "eth", "destinationChainName": "base"}}, {"name": "swap", "args": {"outputToken": "0xff0c532fdb8cd566ae169c1cb157ff2bdc83e105", "chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge 0.05 eth from arbitrum to metis, then buy  0x6deb03fc15da10bf25d542eca0008d62463a7cbf on metis": [[{"name": "bridge", "args": {"amount": "0.05", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "metis"}}, {"name": "swap", "args": {"chainName": "metis", "outputToken": "0x6deb03fc15da10bf25d542eca0008d62463a7cbf", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge 0.05 eth from arbitrum to metis, then buy  0x6deb03fc15da10bf25d542eca0008d62463a7cbf with 0.04 eth": [[{"name": "bridge", "args": {"amount": "0.05", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "metis"}}, {"name": "swap", "args": {"inputAmount": "0.04", "inputToken": "eth", "outputToken": "0x6deb03fc15da10bf25d542eca0008d62463a7cbf", "chainName": "metis"}}]], "bridge 0.05 eth to metis and buy 0x6deb03fc15da10bf25d542eca0008d62463a7cbf": [[{"name": "bridge", "args": {"amount": "0.05", "token": "eth", "destinationChainName": "metis"}}, {"name": "swap", "args": {"chainName": "metis", "outputToken": "0x6deb03fc15da10bf25d542eca0008d62463a7cbf", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "buy 0x6deb03fc15da10bf25d542eca0008d62463a7cbf on metis": [[{"name": "swap", "args": {"chainName": "metis", "outputToken": "0x6deb03fc15da10bf25d542eca0008d62463a7cbf"}}]], "bridge 0.01 eth to base chain when gas is less than $10": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "destinationChainName": "base"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas", "value_units": "usd"}}], [{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "destinationChainName": "base"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "price", "value_units": "usd"}}]], "bridge all of my tokens from canto to ethereum": [[{"name": "bridge", "args": {"amount": "all", "token": "all", "sourceChainName": "canto", "destinationChainName": "ethereum"}}]], "bridge all of my weth from ethereum to base using hop": [[{"name": "bridge", "args": {"amount": "all", "token": "weth", "sourceChainName": "ethereum", "destinationChainName": "base", "protocolName": "hop"}}]], "bridge 1 eth from ethereum to arbitrum using bungee": [[{"name": "bridge", "args": {"amount": "1", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum", "protocolName": "bungee"}}]], "borrow 5000 usdt on aave": [[{"name": "borrow", "args": {"protocolName": "aave", "amount": "5000", "token": "usdt"}}]], "borrow 100 usdt on rodeo": [[{"name": "borrow", "args": {"protocolName": "rodeo", "amount": "100", "token": "usdt"}}]], "borrow 3000 usdc on lodestar": [[{"name": "borrow", "args": {"protocolName": "lodestar", "amount": "3000", "token": "usdc"}}]], "transfer 0.0005 eth to 0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2 and 0.0005 eth to 0xc59b5f658c16a6721a7f6d2bd1334ae8b53ad4dd": [[{"name": "transfer", "args": {"amount": "0.0005", "token": "eth", "recipient": "0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2"}}, {"name": "transfer", "args": {"amount": "0.0005", "token": "eth", "recipient": "0xc59b5f658c16a6721a7f6d2bd1334ae8b53ad4dd"}}]], "transfer 0.0005 eth to 0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2 when eth = $3000": [[{"name": "transfer", "args": {"amount": "0.0005", "token": "eth", "recipient": "0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "3000", "type": "price", "value_units": "usd"}}]], "buy 0x8390a1da07e376ef7add4be859ba74fb83aa02d5 with 0.01 eth": [[{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "0x8390a1da07e376ef7add4be859ba74fb83aa02d5"}}]], "buuy 0x8390a1da07e376ef7add4be859ba74fb83aa02d5 with 0.01 eth": [[{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "0x8390a1da07e376ef7add4be859ba74fb83aa02d5"}}]], "bridge my eth from scroll to eth mainnet via orbiter bridge": [[{"name": "bridge", "args": {"token": "eth", "sourceChainName": "scroll", "destinationChainName": "ethereum", "protocolName": "orbiter"}}]], "bridge all off my eth from scroll to eth mainnet via orbiter bridge": [[{"name": "bridge", "args": {"amount": "all", "token": "eth", "sourceChainName": "scroll", "destinationChainName": "ethereum", "protocolName": "orbiter"}}]], "deposit all my usdc into lodestar ": [[{"name": "deposit", "args": {"protocolName": "lodestar", "amount": "all", "token": "usdc"}}]], "bridge eth to sepolia testnet": [[{"name": "bridge", "args": {"token": "eth", "destinationChainName": "sepolia"}}]], "swap 0.15 eth for sushi": [[{"name": "swap", "args": {"inputAmount": "0.15", "inputToken": "eth", "outputToken": "sushi"}}]], "swap 0.05 eth for sushi": [[{"name": "swap", "args": {"inputAmount": "0.05", "inputToken": "eth", "outputToken": "sushi"}}]], "when gas is below 10 gwei, swap all my usdc to weth": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "usdc", "outputToken": "weth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "value_units": "gwei", "type": "gas"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "usdc", "outputToken": "weth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}]], "when gas is below 10 gwei, swap my usdc to weth": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "value_units": "gwei", "type": "gas"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "weth"}}], [{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "weth"}}]], "claim uniswap airdrop": [[{"name": "claim", "args": {"protocolName": "uniswap"}}], [{"name": "claim", "args": {"protocolName": "uniswap", "token": "all"}}]], "claim airdrop": [[{"name": "claim", "args": {"protocolName": "all"}}]], "payback loans on silo": [[{"name": "repay", "args": {"protocolName": "silo"}}]], "for the next two days, bridge .1 eth to arbitrum every 8 hours and then swap it for $usdc. ": [[{"name": "time", "args": {"recurrence": {"type": "hours", "interval": 8}, "end_time": "2 days"}}, {"name": "bridge", "args": {"amount": ".1", "token": "eth", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"outputToken": "usdc", "chainName": "arbitrum", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "bridge .1 eth to arbitrum when gas is 20 or less and then swap it for $usdc. ": [[{"name": "bridge", "args": {"amount": ".1", "token": "eth", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas"}}]], "bridge .1 eth to arbitrum when gas is 20 or less and then swap it for $usdc.e. lend that $usdc.e on timeswap $usdc.e/$arb pool": [[{"name": "bridge", "args": {"amount": ".1", "token": "eth", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "usdc.e", "chainName": "arbitrum"}}, {"name": "lend", "args": {"protocolName": "timeswap", "poolName": "usdc.e/arb", "token": "usdc.e", "chainName": "arbitrum", "amount": "outputAmount"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas"}}]], "bridge .1 eth to arbitrum when gas is 20 or less and then swap it for $usdc. lend that $usdc on timeswap protocol pool": [[{"name": "bridge", "args": {"amount": ".1", "token": "eth", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "lend", "args": {"protocolName": "timeswap", "token": "usdc", "chainName": "arbitrum", "amount": "outputAmount"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas"}}]], "bridge .1 eth to arbitrum when gas is 20 or less and then stake it at timeswap to farm $time token": [[{"name": "bridge", "args": {"amount": ".1", "token": "eth", "destinationChainName": "arbitrum"}}, {"name": "stake", "args": {"amount": "outputAmount", "protocolName": "timeswap", "chainName": "arbitrum", "token": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas"}}]], "swap 2 usdc for eth when gas is above 20": [[{"name": "swap", "args": {"inputAmount": "2", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": ">=", "value": "20", "type": "gas"}}]], "swap all my usdc for eth when eth is $2022 usd or less": [[{"name": "swap", "args": {"inputToken": "usdc", "inputAmount": "all", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "2022", "value_units": "usd", "type": "price"}}]], "swap all my usdc for eth when eth is $2022 usd": [[{"name": "swap", "args": {"inputToken": "usdc", "inputAmount": "all", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "2022", "value_units": "usd", "type": "price"}}]], "swap all my usdc for eth": [[{"name": "swap", "args": {"inputToken": "usdc", "inputAmount": "all", "outputToken": "eth"}}]], "swap .03 eth for usdc": [[{"name": "swap", "args": {"inputAmount": ".03", "inputToken": "eth", "outputToken": "usdc"}}]], "swap .01 eth for usdc": [[{"name": "swap", "args": {"inputAmount": ".01", "inputToken": "eth", "outputToken": "usdc"}}]], "bridge .02 eth from mainnet to base chain and swap .01 eth for usdc, perform this when gas is less than 25": [[{"name": "bridge", "args": {"amount": ".02", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": ".01", "inputToken": "eth", "outputToken": "usdc", "chainName": "base"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "25", "type": "gas"}}]], "bridge .02 eth to base chain and swap .01 eth for usdc, perform this when gas is less than 20": [[{"name": "bridge", "args": {"amount": ".02", "token": "eth", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": ".01", "inputToken": "eth", "outputToken": "usdc", "chainName": "base"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "20", "type": "gas"}}]], "bridge .02 eth to base chain and swap .01 eth for usdc, perform this when gwei is less than 25 ": [[{"name": "bridge", "args": {"amount": ".02", "token": "eth", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": ".01", "inputToken": "eth", "outputToken": "usdc", "chainName": "base"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "25", "value_units": "gwei", "type": "gas"}}], [{"name": "bridge", "args": {"amount": ".02", "token": "eth", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": ".01", "inputToken": "eth", "outputToken": "usdc", "chainName": "base"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "25", "type": "gas"}}], [{"name": "bridge", "args": {"amount": ".02", "token": "eth", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": ".01", "inputToken": "eth", "outputToken": "usdc", "chainName": "base"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "25", "type": "price", "value_units": "gwei"}}]], "bridge .01 eth to base and swap it for usdc": [[{"name": "bridge", "args": {"amount": ".01", "token": "eth", "destinationChainName": "base"}}, {"name": "swap", "args": {"outputToken": "usdc", "chainName": "base", "inputToken": "eth", "inputAmount": "outputAmount"}}]], "buy 50$ when btc is at $37,790": [[{"name": "swap", "args": {"inputAmount": "50", "inputToken": "usd", "outputToken": "btc"}}, {"name": "condition", "args": {"subject": "btc", "comparator": "==", "value": "37790", "type": "price", "value_units": "usd"}}]], "10x long doge": [[{"name": "long", "args": {"leverageMultiplier": "10", "outputToken": "doge"}}]], "deposit 0.05 eth into the gene-eth pool on camelot": [[{"name": "deposit", "args": {"protocolName": "camelot", "poolName": "gene-eth", "amount": "0.05", "token": "eth"}}]], "claim $aave on aave protocol": [[{"name": "claim", "args": {"protocolName": "aave", "token": "aave"}}]], "claime $aave": [[{"name": "claim", "args": {"protocolName": "aave", "token": "aave"}}], [{"name": "claim", "args": {"token": "aave", "protocolName": "all"}}]], "swap 0.005 eth for usdc when eth = $3000": [[{"name": "swap", "args": {"inputAmount": "0.005", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "3000", "type": "price", "value_units": "usd"}}]], "when mkr trades at $1500, buy 1 mkr": [[{"name": "condition", "args": {"subject": "mkr", "comparator": "==", "value": "1500", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"outputAmount": "1", "outputToken": "mkr"}}], [{"name": "condition", "args": {"subject": "mkr", "comparator": "==", "value": "1500", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"outputAmount": "1", "outputToken": "mkr", "inputToken": ""}}]], "on ethereum mainnet buy 1 mkr": [[{"name": "swap", "args": {"outputToken": "mkr", "chainName": "ethereum", "outputAmount": "1"}}]], "claim from synthetix": [[{"name": "claim", "args": {"protocolName": "synthetix"}}]], "swap 0.0005 eth to usdc and transfer to 0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2": [[{"name": "swap", "args": {"inputAmount": "0.0005", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "transfer", "args": {"token": "usdc", "recipient": "0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2", "amount": "outputAmount"}}]], "swap 0.0005 eth to usdc and then transfer to 0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2": [[{"name": "swap", "args": {"inputAmount": "0.0005", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "transfer", "args": {"token": "usdc", "recipient": "0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2", "amount": "outputAmount"}}]], "transfer 0.0005 eth to 0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2 then transfer to 0xa5ef861278d7bf18a8a2068a01d66fbded93a1bd": [[{"name": "transfer", "args": {"amount": "0.0005", "token": "eth", "recipient": "0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2"}}, {"name": "transfer", "args": {"amount": "0.0005", "token": "eth", "recipient": "0xa5ef861278d7bf18a8a2068a01d66fbded93a1bd"}}], [{"name": "transfer", "args": {"amount": "0.0005", "token": "eth", "recipient": "0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2"}}, {"name": "transfer", "args": {"amount": "outputAmount", "token": "eth", "recipient": "0xa5ef861278d7bf18a8a2068a01d66fbded93a1bd"}}]], "transfer 0.0005 eth to 0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2 at 8pm est": [[{"name": "transfer", "args": {"amount": "0.0005", "token": "eth", "recipient": "0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2"}}, {"name": "time", "args": {"start_time": "8pm est"}}]], "transfer 0.0005 eth to 0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2 at 8pm est today": [[{"name": "transfer", "args": {"amount": "0.0005", "token": "eth", "recipient": "0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2"}}, {"name": "time", "args": {"start_time": "8pm est today"}}]], "swap 1 eth to usdc on arbtirum": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}]], "swap 2 dai for eth in 1 minute": [[{"name": "swap", "args": {"inputAmount": "2", "inputToken": "dai", "outputToken": "eth"}}, {"name": "time", "args": {"start_time": "1 minute"}}]], "swap 0,01 gmx for usdc on arbitrum chain": [[{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "gmx", "outputToken": "usdc", "chainName": "arbitrum"}}]], "swap 1 eth to usdc when marketcap is 2100": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "2100", "value_units": "usd", "type": "market cap"}}]], "bridge 100 usdc from arbitrum to ethereum and swap 10 eth to usdc": [[{"name": "bridge", "args": {"amount": "100", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "ethereum"}}, {"name": "swap", "args": {"inputAmount": "10", "inputToken": "eth", "outputToken": "usdc", "chainName": "ethereum"}}]], "bridge usdc from arbitrum to eth": [[{"name": "bridge", "args": {"token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "ethereum"}}]], "swap 1 eth to usdc when balance is 20 eth": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "20", "type": "balance"}}]], "swap 1 eth to usdc when gas is 100 gwei": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "==", "value": "100", "value_units": "gwei", "type": "gas"}}], [{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "==", "value": "100", "type": "gas"}}]], "swap 1 eth to usdc when marketcap is 2500": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "2500", "type": "market cap"}}], [{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "2500", "value_units": "usd", "type": "market cap"}}]], "swap 1 eth to usdc at 11/20/2023": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "time", "args": {"start_time": "11/20/2023"}}]], "swap 1 eth to usdc when 11/20/2023": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "time", "args": {"start_time": "11/20/2023"}}]], "swap 1 eth usdc conditions eth price 1900$": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1900", "type": "price", "value_units": "usd"}}]], "swap 1 eth usdc at eth price 1900$": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "1900", "type": "price", "value_units": "usd"}}]], "buy 10 $arb with $eth": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "arb", "outputAmount": "10"}}]], "swap 10 $uscd for $arb": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "uscd", "outputToken": "arb"}}]], "buy 10 $usdc using $eth ": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc", "outputAmount": "10"}}]], "buy $eth with 10 $usdc on arbitrum ": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "usdc", "outputToken": "eth", "chainName": "arbitrum"}}]], "buy $arb with 10 $usdc on arbitrum": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "usdc", "outputToken": "arb", "chainName": "arbitrum"}}]], "buy $eth with 10 $usdc": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "usdc", "outputToken": "eth"}}]], "buy $eth with 10 $usd ": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "usd", "outputToken": "eth"}}]], "buy $arb with 10 $usdc ": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "usdc", "outputToken": "arb"}}]], "swap $10 of usdc for arb ": [[{"name": "swap", "args": {"inputAmount": "10", "inputAmountUnits": "usd", "inputToken": "usdc", "outputToken": "arb"}}]], "swap 10$ usdc for arb ": [[{"name": "swap", "args": {"inputAmount": "10", "inputAmountUnits": "usd", "inputToken": "usdc", "outputToken": "arb"}}]], "swap 10 $usdc for $arb": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "usdc", "outputToken": "arb"}}]], "buy 20 $usdc with eth on arbitrum": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum", "outputAmount": "20"}}]], "swap $40 worth of eth for $usdc on arbritrum ": [[{"name": "swap", "args": {"inputAmount": "40", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}]], "can you withdraw my liquidity from ambient finance and bridge both tokens over to scroll please": [[{"name": "withdraw", "args": {"token": "liquidity", "protocolName": "ambient finance"}}, {"name": "bridge", "args": {"destinationChainName": "scroll", "token": "outputToken", "amount": "outputAmount"}}], [{"name": "withdraw", "args": {"protocolName": "ambient finance"}}, {"name": "bridge", "args": {"destinationChainName": "scroll", "token": "outputToken", "amount": "outputAmount"}}]], "swap 0.02 eth to aura and deposit into jaura vault on jonesdao": [[{"name": "swap", "args": {"inputAmount": "0.02", "inputToken": "eth", "outputToken": "aura"}}, {"name": "deposit", "args": {"protocolName": "jonesdao", "poolName": "jaura", "token": "aura", "amount": "outputAmount"}}]], "deposit 20 usdc into the curve tri-pool": [[{"name": "deposit", "args": {"protocolName": "curve", "poolName": "tri-pool", "amount": "20", "token": "usdc"}}]], "swap 0.01 eth to usdc and then swap to usdt": [[{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "usdt", "inputAmount": "outputAmount"}}], [{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "usdt"}}]], "deposit 0.01 eth into aave, borrow 1 usdc": [[{"name": "deposit", "args": {"protocolName": "aave", "amount": "0.01", "token": "eth"}}, {"name": "borrow", "args": {"protocolName": "aave", "amount": "1", "token": "usdc"}}]], "deposit 0.01 eth into aave": [[{"name": "deposit", "args": {"protocolName": "aave", "amount": "0.01", "token": "eth"}}]], "swap 0.01 eth for usdc at 1:05 pm est": [[{"name": "time", "args": {"start_time": "1:05 pm est"}}, {"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "usdc"}}]], "swap 0.01 eth for usdc in 1 minutes": [[{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "time", "args": {"start_time": "1 minutes"}}]], "swap 0.01 eth for usdc in 3 minutes": [[{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "time", "args": {"start_time": "3 minutes"}}]], "swap dai for et": [[{"name": "swap", "args": {"inputToken": "dai", "outputToken": "et"}}]], "bridge all of my eth on arbitrum back to ethereum mainnet": [[{"name": "bridge", "args": {"amount": "all", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "ethereum"}}]], "swap 100 eth to usdc on arbitrum and swap 100 eth to canto on cahtno": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "100", "inputToken": "eth", "outputToken": "canto", "chainName": "canto"}}]], "swap 100 eth to usdt on ethereum and swap 100 eth to canto on canto": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "eth", "outputToken": "usdt", "chainName": "ethereum"}}, {"name": "swap", "args": {"inputAmount": "100", "inputToken": "eth", "outputToken": "canto", "chainName": "canto"}}]], "swap 100 eth to usdc on 1inch": [[{"name": "swap", "args": {"protocolName": "1inch", "inputAmount": "100", "inputToken": "eth", "outputToken": "usdc"}}]], "swap all of my gohm for eth and transfer it to 0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2": [[{"name": "swap", "args": {"inputToken": "gohm", "inputAmount": "all", "outputToken": "eth"}}, {"name": "transfer", "args": {"token": "eth", "recipient": "0xb6a5a72f5d811b6a6d9ea653c919b6eac6b1d3b2", "amount": "outputAmount"}}]], "what are the possible values for 'protocolname' ?": [[{"name": "support", "args": {"protocolName": "all"}}]], "deposit $50 worth of eth in aave": [[{"name": "deposit", "args": {"protocolName": "aave", "amount": "50", "amount_units": "usd", "token": "eth"}}]], "in 3 minutes, bridge all my dai to arbitrum and swap to eth": [[{"name": "time", "args": {"start_time": "3 minutes"}}, {"name": "bridge", "args": {"amount": "all", "token": "dai", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputToken": "dai", "outputToken": "eth", "chainName": "arbitrum", "inputAmount": "outputAmount"}}]], "bridge 5 usdc from arbitrum to base using hop protocol": [[{"name": "bridge", "args": {"protocolName": "hop", "amount": "5", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "base"}}]], "swap usdc.e for 2 spa and deposit it into plutus on arbitrum": [[{"name": "swap", "args": {"inputToken": "usdc.e", "outputToken": "spa", "outputAmount": "2", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "plutus", "amount": "2", "token": "spa", "chainName": "arbitrum"}}]], "deposit all of my $steth into the curve steth pool when the apy goes above 1.80%": [[{"name": "deposit", "args": {"protocolName": "curve", "poolName": "steth", "amount": "all", "token": "steth"}}, {"name": "condition", "args": {"subject": "apy", "comparator": ">=", "value": "1.80%", "type": "yield"}}]], "deposit all of my $steth into the curve steth pool on ethereum when the apy goes above 1.80%": [[{"name": "deposit", "args": {"protocolName": "curve", "poolName": "steth", "amount": "all", "token": "steth", "chainName": "ethereum"}}, {"name": "condition", "args": {"subject": "apy", "comparator": ">=", "value": "1.80%", "type": "yield"}}]], "swap my toshi for 3 usdc on base, bridge it from base to arbitrum and sell it for arb on arbitrum": [[{"name": "swap", "args": {"inputToken": "toshi", "outputAmount": "3", "outputToken": "usdc", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "3", "token": "usdc", "sourceChainName": "base", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "arb", "chainName": "arbitrum", "inputAmount": "outputAmount"}}], [{"name": "swap", "args": {"inputToken": "toshi", "outputAmount": "3", "outputToken": "usdc", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "base", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "arb", "chainName": "arbitrum", "inputAmount": "outputAmount"}}]], "swap all of my uni to grt on arbitrum at 9:30 pm gmt+2": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "uni", "outputToken": "grt", "chainName": "arbitrum"}}, {"name": "time", "args": {"start_time": "9:30 pm gmt+2"}}]], "buy grail with 5 usdc.e on arbitrum at 18:00 gmt+8 in 2 days": [[{"name": "swap", "args": {"inputAmount": "5", "inputToken": "usdc.e", "outputToken": "grail", "chainName": "arbitrum"}}, {"name": "time", "args": {"start_time": "18:00 gmt+8 in 2 days"}}]], "bridge 5 usdc.e from arbitrum to base in two days at this time": [[{"name": "bridge", "args": {"amount": "5", "token": "usdc.e", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "time", "args": {"start_time": "two days at this time"}}]], "swap usdc.e for 2 spa and deposit it all into plutus on arbitrum": [[{"name": "swap", "args": {"inputToken": "usdc.e", "outputToken": "spa", "outputAmount": "2", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "plutus", "amount": "2", "token": "spa", "chainName": "arbitrum"}}]], "swap all of my $jones to usdc on arbitrum at 8:30 pm gmt+2 tomorrow": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "jones", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "time", "args": {"start_time": "8:30 pm gmt+2 tomorrow"}}]], "swap eth for 2 usdc and deposit it into the gmx weth-usdc pool on arbitrum": [[{"name": "swap", "args": {"inputToken": "eth", "outputAmount": "2", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "gmx", "poolName": "weth-usdc", "amount": "2", "token": "usdc", "chainName": "arbitrum"}}]], "deposit 0.075 eth into the moz-eth vault on camelot": [[{"name": "deposit", "args": {"protocolName": "camelot", "poolName": "moz-eth", "amount": "0.075", "token": "eth"}}]], "swap all of my doge, shib and pepe to eth and deposit it into rocketpool on ethereum when gas is below 50": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": ["doge", "shib", "pepe"], "outputToken": "eth", "chainName": "ethereum"}}, {"name": "deposit", "args": {"protocolName": "rocketpool", "amount": "outputAmount", "token": "eth", "chainName": "ethereum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "50", "type": "gas"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": ["doge", "shib", "pepe"], "outputToken": "eth"}}, {"name": "deposit", "args": {"protocolName": "rocketpool", "amount": "outputAmount", "token": "eth", "chainName": "ethereum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "50", "type": "gas"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "doge", "outputToken": "eth"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "shib", "outputToken": "eth"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "pepe", "outputToken": "eth"}}, {"name": "deposit", "args": {"protocolName": "rocketpool", "amount": "outputAmount", "token": "eth", "chainName": "ethereum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "50", "type": "gas"}}]], "sell mbs for bald when mbs market cap drops to $13,500,000 on base": [[{"name": "swap", "args": {"inputToken": "mbs", "outputToken": "bald"}}, {"name": "condition", "args": {"subject": "mbs", "comparator": "<=", "value": "13500000", "type": "market cap", "value_units": "usd"}}], [{"name": "swap", "args": {"inputToken": "mbs", "outputToken": "bald"}}, {"name": "condition", "args": {"subject": "mbs", "comparator": "==", "value": "13500000", "type": "market cap", "value_units": "usd"}}]], "swap all of my doge, shib and pepe to eth and deposit it into rocket pool on ethereum when gas is sub 50": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "doge", "outputToken": "eth"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "shib", "outputToken": "eth"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "pepe", "outputToken": "eth"}}, {"name": "deposit", "args": {"protocolName": "rocket pool", "amount": "outputAmount", "token": "eth", "chainName": "ethereum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "50", "type": "gas"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "doge", "outputToken": "eth", "chainName": "ethereum"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "shib", "outputToken": "eth", "chainName": "ethereum"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "pepe", "outputToken": "eth", "chainName": "ethereum"}}, {"name": "deposit", "args": {"protocolName": "rocket pool", "amount": "outputAmount", "token": "eth", "chainName": "ethereum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "50", "type": "gas"}}]], "swap all of my fxs and dpi on ethereum for blur": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "fxs", "outputToken": "blur", "chainName": "ethereum"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "dpi", "outputToken": "blur", "chainName": "ethereum"}}]], "buy $gmx with 0.01 eth and stake all of the $gmx on gmx on arbitrum": [[{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "gmx", "chainName": "arbitrum"}}, {"name": "stake", "args": {"protocolName": "gmx", "amount": "outputAmount", "token": "gmx", "chainName": "arbitrum"}}]], "when eth hits $2432 buy 50 usdc.e with eth on arbitrum and deposit on gmx": [[{"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "2432", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputToken": "eth", "outputAmount": "50", "outputToken": "usdc.e", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "gmx", "amount": "50", "token": "usdc.e", "chainName": "arbitrum"}}], [{"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "2432", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputToken": "eth", "outputAmount": "50", "outputToken": "usdc.e", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "gmx", "amount": "outputAmount", "token": "usdc.e", "chainName": "arbitrum"}}]], "buy 50 usdc.e with eth on arbitrum and deposit on gmx": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc.e", "chainName": "arbitrum", "outputAmount": "50"}}, {"name": "deposit", "args": {"protocolName": "gmx", "amount": "50", "token": "usdc.e", "chainName": "arbitrum"}}]], "bridge 0.03 $eth from ethereum to arbitrum, buy $gmx with it, stake all of the $gmx on gmx on arbitrum": [[{"name": "bridge", "args": {"amount": "0.03", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "gmx", "chainName": "arbitrum"}}, {"name": "stake", "args": {"protocolName": "gmx", "token": "gmx", "amount": "outputAmount", "chainName": "arbitrum"}}], [{"name": "bridge", "args": {"amount": "0.03", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "eth", "outputToken": "gmx", "chainName": "arbitrum"}}, {"name": "stake", "args": {"protocolName": "gmx", "token": "gmx", "amount": "outputAmount", "chainName": "arbitrum"}}]], "deposit 20 $frax into the curve fraxusdp pool on ethereum when gas is below 52": [[{"name": "deposit", "args": {"protocolName": "curve", "poolName": "fraxusdp", "amount": "20", "token": "frax", "chainName": "ethereum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "52", "type": "gas"}}]], "stake 10 eth on lido in exactly 3 days": [[{"name": "stake", "args": {"protocolName": "lido", "amount": "10", "token": "eth"}}, {"name": "time", "args": {"start_time": "3 days"}}]], "swap 15 dai for eth, swap 15 usdc for eth, bridge all of the eth from ethereum to arbitrum": [[{"name": "swap", "args": {"inputAmount": "15", "inputToken": "dai", "outputToken": "eth"}}, {"name": "swap", "args": {"inputAmount": "15", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}]], "stake 0.015 eth on rocket pool on ethereum at noon tomorrow": [[{"name": "stake", "args": {"protocolName": "rocket pool", "amount": "0.015", "token": "eth", "chainName": "ethereum"}}, {"name": "time", "args": {"start_time": "noon tomorrow"}}]], "bridge all my dai from ethereum to arbitrum and buy arb when $arb is below $2.12 and gas is sub 35": [[{"name": "bridge", "args": {"amount": "all", "token": "dai", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputToken": "dai", "outputToken": "arb", "chainName": "arbitrum", "inputAmount": "outputAmount"}}, {"name": "condition", "args": {"subject": "arb", "comparator": "<=", "value": "2.12", "type": "price", "value_units": "usd"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "35", "type": "gas"}}]], "when gas is above $500, swap 200 usdc to eth": [[{"name": "condition", "args": {"subject": "gas", "comparator": ">=", "value": "500", "type": "price", "value_units": "usd"}}, {"name": "swap", "args": {"inputAmount": "200", "inputToken": "usdc", "outputToken": "eth"}}]], "swap all of my jones for usdc on arbitrum, bridge it from arbitrum to base, and swap it for axl on base": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "jones", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "axl", "chainName": "base"}}]], "swap my dai and plsspa to usdc on arbitrum": [[{"name": "swap", "args": {"inputToken": ["dai", "plsspa"], "outputToken": "usdc", "chainName": "arbitrum"}}], [{"name": "swap", "args": {"inputToken": "dai", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "swap", "args": {"inputToken": "plsspa", "outputToken": "usdc", "chainName": "arbitrum"}}]], "repay my 3 magic lodestar position on arbitrum": [[{"name": "repay", "args": {"amount": "3", "token": "magic", "chainName": "arbitrum", "protocolName": "lodestar"}}]], "repay my 3 magic lodestar loan on arbitrum": [[{"name": "repay", "args": {"amount": "3", "token": "magic", "chainName": "arbitrum", "protocolName": "lodestar"}}]], "bridge 0.002 eth to zksync, swap it for usdc, then swap the usdc for eth, then swap the eth for usdc": [[{"name": "bridge", "args": {"amount": "0.002", "token": "eth", "destinationChainName": "zksync"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "eth", "chainName": "zksync"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync"}}]], "bridge 0.016 eth from arbitrum to zksync, swap 0.002 eth for usdc, then swap it for eth, then swap it for usdc": [[{"name": "bridge", "args": {"amount": "0.016", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "zksync"}}, {"name": "swap", "args": {"inputAmount": "0.002", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "eth", "chainName": "zksync"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "usdc", "chainName": "zksync"}}]], "buy grail with 5 usdc on arbitrum at 18:00 gmt+8 in 2 days": [[{"name": "swap", "args": {"inputAmount": "5", "inputToken": "usdc", "outputToken": "grail", "chainName": "arbitrum"}}, {"name": "time", "args": {"start_time": "18:00 gmt+8 in 2 days"}}], [{"name": "swap", "args": {"inputAmount": "5", "inputToken": "usdc", "outputToken": "grail", "chainName": "arbitrum"}}, {"name": "time", "args": {"start_time": "2 days 18:00 gmt+8"}}]], "swap all of my tokens on base to usdc and bridge it from base to arbitrum": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "all", "outputToken": "usdc", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "base", "destinationChainName": "arbitrum"}}]], "swap all of my fxs and dpi for blur": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": ["fxs", "dpi"], "outputToken": "blur"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "fxs", "outputToken": "blur"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "dpi", "outputToken": "blur"}}]], "deposit 0.001 eth and 5 usdc into the uniswap eth-usdc pool on ethereum": [[{"name": "deposit", "args": {"protocolName": "uniswap", "poolName": "eth-usdc", "amount": "0.001", "token": "eth", "chainName": "ethereum"}}, {"name": "deposit", "args": {"protocolName": "uniswap", "poolName": "eth-usdc", "amount": "5", "token": "usdc", "chainName": "ethereum"}}]], "borrow 3 magic on lodestar on arbitrum": [[{"name": "borrow", "args": {"protocolName": "lodestar", "amount": "3", "token": "magic", "chainName": "arbitrum"}}]], "sell all of my $grail and $usdc.e for $usdc on arbitrum": [[{"name": "swap", "args": {"inputAmount": ["all", "all"], "inputToken": ["grail", "usdc.e"], "outputToken": "usdc", "chainName": "arbitrum"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": ["grail", "usdc.e"], "outputToken": "usdc", "chainName": "arbitrum"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "grail", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "usdc.e", "outputToken": "usdc", "chainName": "arbitrum"}}]], "deposit 2 usdc into the gmx weth-usdc pool on arbitrum every thursday at 9pm utc": [[{"name": "deposit", "args": {"protocolName": "gmx", "poolName": "weth-usdc", "amount": "2", "token": "usdc", "chainName": "arbitrum"}}, {"name": "time", "args": {"recurrence": {"type": "weeks", "interval": 1}, "start_time": "thursday 9pm utc"}}]], "swap eth for 5 dai and lend it on aave on ethereum when dai supply apy goes above 9.86%": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "dai", "outputAmount": "5"}}, {"name": "lend", "args": {"protocolName": "aave", "token": "dai", "amount": "5", "chainName": "ethereum"}}, {"name": "condition", "args": {"subject": "dai supply apy", "comparator": ">=", "value": "9.86%", "type": "yield"}}]], "swap all of my grt for usdc with 5% slippage on arbitrum, bridge it from arbitrum to base, and swap it for axl with 5% slippage on base": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "grt", "outputToken": "usdc", "slippage": "5%", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "axl", "slippage": "5%", "chainName": "base"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "grt", "outputToken": "usdc", "slippage": "5%", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "axl", "slippage": "5%", "chainName": "base"}}]], "swap 10 uni for woo on arbitrum in 1.1 hours": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "uni", "outputToken": "woo", "chainName": "arbitrum"}}, {"name": "time", "args": {"start_time": "1.1 hours"}}]], "swap 2 uni for wavax and deposit it into the gmx wavax-usdc pool on arbitrum": [[{"name": "swap", "args": {"inputAmount": "2", "inputToken": "uni", "outputToken": "wavax", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "gmx", "poolName": "wavax-usdc", "token": "wavax", "amount": "outputAmount", "chainName": "arbitrum"}}]], "swap 5 usdc for $shib on ethereum when $shib price goes below $0.0000096 and gas is sub 40": [[{"name": "swap", "args": {"inputAmount": "5", "inputToken": "usdc", "outputToken": "shib", "chainName": "ethereum"}}, {"name": "condition", "args": {"subject": "shib", "comparator": "<=", "value": "0.0000096", "type": "price", "value_units": "usd"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "40", "type": "gas"}}]], "deposit 0.001 eth and 5 usdc into the uniswapv3 eth-usdc pool on ethereum": [[{"name": "deposit", "args": {"protocolName": "uniswap", "poolName": "eth-usdc", "amount": "0.001", "token": "eth", "chainName": "ethereum"}}, {"name": "deposit", "args": {"protocolName": "uniswap", "poolName": "eth-usdc", "amount": "5", "token": "usdc", "chainName": "ethereum"}}]], "buy $gmx with 10 usdc and stake all of the $gmx on gmx on arbitrum": [[{"name": "swap", "args": {"inputAmount": "10", "inputToken": "usdc", "outputToken": "gmx", "chainName": "arbitrum"}}, {"name": "stake", "args": {"protocolName": "gmx", "amount": "outputAmount", "token": "gmx", "chainName": "arbitrum"}}]], "deposit 0.003 eth into aave at 1:30pm est": [[{"name": "deposit", "args": {"protocolName": "aave", "amount": "0.003", "token": "eth"}}, {"name": "time", "args": {"start_time": "1:30pm est"}}]], "borrow 2 usdt from aave on ethereum, bridge it from ethereum to arbitrum and swap it for $joe on arbitrum": [[{"name": "borrow", "args": {"protocolName": "aave", "amount": "2", "token": "usdt", "chainName": "ethereum"}}, {"name": "bridge", "args": {"amount": "2", "token": "usdt", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdt", "outputToken": "joe", "chainName": "arbitrum"}}], [{"name": "borrow", "args": {"protocolName": "aave", "amount": "2", "token": "usdt", "chainName": "ethereum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdt", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdt", "outputToken": "joe", "chainName": "arbitrum"}}]], "buy 15 glp with usdc on arbitrum, deposit it into plutus, stake the plvglp on plutus": [[{"name": "swap", "args": {"inputToken": "usdc", "outputAmount": "15", "outputToken": "glp", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "plutus", "amount": "15", "token": "glp", "chainName": "arbitrum"}}, {"name": "stake", "args": {"protocolName": "plutus", "amount": "outputAmount", "token": "plvglp", "chainName": "arbitrum"}}], [{"name": "swap", "args": {"inputToken": "usdc", "outputAmount": "15", "outputToken": "glp", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "plutus", "amount": "15", "token": "glp", "chainName": "arbitrum"}}, {"name": "stake", "args": {"protocolName": "plutus", "amount": "outputAmount", "token": "outputToken", "chainName": "arbitrum"}}]], "deposit 2 usdc into the curve 3pool pool on ethereum when gas is sub 30": [[{"name": "deposit", "args": {"protocolName": "curve", "poolName": "3pool", "amount": "2", "token": "usdc", "chainName": "ethereum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "30", "type": "gas"}}]], "withdraw all my gmx and repay it all on my borrow position on lodestar on arbitrum": [[{"name": "withdraw", "args": {"amount": "all", "token": "gmx", "chainName": "arbitrum", "protocolName": "lodestar"}}, {"name": "repay", "args": {"protocolName": "lodestar", "amount": "all", "token": "gmx", "chainName": "arbitrum"}}], [{"name": "withdraw", "args": {"amount": "all", "token": "gmx", "chainName": "arbitrum", "protocolName": "lodestar"}}, {"name": "repay", "args": {"protocolName": "lodestar", "amount": "outputAmount", "token": "gmx", "chainName": "arbitrum"}}], [{"name": "withdraw", "args": {"amount": "all", "poolName": "gmx", "token": "gmx", "chainName": "arbitrum", "protocolName": "lodestar"}}, {"name": "repay", "args": {"protocolName": "lodestar", "amount": "all", "token": "gmx", "chainName": "arbitrum"}}]], "every monday at 7 pm est, bridge from 0.1 eth from ethereum to arbitrum using bungee. then bridge it back from arbitrum to ethereum using bungee": [[{"name": "time", "args": {"start_time": "monday 7pm est", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "bridge", "args": {"amount": "0.1", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum", "protocolName": "bungee"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "ethereum", "protocolName": "bungee"}}], [{"name": "time", "args": {"start_time": "monday 7 pm est", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "bridge", "args": {"amount": "0.1", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum", "protocolName": "bungee"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "ethereum", "protocolName": "bungee"}}], [{"name": "time", "args": {"start_time": "monday 7pm est", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "bridge", "args": {"amount": "0.1", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum", "protocolName": "bungee"}}, {"name": "bridge", "args": {"amount": "0.1", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "ethereum", "protocolName": "bungee"}}]], "transfer 0.005 eth on arbitrum to 0x28129f5b8b689edcb7b581654266976ad77c719b": [[{"name": "transfer", "args": {"amount": "0.005", "token": "eth", "recipient": "0x28129f5b8b689edcb7b581654266976ad77c719b", "chainName": "arbitrum"}}]], "bridge 0.005 eth from base to arbitrum using jumper": [[{"name": "bridge", "args": {"amount": "0.005", "token": "eth", "sourceChainName": "base", "destinationChainName": "arbitrum", "protocolName": "jumper"}}]], "close all gmx positions": [[{"name": "close", "args": {"protocolName": "gmx"}}], [{"name": "close", "args": {"protocolName": "gmx", "inputAmount": "all"}}]], "close arb short on gmx on arbitrum": [[{"name": "close", "args": {"protocolName": "gmx", "inputToken": "arb", "chainName": "arbitrum"}}], [{"name": "close", "args": {"protocolName": "gmx", "inputToken": "arb", "outputToken": "arb", "chainName": "arbitrum"}}]], "swap all my avax for usdt on trader joe": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "avax", "outputToken": "usdt", "protocolName": "trader joe"}}]], "stake all my eth on swell network": [[{"name": "stake", "args": {"protocolName": "swell", "amount": "all", "token": "eth"}}]], "deposit 30 usdc and the equivalent eth into ambient finance": [[{"name": "deposit", "args": {"protocolName": "ambient finance", "amount": "30", "token": "usdc", "poolName": "usdc-eth"}}], [{"name": "deposit", "args": {"protocolName": "ambient finance", "amount": "30", "token": "usdc"}}, {"name": "deposit", "args": {"protocolName": "ambient finance", "amount": "outputAmount", "token": "eth", "poolName": "usdc-eth"}}]], "buy eth with 20 usdc every hour starting at 10:55pm": [[{"name": "swap", "args": {"inputAmount": "20", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "time", "args": {"start_time": "10:55pm", "recurrence": {"type": "hours", "interval": 1}}}]], "buy eth with 20 usdc every hour starting at 10:55pm today": [[{"name": "swap", "args": {"inputAmount": "20", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "time", "args": {"start_time": "10:55pm today", "recurrence": {"type": "hours", "interval": 1}}}]], "repay my 0.0805 gmx borrow position on lodestar on arbitrum": [[{"name": "repay", "args": {"protocolName": "lodestar", "amount": "0.0805", "token": "gmx", "chainName": "arbitrum"}}]], "buy $50 worth of eth at 2:25pm today.": [[{"name": "swap", "args": {"inputAmount": "50", "outputToken": "eth", "inputToken": "usd"}}, {"name": "time", "args": {"start_time": "2:25pm today"}}]], "swap usdc.e for 0.0805 gmx and repay my gmx on lodestar": [[{"name": "swap", "args": {"inputToken": "usdc.e", "outputToken": "gmx", "outputAmount": "0.0805"}}, {"name": "repay", "args": {"protocolName": "lodestar", "token": "gmx", "amount": "0.0805"}}], [{"name": "swap", "args": {"inputToken": "usdc.e", "outputToken": "gmx", "outputAmount": "0.0805"}}, {"name": "repay", "args": {"protocolName": "lodestar", "token": "gmx", "amount": "outputAmount"}}]], "swap usdc.e for 0.085 gmx and repay my gmx borrow position on lodestar on arbitrum.": [[{"name": "swap", "args": {"inputToken": "usdc.e", "outputAmount": "0.085", "outputToken": "gmx", "chainName": "arbitrum"}}, {"name": "repay", "args": {"protocolName": "lodestar", "token": "gmx", "chainName": "arbitrum", "amount": "0.085"}}], [{"name": "swap", "args": {"inputToken": "usdc.e", "outputAmount": "0.085", "outputToken": "gmx"}}, {"name": "repay", "args": {"protocolName": "lodestar", "token": "gmx", "chainName": "arbitrum", "amount": "0.085"}}]], "what pools are supported on pendle?": [[{"name": "support", "args": {}}]], "swap all of my tokens on base to eth, then bridge eth to polygon": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "all", "outputToken": "eth", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "base", "destinationChainName": "polygon"}}]], "swap eth for 2 matic on eth mainnet then bridge matic to polygon": [[{"name": "swap", "args": {"inputToken": "eth", "outputAmount": "2", "outputToken": "matic", "chainName": "ethereum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "sourceChainName": "ethereum", "destinationChainName": "polygon", "token": "matic"}}], [{"name": "swap", "args": {"inputToken": "eth", "outputAmount": "2", "outputToken": "matic", "chainName": "ethereum"}}, {"name": "bridge", "args": {"amount": "2", "sourceChainName": "ethereum", "destinationChainName": "polygon", "token": "matic"}}]], "swap all degen for eth on base": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "degen", "outputToken": "eth", "chainName": "base"}}]], "repay all my gmx borrow position on lodestar": [[{"name": "repay", "args": {"protocolName": "lodestar", "amount": "all", "token": "gmx"}}]], "swap all of my tokens on base to eth, transfer all eth from base to polygon": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "all", "outputToken": "eth", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "base", "destinationChainName": "polygon"}}]], "swap 0.05 eth to 0x8e16d46cb2da01cdd49601ec73d7b0344969ae33 on base": [[{"name": "swap", "args": {"inputAmount": "0.05", "inputToken": "eth", "outputToken": "0x8e16d46cb2da01cdd49601ec73d7b0344969ae33", "chainName": "base"}}]], "swap all of my gmx for usdc on arbitrum": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "gmx", "outputToken": "usdc", "chainName": "arbitrum"}}]], "swap max gmx to usdc on arbitrum": [[{"name": "swap", "args": {"inputToken": "gmx", "outputToken": "usdc", "chainName": "arbitrum"}}]], "withdraw all positions from lodestar": [[{"name": "withdraw", "args": {"protocolName": "lodestar", "amount": "all"}}]], "what pools are supported on pendle ?": [[{"name": "support", "args": {}}]], "what pools are supported on balancer ?": [[{"name": "support", "args": {}}]], "repay my gmx borrow position on lodestar on arbitrum": [[{"name": "repay", "args": {"protocolName": "lodestar", "token": "gmx", "chainName": "arbitrum"}}], [{"name": "repay", "args": {"protocolName": "lodestar", "poolName": "gmx", "chainName": "arbitrum"}}], [{"name": "repay", "args": {"protocolName": "lodestar", "amount": "all", "token": "gmx", "chainName": "arbitrum"}}]], "in 45 minutes, bridge 600 usdc from optimism to ethereum and buy pepe": [[{"name": "time", "args": {"start_time": "45 minutes"}}, {"name": "bridge", "args": {"amount": "600", "token": "usdc", "sourceChainName": "optimism", "destinationChainName": "ethereum"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "pepe", "chainName": "ethereum", "inputAmount": "outputAmount"}}], [{"name": "time", "args": {"start_time": "45 minutes"}}, {"name": "bridge", "args": {"amount": "600", "token": "usdc", "sourceChainName": "optimism", "destinationChainName": "ethereum"}}, {"name": "swap", "args": {"inputToken": "usdc", "outputToken": "pepe", "chainName": "ethereum"}}]], "swap all of my grt for usdc with 3% slippage on arbitrum, bridge it from arbitrum to base, and swap it for axl with 3% slippage on base": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "grt", "outputToken": "usdc", "slippage": "3%", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "axl", "slippage": "3%", "chainName": "base"}}]], "swap eth for 2 usdc and deposit it into the gmx weth-usdc pool on arbitrum at 9pm utc": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc", "outputAmount": "2", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "gmx", "poolName": "weth-usdc", "amount": "2", "token": "usdc", "chainName": "arbitrum"}}, {"name": "time", "args": {"start_time": "9pm utc"}}]], "deposit 2 usdc into the gmx btc-usdc pool on arbitrum at 9pm est": [[{"name": "deposit", "args": {"protocolName": "gmx", "poolName": "btc-usdc", "amount": "2", "token": "usdc", "chainName": "arbitrum"}}, {"name": "time", "args": {"start_time": "9pm est"}}]], "buy 3 usdc and 3 steur with eth on camelot and deposit both tokens in the camelot steur-usdc pool on arbitrum": [[{"name": "swap", "args": {"protocolName": "camelot", "inputToken": "eth", "outputToken": "usdc", "outputAmount": "3", "chainName": "arbitrum"}}, {"name": "swap", "args": {"protocolName": "camelot", "inputToken": "eth", "outputToken": "steur", "outputAmount": "3", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "camelot", "poolName": "steur-usdc", "token": "usdc", "amount": "3", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "camelot", "poolName": "steur-usdc", "token": "steur", "amount": "3", "chainName": "arbitrum"}}]], "bridge 0.075 eth from arbitrum to mantle and swap to usdy when eth is below 2250": [[{"name": "bridge", "args": {"amount": "0.075", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "mantle"}}, {"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdy", "chainName": "mantle"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "2250", "type": "price", "value_units": "usd"}}]], "swap 0.075 eth to usdy when eth is below 2250 and gas is below 35": [[{"name": "swap", "args": {"inputAmount": "0.075", "inputToken": "eth", "outputToken": "usdy"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "2250", "type": "price"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "35", "type": "gas"}}], [{"name": "swap", "args": {"inputAmount": "0.075", "inputToken": "eth", "outputToken": "usdy"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "2250", "type": "price", "value_units": "usd"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "35", "type": "gas"}}], [{"name": "swap", "args": {"inputAmount": "0.075", "inputToken": "eth", "outputToken": "usdy"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "2250", "type": "price", "value_units": "usd"}}, {"name": "condition", "args": {"operator": "and", "subject": "gas", "comparator": "<=", "value": "35", "type": "gas"}}]], "what protocols can i withdraw from?": [[{"name": "support", "args": {}}]], "what protocols can i deposit into?": [[{"name": "support", "args": {}}]], "what chains are supported": [[{"name": "support", "args": {}}]], "transfer 0.0001 eth to 0x7886dace06abdeb54929984cc9adea78b42ed290 on base every minute": [[{"name": "transfer", "args": {"amount": "0.0001", "token": "eth", "recipient": "0x7886dace06abdeb54929984cc9adea78b42ed290", "chainName": "base"}}, {"name": "time", "args": {"recurrence": {"type": "minutes", "interval": 1}}}]], "withdraw 1000 usdc.e from lodestar on arbitrum and buy 500 rosnet": [[{"name": "withdraw", "args": {"protocolName": "lodestar", "amount": "1000", "token": "usdc.e", "chainName": "arbitrum"}}, {"name": "swap", "args": {"inputToken": "usdc.e", "outputToken": "rosnet", "chainName": "arbitrum", "outputAmount": "500"}}]], "on arbitrum, swap 20 usdc to grail on camelot at 22:00 utc daily": [[{"name": "swap", "args": {"protocolName": "camelot", "inputAmount": "20", "inputToken": "usdc", "outputToken": "grail", "chainName": "arbitrum"}}, {"name": "time", "args": {"start_time": "22:00 utc", "recurrence": {"type": "days", "interval": 1}}}]], "swap half of degen for 0x0d97f261b1e88845184f678e2d1e7a98d9fd38de on base": [[{"name": "swap", "args": {"inputAmount": "half", "inputToken": "degen", "outputToken": "0x0d97f261b1e88845184f678e2d1e7a98d9fd38de", "chainName": "base"}}]], "swap all of my weth for frax on arbitrum, lend frax on lodestar": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "weth", "outputToken": "frax", "chainName": "arbitrum"}}, {"name": "lend", "args": {"protocolName": "lodestar", "token": "frax", "chainName": "arbitrum", "amount": "outputAmount"}}]], "transfer 5.4 matic to 0x5b7567ed1bb7c338a20af4efb72e73dd6ef1df61 on polygon": [[{"name": "transfer", "args": {"amount": "5.4", "token": "matic", "recipient": "0x5b7567ed1bb7c338a20af4efb72e73dd6ef1df61", "chainName": "polygon"}}]], "swap all of my dai for uni via openocean on arbitrum": [[{"name": "swap", "args": {"protocolName": "openocean", "inputAmount": "all", "inputToken": "dai", "outputToken": "uni", "chainName": "arbitrum"}}]], "what protocols are supported for lending on arbitrum ?": [[{"name": "support", "args": {}}]], "deposit 0.034 eth and 100 usdc into the pancakeswap eth-usdc pool on base": [[{"name": "deposit", "args": {"protocolName": "pancakeswap", "poolName": "eth-usdc", "amount": "0.034", "token": "eth", "chainName": "base"}}, {"name": "deposit", "args": {"protocolName": "pancakeswap", "poolName": "eth-usdc", "amount": "100", "token": "usdc", "chainName": "base"}}]], "swap all of my tokens on base to usdc. bridge usdc from base to polygon. on polygon, swap usdc for yup": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "all", "outputToken": "usdc", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "base", "destinationChainName": "polygon"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "yup", "chainName": "polygon"}}]], "swap all of my tokens on base to eth. bridge eth from base to polygon. on polygon, swap eth for yup": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "all", "outputToken": "eth", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "base", "destinationChainName": "polygon"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "yup", "chainName": "polygon"}}]], "bridge eth from eth blockchain to arb blockchain": [[{"name": "bridge", "args": {"token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}], [{"name": "bridge", "args": {"amount": "all", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}]], "on arbitrum swap 100% of my gmx to eth, lend 0.01 eth to lodestar, and borrow 0.005 usdc from lodestar": [[{"name": "swap", "args": {"inputAmount": "100%", "inputToken": "gmx", "outputToken": "eth", "chainName": "arbitrum"}}, {"name": "lend", "args": {"protocolName": "lodestar", "amount": "0.01", "token": "eth", "chainName": "arbitrum"}}, {"name": "borrow", "args": {"protocolName": "lodestar", "amount": "0.005", "token": "usdc", "chainName": "arbitrum"}}]], "send 0.00999 eth to 0x5881d9bfff787c8655a9b7f3484ae1a6f7a966e8 on arbitrum": [[{"name": "transfer", "args": {"amount": "0.00999", "token": "eth", "recipient": "0x5881d9bfff787c8655a9b7f3484ae1a6f7a966e8", "chainName": "arbitrum"}}]], "swap 100 usdc to wbtc if btc price falls under 60000": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "wbtc"}}, {"name": "condition", "args": {"subject": "btc", "comparator": "<=", "value": "60000", "type": "price", "value_units": "usd"}}], [{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "wbtc"}}, {"name": "condition", "args": {"subject": "wbtc", "comparator": "<=", "value": "60000", "type": "price", "value_units": "usd"}}]], "deposit 0.01 eth into the sy-reth pool on arbitrum": [[{"name": "deposit", "args": {"poolName": "sy-reth", "amount": "0.01", "token": "eth", "chainName": "arbitrum"}}]], "long doge on gmx": [[{"name": "long", "args": {"protocolName": "gmx", "inputToken": "doge", "outputToken": "doge"}}]], "swap bnb for eth": [[{"name": "swap", "args": {"inputToken": "bnb", "outputToken": "eth"}}]], "transfer 5 bnb to 0x1f9090aae28b8a3dceadf281b0f12828e676c326": [[{"name": "transfer", "args": {"amount": "5", "token": "bnb", "recipient": "0x1f9090aae28b8a3dceadf281b0f12828e676c326"}}]], "transfer 12 arb to 0xd225cff23659a19996118ae544e9dc0730d4bd31": [[{"name": "transfer", "args": {"amount": "12", "token": "arb", "recipient": "0xd225cff23659a19996118ae544e9dc0730d4bd31"}}]], "transfer 322 trump to 0x8c8d7c46219d9205f056f28fee5950ad564d7465": [[{"name": "transfer", "args": {"amount": "322", "token": "trump", "recipient": "0x8c8d7c46219d9205f056f28fee5950ad564d7465"}}]], "swap 0x1f9840a85d5af5bf1d1762f925bdaddc4201f984 to 0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9": [[{"name": "swap", "args": {"inputToken": "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984", "outputToken": "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9"}}]], "swap 0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2 to 0x514910771af9ca656af840dff83e8264ecf986ca": [[{"name": "swap", "args": {"inputToken": "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2", "outputToken": "0x514910771af9ca656af840dff83e8264ecf986ca"}}]], "transfer 0xc00e94cb662c3520282e6f5717214004a7f26888 to 0x70d8b972ef2a751f0db12c0e67dd21ae7b646797": [[{"name": "transfer", "args": {"token": "0xc00e94cb662c3520282e6f5717214004a7f26888", "recipient": "0x70d8b972ef2a751f0db12c0e67dd21ae7b646797"}}], [{"name": "transfer", "args": {"amount": "all", "token": "0xc00e94cb662c3520282e6f5717214004a7f26888", "recipient": "0x70d8b972ef2a751f0db12c0e67dd21ae7b646797"}}]], "deposit 100 usdc into dai-usdc pool of aerodrome": [[{"name": "deposit", "args": {"protocolName": "aerodrome", "poolName": "dai-usdc", "amount": "100", "token": "usdc"}}]], "withdraw my eth-grail lp, swap half of my grail to eth and bridge to optimism when gas is below 25": [[{"name": "withdraw", "args": {"poolName": "eth-grail"}}, {"name": "swap", "args": {"inputAmount": "half", "inputToken": "grail", "outputToken": "eth"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "destinationChainName": "optimism"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "25", "type": "gas"}}]], "withdraw my eth-grail lp from camelot, swap half of my grail to eth and bridge to optimism when gas is below 25": [[{"name": "withdraw", "args": {"protocolName": "camelot", "poolName": "eth-grail"}}, {"name": "swap", "args": {"inputAmount": "half", "inputToken": "grail", "outputToken": "eth"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "destinationChainName": "optimism"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "25", "type": "gas"}}], [{"name": "withdraw", "args": {"protocolName": "camelot", "token": "eth-grail lp"}}, {"name": "swap", "args": {"inputAmount": "half", "inputToken": "grail", "outputToken": "eth"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "destinationChainName": "optimism"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "25", "type": "gas"}}]], "withdraw my eth-grail lp from camelot": [[{"name": "withdraw", "args": {"protocolName": "camelot", "poolName": "eth-grail"}}], [{"name": "withdraw", "args": {"protocolName": "camelot", "token": "eth-grail lp"}}]], "withdraw 0xf82105aa473560cfbf8cbc6fd83db14eb4028117": [[{"name": "withdraw", "args": {"token": "0xf82105aa473560cfbf8cbc6fd83db14eb4028117", "protocolName": "all"}}]], "take 50% of the eth that i have and wrap it to weth": [[{"name": "swap", "args": {"inputAmount": "50%", "inputToken": "eth", "outputToken": "weth"}}]], "wrap half the eth i have": [[{"name": "swap", "args": {"inputAmount": "half", "inputToken": "eth", "outputToken": "weth"}}]], "bridge 25 % of eth to optimism when gas is below 30 and buy uni when uni is below $13.12": [[{"name": "bridge", "args": {"amount": "25%", "token": "eth", "destinationChainName": "optimism"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "30", "type": "gas"}}, {"name": "swap", "args": {"outputToken": "uni", "chainName": "optimism"}}, {"name": "condition", "args": {"subject": "uni", "comparator": "<=", "value": "13.12", "value_units": "usd", "type": "price"}}], [{"name": "bridge", "args": {"amount": "25%", "token": "eth", "destinationChainName": "optimism"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "30", "type": "gas"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "uni", "chainName": "optimism"}}, {"name": "condition", "args": {"subject": "uni", "comparator": "<=", "value": "13.12", "value_units": "usd", "type": "price"}}]], "bridge 0.03 eth to optimism when it's cheaper than 3$": [[{"name": "bridge", "args": {"amount": "0.03", "token": "eth", "destinationChainName": "optimism"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "3", "type": "price", "value_units": "usd"}}]], "bridge 0.03 eth from arbitrum to base and buy circle when circle is below $15": [[{"name": "bridge", "args": {"amount": "0.03", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "circle", "chainName": "base"}}, {"name": "condition", "args": {"subject": "circle", "comparator": "<=", "value": "15", "type": "price", "value_units": "usd"}}]], "swap 0.025 eth on base to circle when circle is below $15": [[{"name": "swap", "args": {"inputAmount": "0.025", "inputToken": "eth", "outputToken": "circle", "chainName": "base"}}, {"name": "condition", "args": {"subject": "circle", "comparator": "<=", "value": "15", "type": "price", "value_units": "usd"}}]], "withdraw from all my camelot positions": [[{"name": "withdraw", "args": {"protocolName": "camelot", "poolName": "all", "amount": "all"}}], [{"name": "withdraw", "args": {"protocolName": "camelot", "poolName": "all"}}]], "deposit 10 wbeth into sy-wbeth pool of pendle on bsc": [[{"name": "deposit", "args": {"protocolName": "pendle", "poolName": "sy-wbeth", "amount": "10", "token": "wbeth", "chainName": "bsc"}}]], "deposit 10 wbeth into sy-wbeth pool of pendle on bnb smart chain": [[{"name": "deposit", "args": {"protocolName": "pendle", "poolName": "sy-wbeth", "amount": "10", "token": "wbeth", "chainName": "bsc"}}]], "stake 100 s*usdc into stargate": [[{"name": "stake", "args": {"amount": "100", "token": "s*usdc", "protocolName": "stargate"}}]], "stake 100 s*usdt into stargate": [[{"name": "stake", "args": {"protocolName": "stargate", "amount": "100", "token": "s*usdt"}}]], "deposit 1 eth on camelot and swap 1 eth for usdc": [[{"name": "deposit", "args": {"protocolName": "camelot", "amount": "1", "token": "eth"}}, {"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}]], "swap 0.005 eth on base to base": [[{"name": "swap", "args": {"inputAmount": "0.005", "inputToken": "eth", "outputToken": "base", "chainName": "base"}}]], "use jumper on arbitrum and bridge .01 eth from arbitrum to base": [[{"name": "bridge", "args": {"amount": ".01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base", "protocolName": "jumper"}}]], "bridge all my usdt from bsc to base and swap it to eth on base": [[{"name": "bridge", "args": {"amount": "all", "token": "usdt", "sourceChainName": "bsc", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdt", "outputToken": "eth", "chainName": "base"}}]], "swap half of 0xdfbb60d3245345ad8427c0a36a69e206e9de8fa7 to eth on base": [[{"name": "swap", "args": {"inputAmount": "half", "inputToken": "0xdfbb60d3245345ad8427c0a36a69e206e9de8fa7", "outputToken": "eth", "chainName": "base"}}]], "deposit 4.955 premia into sy-stargate-usdt pool on pendle": [[{"name": "deposit", "args": {"protocolName": "pendle", "poolName": "sy-stargate-usdt", "amount": "4.955", "token": "premia"}}]], "bridge all of my matic from polygon to bsc bnb": [[{"name": "bridge", "args": {"amount": "all", "token": "matic", "sourceChainName": "polygon", "destinationChainName": "bsc"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "matic", "outputToken": "bnb", "chainName": "bsc"}}]], "bridge 9 usdt from bsc to avalanche avax": [[{"name": "bridge", "args": {"amount": "9", "token": "usdt", "sourceChainName": "bsc", "destinationChainName": "avalanche"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdt", "outputToken": "avax", "chainName": "avalanche"}}]], "bridge 50 usdt from bsc to base eth": [[{"name": "bridge", "args": {"amount": "50", "token": "usdt", "sourceChainName": "bsc", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdt", "outputToken": "eth", "chainName": "base"}}]], "swap 100 usdc to usdt on arbitrum and send 100 usdt to 0x0b1a89664970ebeb16d6a1a039017049eea45a20": [[{"name": "swap", "args": {"inputToken": "usdc", "outputToken": "usdt", "outputAmount": "100", "chainName": "arbitrum"}}, {"name": "transfer", "args": {"amount": "100", "token": "usdt", "recipient": "0x0b1a89664970ebeb16d6a1a039017049eea45a20", "chainName": "arbitrum"}}]], "when gas is below 0.15 long doge with 5x leverage with 310 usdc on gmx on arbitrum": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "0.15", "type": "gas"}}, {"name": "long", "args": {"protocolName": "gmx", "inputAmount": "310", "inputToken": "usdc", "outputToken": "doge", "chainName": "arbitrum", "leverageMultiplier": "5x"}}], [{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "0.15", "type": "gas"}}, {"name": "long", "args": {"protocolName": "gmx", "inputAmount": "310", "inputToken": "usdc", "outputToken": "doge", "chainName": "arbitrum", "leverageMultiplier": "5"}}]], "close doge position on gmx on arbitrum": [[{"name": "close", "args": {"protocolName": "gmx", "inputToken": "doge", "chainName": "arbitrum"}}]], "withdraw 9 usdc from the usdc-arb pool on compound ": [[{"name": "withdraw", "args": {"protocolName": "compound", "poolName": "usdc-arb", "amount": "9", "token": "usdc"}}]], "lend 10 usdc on compound on arbitru ": [[{"name": "lend", "args": {"protocolName": "compound", "amount": "10", "token": "usdc", "chainName": "arbitrum"}}]], "sell gmx on arbitrum to eth": [[{"name": "swap", "args": {"inputToken": "gmx", "outputToken": "eth", "chainName": "arbitrum"}}]], "sell 20 usdc for eth every hour starting at 10:45 pm today": [[{"name": "swap", "args": {"inputAmount": "20", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "time", "args": {"start_time": "10:45 pm today", "recurrence": {"type": "hours", "interval": 1}}}]], "swap $100 worth of eth to usdc on sushi": [[{"name": "swap", "args": {"protocolName": "sushi", "inputAmount": "100", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "usdc"}}]], "deposit 99 usdc and an equal amount of eth on uniswap on arbitrum": [[{"name": "deposit", "args": {"protocolName": "uniswap", "amount": "99", "token": "usdc", "poolName": "usdc-eth", "chainName": "arbitrum"}}], [{"name": "deposit", "args": {"protocolName": "uniswap", "amount": "99", "token": "usdc", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "uniswap", "amount": "outputAmount", "token": "eth", "chainName": "arbitrum"}}]], "bridge 100 usdc and 0.04 eth to arbitrum": [[{"name": "bridge", "args": {"amount": "100", "token": "usdc", "destinationChainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "0.04", "token": "eth", "destinationChainName": "arbitrum"}}]], "swap 100 usdc to eth if eth price falls under 3100": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "3100", "type": "price", "value_units": "usd"}}]], "please swap my aero on base to eth": [[{"name": "swap", "args": {"inputToken": "aero", "outputToken": "eth", "chainName": "base"}}]], "swap all my gmx, lode, wbtc, and arb for eth on arbitrum": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": ["gmx", "lode", "wbtc", "arb"], "outputToken": "eth", "chainName": "arbitrum"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "gmx", "outputToken": "eth", "chainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "lode", "outputToken": "eth", "chainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "wbtc", "outputToken": "eth", "chainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "arb", "outputToken": "eth", "chainName": "arbitrum"}}]], "bridge matic on polygon to usdt on optimism": [[{"name": "bridge", "args": {"token": "matic", "sourceChainName": "polygon", "destinationChainName": "optimism"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "matic", "outputToken": "usdt", "chainName": "optimism"}}]], "transfer 100 usdc on arbitrum to 0xe08583e015f358ce59489deba17b9774833c9f8e": [[{"name": "transfer", "args": {"amount": "100", "token": "usdc", "recipient": "0xe08583e015f358ce59489deba17b9774833c9f8e", "chainName": "arbitrum"}}]], "close my 3x leverage doge position on gmx on arbitrum": [[{"name": "close", "args": {"protocolName": "gmx", "inputToken": "doge", "chainName": "arbitrum", "leverageMultiplier": "3x"}}]], "close my 3x leverage doge long on gmx on arbitrum": [[{"name": "close", "args": {"protocolName": "gmx", "inputToken": "doge", "chainName": "arbitrum", "leverageMultiplier": "3x"}}], [{"name": "close", "args": {"protocolName": "gmx", "outputToken": "doge", "chainName": "arbitrum", "leverageMultiplier": "3x"}}]], "bridge arbitrum usdt to base usdc": [[{"name": "bridge", "args": {"token": "usdt", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdt", "outputToken": "usdc", "chainName": "base"}}], [{"name": "bridge", "args": {"amount": "all", "token": "usdt", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdt", "outputToken": "usdc", "chainName": "base"}}]], "buy eth with 100 usdc whenever eth goes below $3100 until tomorrow": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "3100", "value_units": "usd", "type": "price"}}, {"name": "time", "args": {"end_time": "tomorrow"}}]], "buy eth with 100 usdc whenever eth goes below $3100": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "3100", "type": "price", "value_units": "usd"}}]], "when gas is sub 21, swap $2000 worth of wbtc for eth": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "21", "type": "gas"}}, {"name": "swap", "args": {"inputAmount": "2000", "inputAmountUnits": "usd", "inputToken": "wbtc", "outputToken": "eth"}}]], "swap 20$ of 0xd07379a755a8f11b57610154861d694b2a0f615a to eth on base": [[{"name": "swap", "args": {"inputAmount": "20", "inputAmountUnits": "usd", "inputToken": "0xd07379a755a8f11b57610154861d694b2a0f615a", "outputToken": "eth", "chainName": "base"}}]], "swap 500$ of 0xd07379a755a8f11b57610154861d694b2a0f615a to eth on base": [[{"name": "swap", "args": {"inputAmount": "500", "inputAmountUnits": "usd", "inputToken": "0xd07379a755a8f11b57610154861d694b2a0f615a", "outputToken": "eth", "chainName": "base"}}]], "swap 5 polygon to eth on polygon": [[{"name": "swap", "args": {"inputAmount": "5", "inputToken": "polygon", "outputToken": "eth", "chainName": "polygon"}}]], "swap all my base tokens to eth on base and then bridhe these eth on eth. then send all these eth to this addy: 0xd896c7c5b9557e51c6339680bb9cab817299305c": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "base", "outputToken": "eth", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "base", "destinationChainName": "ethereum"}}, {"name": "transfer", "args": {"amount": "outputAmount", "token": "eth", "recipient": "0xd896c7c5b9557e51c6339680bb9cab817299305c", "chainName": "ethereum"}}]], "swap all of my grail to eth on arbitrum and bridge .005 eth to base": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "grail", "outputToken": "eth", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": ".005", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}]], "swap eth to 50 usdc on arbtirum one": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc", "outputAmount": "50", "chainName": "arbitrum"}}]], "bridge 100 usdc from base to arbitrum via jumper every monday and wednesday at 4 pm cet": [[{"name": "bridge", "args": {"amount": "100", "token": "usdc", "sourceChainName": "base", "destinationChainName": "arbitrum", "protocolName": "jumper"}}, {"name": "time", "args": {"start_time": "monday 4 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "time", "args": {"start_time": "wednesday 4 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}]], "swap 100 usdc to eth on arbitrum every monday and wednesday at 4:50 pm cet": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "eth", "chainName": "arbitrum"}}, {"name": "time", "args": {"start_time": "monday 4:50 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "time", "args": {"start_time": "wednesday 4:50 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}]], "bridge eth from arbitrum to base every tuesday and thursday at 5 pm cet": [[{"name": "bridge", "args": {"token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "time", "args": {"start_time": "tuesday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "time", "args": {"start_time": "thursday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}]], "move 0.02 eth from ethereum to base": [[{"name": "bridge", "args": {"amount": "0.02", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "base"}}]], "transfer 0.02 eth to my wallet on base": [[{"name": "transfer", "args": {"amount": "0.02", "token": "eth", "recipient": "wallet", "chainName": "base"}}]], "bridge $30 of eth from ethereum mainnet to base l2 chain": [[{"name": "bridge", "args": {"amount": "30", "amount_units": "usd", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "base"}}]], "transfer 5 usdt from optimism to arbitrum": [[{"name": "bridge", "args": {"amount": "5", "token": "usdt", "sourceChainName": "optimism", "destinationChainName": "arbitrum"}}]], "deposit 1 eth and equal amount of usdc into aerodrome": [[{"name": "deposit", "args": {"protocolName": "aerodrome", "amount": "1", "token": "eth", "poolName": "eth-usdc"}}, {"name": "deposit", "args": {"protocolName": "aerodrome", "amount": "outputAmount", "token": "usdc", "poolName": "eth-usdc"}}]], "long btc with 5x leverage with 150 usdc on gmx and long eth with 5x leverage on gmx with 150 usdc and unwrap all my weth on arbitrum": [[{"name": "long", "args": {"protocolName": "gmx", "inputAmount": "150", "inputToken": "usdc", "outputToken": "btc", "leverageMultiplier": "5"}}, {"name": "long", "args": {"protocolName": "gmx", "inputAmount": "150", "outputToken": "eth", "leverageMultiplier": "5", "inputToken": "usdc"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "weth", "outputToken": "eth", "chainName": "arbitrum"}}]], "using my arbitrum eth buy .01 worth of usdc": [[{"name": "swap", "args": {"inputAmount": ".01", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}]], "bridge all my usdc from arb to base and bid aerodrome with it": [[{"name": "bridge", "args": {"amount": "all", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "aerodrome", "chainName": "base"}}]], "on base swap tybg for 0x010728385ce76c3f4f9ccb8b7f86cf49f6c56305": [[{"name": "swap", "args": {"inputToken": "tybg", "outputToken": "0x010728385ce76c3f4f9ccb8b7f86cf49f6c56305", "chainName": "base"}}]], "swap 1.8 matic to usdc on polygon, bridge all usdc to base": [[{"name": "swap", "args": {"inputAmount": "1.8", "inputToken": "matic", "outputToken": "usdc", "chainName": "polygon"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "polygon", "destinationChainName": "base"}}]], "swap 1.5 matic to eth on polygon then bridge to base": [[{"name": "swap", "args": {"inputAmount": "1.5", "inputToken": "matic", "outputToken": "eth", "chainName": "polygon"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "polygon", "destinationChainName": "base"}}]], "swap all of my usdc on arbitrum for eth and then transfer 0.02 eth to base": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "usdc", "outputToken": "eth", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "0.02", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}]], "on base blockchain, swap my 20$ of my base token to eth": [[{"name": "swap", "args": {"inputAmount": "20", "inputAmountUnits": "usd", "inputToken": "base", "outputToken": "eth", "chainName": "base"}}]], "swap my eth on arbtrim for 30 usdc and short sol with 15 with 2x on gmx": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "usdc", "outputAmount": "30", "chainName": "arbitrum"}}, {"name": "short", "args": {"protocolName": "gmx", "inputToken": "usdc", "inputAmount": "outputAmount", "outputToken": "sol", "leverageMultiplier": "2x", "chainName": "arbitrum"}}]], "swap 20$ of eth in usdc on jumper every tuesday for 2 weeks": [[{"name": "swap", "args": {"protocolName": "jumper", "inputAmount": "20", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "time", "args": {"start_time": "tuesday", "recurrence": {"type": "weeks", "interval": 1}, "end_time": "2 weeks"}}]], "swap 1 eth to usdc when gas is below 10 until tomorrow": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "time", "args": {"end_time": "tomorrow"}}]], "swap all matic to usdc on polygon then bridge all usdc from polygon to base": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "matic", "outputToken": "usdc", "chainName": "polygon"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "polygon", "destinationChainName": "base"}}]], "swap blur on eth for pepe on blast": [[{"name": "swap", "args": {"inputToken": "blur", "outputToken": "pepe", "chainName": "ethereum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "pepe", "destinationChainName": "blast", "sourceChainName": "ethereum"}}]], "swap all of my ondo on arb for wif on base": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "ondo", "outputToken": "wif", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "wif", "destinationChainName": "base", "sourceChainName": "arbitrum"}}]], "swap all of my weth on base for eth on arbitrum": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "weth", "outputToken": "eth", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "destinationChainName": "arbitrum", "sourceChainName": "base"}}]], "swap 100 akt on optimism for stx on bsc": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "akt", "outputToken": "stx", "chainName": "optimism"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "stx", "destinationChainName": "bsc", "sourceChainName": "optimism"}}]], "swap ltc on polygon for 13 shib on optimism": [[{"name": "swap", "args": {"inputToken": "ltc", "outputToken": "shib", "outputAmount": "13", "chainName": "polygon"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "shib", "sourceChainName": "polygon", "destinationChainName": "optimism"}}]], "swap jasmy on base for 100 gala on arbitrum": [[{"name": "swap", "args": {"inputToken": "jasmy", "outputToken": "gala", "outputAmount": "100", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "gala", "sourceChainName": "base", "destinationChainName": "arbitrum"}}]], "swap bonk on op for floki": [[{"name": "swap", "args": {"inputToken": "bonk", "outputToken": "floki", "chainName": "optimism"}}]], "swap eth for link on arb": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "link", "chainName": "arbitrum"}}]], "swap $100 of eth on arbitrum for $brett on base": [[{"name": "swap", "args": {"inputAmountUnits": "usd", "inputAmount": "100", "inputToken": "eth", "outputToken": "brett", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "brett", "destinationChainName": "base", "sourceChainName": "arbitrum"}}]], "swap $100 worth of eth on avalanche for $brett on mainnet": [[{"name": "swap", "args": {"inputAmount": "100", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "brett", "chainName": "avalanche"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "brett", "sourceChainName": "avalanche", "destinationChainName": "ethereum"}}]], "withdraw all my eth from lodestar. then long doge with 2x leverage": [[{"name": "withdraw", "args": {"protocolName": "lodestar", "amount": "all", "token": "eth"}}, {"name": "long", "args": {"protocolName": "lodestar", "inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "doge", "leverageMultiplier": "2x"}}], [{"name": "withdraw", "args": {"protocolName": "lodestar", "amount": "all", "token": "eth"}}, {"name": "long", "args": {"protocolName": "lodestar", "inputToken": "eth", "outputToken": "doge", "leverageMultiplier": "2x"}}]], "swap all of usdc.e on polygon to matic via ambient": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "usdc.e", "outputToken": "matic", "chainName": "polygon", "protocolName": "ambient"}}]], "lend all of my usdc on arbitrum on lodestar. swap all of my degen for eth on base and bridge it to arbitrum. swap all of my weth on base to eth.": [[{"name": "lend", "args": {"amount": "all", "token": "usdc", "chainName": "arbitrum", "protocolName": "lodestar"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "degen", "outputToken": "eth", "chainName": "base"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "base", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "weth", "outputToken": "eth", "chainName": "base"}}]], "bridge 0.01 eth from arbitrum to optimisim, blast, and zksych": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "optimism"}}, {"name": "bridge", "args": {"amount": "0.01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "blast"}}, {"name": "bridge", "args": {"amount": "0.01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "zksync"}}]], "bridge 0.01 eth from arbitrum to optimisim and to blast": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "optimism"}}, {"name": "bridge", "args": {"amount": "0.01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "blast"}}]], "bridge 0.01 eth to optimism, blast and base": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "destinationChainName": "optimism"}}, {"name": "bridge", "args": {"amount": "0.01", "token": "eth", "destinationChainName": "blast"}}, {"name": "bridge", "args": {"amount": "0.01", "token": "eth", "destinationChainName": "base"}}]], "close my sol long on gmx": [[{"name": "close", "args": {"protocolName": "gmx", "inputToken": "sol"}}]], "close my sol position on gmx on arbitrum": [[{"name": "close", "args": {"protocolName": "gmx", "chainName": "arbitrum", "inputToken": "sol"}}]], "swap $4.5k worth of wbtc for trump on ethereum": [[{"name": "swap", "args": {"inputAmount": "4500.0", "inputAmountUnits": "usd", "inputToken": "wbtc", "outputToken": "trump", "chainName": "ethereum"}}]], "swap eth to 100 usdc on base every tuesday and thursday at 6pm cet": [[{"name": "swap", "args": {"inputToken": "eth", "outputAmount": "100", "outputToken": "usdc", "chainName": "base"}}, {"name": "time", "args": {"start_time": "tuesday 6pm cet", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "time", "args": {"start_time": "thursday 6pm cet", "recurrence": {"type": "weeks", "interval": 1}}}]], "swap $670 of sol for wbtc for arbitrum": [[{"name": "swap", "args": {"inputAmount": "670", "inputAmountUnits": "usd", "inputToken": "sol", "outputToken": "wbtc", "chainName": "arbitrum"}}]], "buy 0.01 eth of maga": [[{"name": "swap", "args": {"outputToken": "maga", "inputAmount": "0.01", "inputToken": "eth"}}]], "buy 0.01 eth of pepe": [[{"name": "swap", "args": {"outputToken": "pepe", "inputAmount": "0.01", "inputToken": "eth"}}]], "buy 10 dollars worth of eth of 0x576e2bed8f7b46d34016198911cdf9886f78bea7": [[{"name": "swap", "args": {"inputAmount": "10", "inputAmountUnits": "usd", "inputToken": "eth", "outputToken": "0x576e2bed8f7b46d34016198911cdf9886f78bea7"}}]], "bridge all of my usdc across all chains to arbitrum": [[{"name": "bridge", "args": {"amount": "all", "token": "usdc", "sourceChainName": "all", "destinationChainName": "arbitrum"}}]], "withdraw half my eth position from morpho when ltv goes below 40": [[{"name": "withdraw", "args": {"amount": "half", "token": "eth", "protocolName": "morpho"}}, {"name": "condition", "args": {"subject": "ltv", "comparator": "<=", "value": "40%", "type": "ltv"}}]], "when gas doubles, sell all my eth": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "==", "value": "2x", "type": "gas"}}], [{"name": "swap", "args": {"inputAmount": "all", "inputToken": "eth"}}, {"name": "condition", "args": {"subject": "gas", "comparator": ">=", "value": "2x", "type": "gas"}}]], "deposit into morpho and bridge all my usdc to base when gas goes down 50%": [[{"name": "deposit", "args": {"protocolName": "morpho"}}, {"name": "bridge", "args": {"amount": "all", "token": "usdc", "destinationChainName": "base"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "50%", "type": "gas"}}]], "if eth price goes up 20%, buy pepe with 30% of my usdc": [[{"name": "condition", "args": {"subject": "eth", "comparator": ">=", "value": "20%", "type": "price"}}, {"name": "swap", "args": {"inputAmount": "30%", "inputToken": "usdc", "outputToken": "pepe"}}]], "sell my doge when price 3x": [[{"name": "swap", "args": {"inputToken": "doge"}}, {"name": "condition", "args": {"subject": "doge", "comparator": "==", "value": "3x", "type": "price"}}], [{"name": "swap", "args": {"inputToken": "doge"}}, {"name": "condition", "args": {"subject": "doge", "comparator": ">=", "value": "3x", "type": "price"}}]], "bridge to arbitrum and swap to gmx when gmx market cap dips 10%": [[{"name": "bridge", "args": {"destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"outputToken": "gmx", "chainName": "arbitrum", "inputAmount": "outputAmount", "inputToken": "outputToken"}}, {"name": "condition", "args": {"subject": "gmx", "comparator": "<=", "value": "10%", "type": "market cap"}}]], "if market cap of $wif 3x, sell 10% of my wif": [[{"name": "condition", "args": {"subject": "wif", "comparator": "==", "value": "3x", "type": "market cap"}}, {"name": "swap", "args": {"inputAmount": "10%", "inputToken": "wif"}}], [{"name": "condition", "args": {"subject": "wif", "comparator": ">=", "value": "3x", "type": "market cap"}}, {"name": "swap", "args": {"inputAmount": "10%", "inputToken": "wif"}}]], "when my dog balance 5x, sell it all for eth": [[{"name": "condition", "args": {"subject": "dog", "comparator": "==", "value": "5x", "type": "balance"}}, {"name": "swap", "args": {"inputAmount": "all", "inputToken": "dog", "outputToken": "eth"}}]], "buy wbtc with eth when my usdc balance decreases 50%": [[{"name": "swap", "args": {"inputToken": "eth", "outputToken": "wbtc"}}, {"name": "condition", "args": {"subject": "usdc", "comparator": "<=", "value": "50%", "type": "balance"}}]], "deposit my eth and usdc into the uniswap pool with 3% range": [[{"name": "deposit", "args": {"protocolName": "uniswap", "token": "eth", "range": "3%"}}, {"name": "deposit", "args": {"protocolName": "uniswap", "amount": "outputAmount", "token": "usdc", "range": "3%"}}], [{"name": "deposit", "args": {"protocolName": "uniswap", "amount": "all", "token": "eth", "range": "3%"}}, {"name": "deposit", "args": {"protocolName": "uniswap", "amount": "outputAmount", "token": "usdc", "range": "3%"}}]], "deposit my degen into the degen-eth pool on aerodrome with 5% range": [[{"name": "deposit", "args": {"protocolName": "aerodrome", "poolName": "degen-eth", "token": "degen", "range": "5%"}}]], "deposit 20 dai and 20 usdt into the curve 3pool": [[{"name": "deposit", "args": {"protocolName": "curve", "poolName": "3pool", "amount": "20", "token": "dai"}}, {"name": "deposit", "args": {"protocolName": "curve", "poolName": "3pool", "amount": "20", "token": "usdt"}}]], "withdraw from my camelot position, redeposit with 20% range": [[{"name": "withdraw", "args": {"protocolName": "camelot"}}, {"name": "deposit", "args": {"protocolName": "camelot", "amount": "outputAmount", "token": "outputToken", "range": "20%"}}]], "deposit all my wbtc into the velodrome wbtc-eth pool with 10% range, then stake lp": [[{"name": "deposit", "args": {"protocolName": "velodrome", "poolName": "wbtc-eth", "amount": "all", "token": "wbtc", "range": "10%"}}, {"name": "stake", "args": {"protocolName": "velodrome", "amount": "outputAmount", "token": "lp"}}], [{"name": "deposit", "args": {"protocolName": "velodrome", "poolName": "wbtc-eth", "amount": "all", "token": "wbtc", "range": "10%"}}, {"name": "stake", "args": {"protocolName": "velodrome", "amount": "outputAmount", "token": "outputToken"}}]], "deposit 50 usdc and equivalent wbtc into 0xdef1c0ded9bec7f1a1670819833240f027b25eff": [[{"name": "deposit", "args": {"amount": "50", "token": "usdc", "poolName": "0xdef1c0ded9bec7f1a1670819833240f027b25eff"}}, {"name": "deposit", "args": {"amount": "outputAmount", "token": "wbtc", "poolName": "0xdef1c0ded9bec7f1a1670819833240f027b25eff"}}]], "withdraw everything from 0x0fe7737956d706bc420f87b69aa4773cfc3b1a44": [[{"name": "withdraw", "args": {"amount": "all", "poolName": "0x0fe7737956d706bc420f87b69aa4773cfc3b1a44"}}], [{"name": "withdraw", "args": {"amount": "all", "protocolName": "all"}}]], "withdraw my weth from 0x3cd751e6b0078be393132286c442345e5dc49699 and deposit it into 0xf577628a1b2338f27e9331ea945c3b83f8dfd439": [[{"name": "withdraw", "args": {"token": "weth", "poolName": "0x3cd751e6b0078be393132286c442345e5dc49699"}}, {"name": "deposit", "args": {"amount": "outputAmount", "token": "weth", "poolName": "0xf577628a1b2338f27e9331ea945c3b83f8dfd439"}}], [{"name": "withdraw", "args": {"protocolName": "all", "token": "weth"}}, {"name": "deposit", "args": {"protocolName": "all", "amount": "outputAmount", "token": "weth"}}]], "buy eth with 100 usdc whenever eth goes below $3100 and buy usdc with 0.03 eth whenever eth goes above $3300 indefinitely": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "3100", "type": "price", "value_units": "usd", "period": "forever"}}, {"name": "swap", "args": {"inputAmount": "0.03", "inputToken": "eth", "outputToken": "usdc"}}, {"name": "condition", "args": {"subject": "eth", "comparator": ">=", "value": "3300", "type": "price", "value_units": "usd", "period": "forever"}}]], "whenever my balance for token x is greater than y (number) and the price of token x is greater than z (price), sell a (amount number) x (token name) for usdc": [[{"name": "condition", "args": {"subject": "x", "comparator": ">=", "value": "y", "type": "balance", "period": "forever"}}, {"name": "condition", "args": {"operator": "and", "subject": "x", "comparator": ">=", "value": "z", "type": "price", "value_units": "usd", "period": "forever"}}, {"name": "swap", "args": {"inputToken": "x", "outputToken": "usdc"}}]], "deposit all eth into camelot eth-usdc pool and stake the lp": [[{"name": "deposit", "args": {"protocolName": "camelot", "poolName": "eth-usdc", "amount": "all", "token": "eth"}}, {"name": "stake", "args": {"protocolName": "camelot", "amount": "outputAmount", "token": "outputToken"}}], [{"name": "deposit", "args": {"protocolName": "camelot", "poolName": "eth-usdc", "amount": "all", "token": "eth"}}, {"name": "stake", "args": {"protocolName": "camelot", "amount": "outputAmount", "token": "lp"}}]], "buy eth with 100 usdc when eth is above 3000 or eth is below 1000": [[{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": ">=", "value": "3000", "type": "price"}}, {"name": "condition", "args": {"operator": "or", "subject": "eth", "comparator": "<=", "value": "1000", "type": "price"}}], [{"name": "swap", "args": {"inputAmount": "100", "inputToken": "usdc", "outputToken": "eth"}}, {"name": "condition", "args": {"subject": "eth", "comparator": ">=", "value": "3000", "type": "price", "value_units": "usd"}}, {"name": "condition", "args": {"operator": "or", "subject": "eth", "comparator": "<=", "value": "1000", "type": "price", "value_units": "usd"}}]], "if gas goes below 10 or gas decreases 50%, bridge all my wbtc to base and deposit into aerodrome": [[{"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "condition", "args": {"operator": "or", "subject": "gas", "comparator": "<=", "value": "50%", "type": "gas"}}, {"name": "bridge", "args": {"amount": "all", "token": "wbtc", "destinationChainName": "base"}}, {"name": "deposit", "args": {"protocolName": "aerodrome", "amount": "outputAmount", "token": "wbtc", "chainName": "base"}}], [{"name": "condition", "args": {"operator": "or", "subject": "gas", "comparator": "<=", "value": "10", "type": "gas"}}, {"name": "condition", "args": {"operator": "or", "subject": "gas", "comparator": "<=", "value": "50%", "type": "gas"}}, {"name": "bridge", "args": {"amount": "all", "token": "wbtc", "destinationChainName": "base"}}, {"name": "deposit", "args": {"protocolName": "aerodrome", "amount": "outputAmount", "token": "wbtc", "chainName": "base"}}]], "transfer 0.29 avax to 0x0e79459d098815bab924fb7a8a266448268b9650  on avalanche by 1:34pm utc": [[{"name": "transfer", "args": {"amount": "0.29", "token": "avax", "recipient": "0x0e79459d098815bab924fb7a8a266448268b9650", "chainName": "avalanche"}}, {"name": "time", "args": {"start_time": "1:34pm utc"}}]], "swap .01 eth to usdc on arb": [[{"name": "swap", "args": {"inputAmount": ".01", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}]], "bridge 0.03 eth to blast and swap 0.02 eth to usdb on thruster": [[{"name": "bridge", "args": {"amount": "0.03", "token": "eth", "destinationChainName": "blast"}}, {"name": "swap", "args": {"protocolName": "thruster", "inputAmount": "0.02", "inputToken": "eth", "outputToken": "usdb", "chainName": "blast"}}]], "bridge 0.001 eth from arbritrum to base and swap half of the eth to usdc and deposit the eth and usdc to aerodrome on base": [[{"name": "bridge", "args": {"amount": "0.001", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "half", "inputToken": "eth", "outputToken": "usdc", "chainName": "base"}}, {"name": "deposit", "args": {"protocolName": "aerodrome", "amount": "outputAmount", "token": "eth", "chainName": "base"}}, {"name": "deposit", "args": {"protocolName": "aerodrome", "amount": "outputAmount", "token": "usdc", "chainName": "base"}}]], "lend .02 eth on dolomite on arbitrum, borrow 25 usdc from dolomite, and long eth with 2x leverage with the usdc on gmx": [[{"name": "lend", "args": {"protocolName": "dolomite", "amount": ".02", "token": "eth", "chainName": "arbitrum"}}, {"name": "borrow", "args": {"protocolName": "dolomite", "amount": "25", "token": "usdc", "chainName": "arbitrum"}}, {"name": "long", "args": {"protocolName": "gmx", "inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "eth", "chainName": "arbitrum", "leverageMultiplier": "2x"}}], [{"name": "lend", "args": {"protocolName": "dolomite", "amount": ".02", "token": "eth", "chainName": "arbitrum"}}, {"name": "borrow", "args": {"protocolName": "dolomite", "amount": "25", "token": "usdc", "chainName": "arbitrum"}}, {"name": "long", "args": {"protocolName": "gmx", "inputToken": "usdc", "outputToken": "eth", "chainName": "arbitrum", "leverageMultiplier": "2x"}}]], "buy boop with all of my usdc on arbitrum when boop market cap hits $17,800,000": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "usdc", "outputToken": "boop", "chainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "boop", "comparator": "==", "value": "17800000", "type": "market cap", "value_units": "usd"}}]], "swap .02 eth to usdc on ethereum when gas goes below 7 and eth price hits $3000": [[{"name": "swap", "args": {"inputAmount": ".02", "inputToken": "eth", "outputToken": "usdc", "chainName": "ethereum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "7", "type": "gas"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "==", "value": "3000", "type": "price", "value_units": "usd"}}]], "swap 84897.30038135161 of my token with contract 0xac1bd2486aaf3b5c0fc3fd868558b082a531b2b4 to eth on base": [[{"name": "swap", "args": {"inputAmount": "84897.30038135161", "inputToken": "0xac1bd2486aaf3b5c0fc3fd868558b082a531b2b4", "outputToken": "eth", "chainName": "base"}}]], "swap 0.0002 eth to dia on base by 12am on uniswap": [[{"name": "swap", "args": {"inputAmount": "0.0002", "inputToken": "eth", "outputToken": "dia", "chainName": "base", "protocolName": "uniswap"}}, {"name": "time", "args": {"start_time": "12am"}}]], "long eth with 3x leverage with 10 usdc on gmx if eth less than 3100 every 12 hours": [[{"name": "long", "args": {"protocolName": "gmx", "inputAmount": "10", "inputToken": "usdc", "outputToken": "eth", "leverageMultiplier": "3x"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "3100", "type": "price"}}, {"name": "time", "args": {"recurrence": {"type": "hours", "interval": 12}}}], [{"name": "long", "args": {"protocolName": "gmx", "inputAmount": "10", "inputToken": "usdc", "outputToken": "eth", "leverageMultiplier": "3"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "3100", "type": "price"}}, {"name": "time", "args": {"recurrence": {"type": "hours", "interval": 12}}}], [{"name": "long", "args": {"protocolName": "gmx", "inputAmount": "10", "inputToken": "usdc", "outputToken": "eth", "leverageMultiplier": "3x"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "3100", "type": "price", "value_units": "usd"}}, {"name": "time", "args": {"recurrence": {"type": "hours", "interval": 12}}}]], "swap 0.01 eth to usdc on arbitrum one, try using 3% slippage and find me the best rate": [[{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum", "slippage": "3%"}}]], "add 10 usdc collateral to my btc position on gmx ": [[{"name": "long", "args": {"protocolName": "gmx", "inputAmount": "10", "inputToken": "usdc", "outputToken": "btc"}}]], "bridge $100 of eth from arbitrum to base on jumper every tuesday and thursday at 5 pm cet": [[{"name": "bridge", "args": {"amount": "100", "amount_units": "usd", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base", "protocolName": "jumper"}}, {"name": "time", "args": {"start_time": "tuesday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "time", "args": {"start_time": "thursday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}]], "bridge $100 of eth from arbitrum to base every tuesday and thursday at 5 pm cet": [[{"name": "bridge", "args": {"amount": "100", "amount_units": "usd", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "time", "args": {"start_time": "tuesday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "time", "args": {"start_time": "thursday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}]], "bridge $100 of eth from arbitrum to base on debridge every tuesday and thursday at 5 pm cet": [[{"name": "bridge", "args": {"amount": "100", "amount_units": "usd", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base", "protocolName": "debridge"}}, {"name": "time", "args": {"start_time": "tuesday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "time", "args": {"start_time": "thursday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}]], "bridge $0-$100 of eth from arbitrum to base on jumper or debridge every tuesday and thursday at 5 pm cet": [[{"name": "bridge", "args": {"amount_units": "usd", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base", "protocolName": "debridge"}}, {"name": "time", "args": {"start_time": "tuesday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "time", "args": {"start_time": "thursday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}]], "bridge 0.01-0.02 of eth from arbitrum to base on jumper or debridge every tuesday and thursday at 5 pm cet": [[{"name": "bridge", "args": {"token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base", "protocolName": "debridge"}}, {"name": "time", "args": {"start_time": "tuesday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "time", "args": {"start_time": "thursday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}]], "on arbitrum, close arb position on gmx when arb is above $1.10": [[{"name": "close", "args": {"protocolName": "gmx", "inputToken": "arb", "chainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "arb", "comparator": ">=", "value": "1.10", "type": "price", "value_units": "usd"}}]], "withdraw all eth supplied to lodestar": [[{"name": "withdraw", "args": {"protocolName": "lodestar", "amount": "all", "token": "eth"}}]], "buy eth on arbitrum with 1 usdc when price of eth drops 0.1%": [[{"name": "swap", "args": {"inputAmount": "1", "inputToken": "usdc", "outputToken": "eth", "chainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "0.1%", "type": "price"}}]], "buy degen on base with 0.000001 eth when market cap drops 0.1%": [[{"name": "swap", "args": {"inputAmount": "0.000001", "inputToken": "eth", "outputToken": "degen", "chainName": "base"}}, {"name": "condition", "args": {"subject": "degen", "comparator": "<=", "value": "0.1%", "type": "market cap"}}], [{"name": "swap", "args": {"inputAmount": "0.000001", "inputToken": "eth", "outputToken": "degen", "chainName": "base"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "0.1%", "type": "market cap"}}]], "swap all usdc to eth on arbitrum when gas is low and eth price drops 0.1%": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "usdc", "outputToken": "eth", "chainName": "arbitrum"}}, {"name": "condition", "args": {"subject": "gas", "comparator": "<=", "value": "low", "type": "gas"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "0.1%", "type": "price"}}]], "bridge 0.01 eth from arbitrum to base and buy toshi with it at 3am today": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "toshi", "chainName": "base"}}, {"name": "time", "args": {"start_time": "3am today"}}]], "on base sell my degen to eth when profit in eth terms is 50%": [[{"name": "swap", "args": {"inputToken": "degen", "outputToken": "eth", "chainName": "base"}}, {"name": "condition", "args": {"subject": "degen", "comparator": ">=", "value": "50%", "type": "price", "value_token": "eth"}}]], "on base sell my degen to eth when profit in eth terms is 100%": [[{"name": "swap", "args": {"inputToken": "degen", "outputToken": "eth", "chainName": "base"}}, {"name": "condition", "args": {"subject": "degen", "comparator": ">=", "value": "100%", "type": "price", "value_token": "eth"}}]], "bridge 0.01 eth from arbitrum to base and buy degen with it at 2:30 pm eastern today": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "eth", "outputToken": "degen", "chainName": "base"}}, {"name": "time", "args": {"start_time": "2:30 pm eastern today"}}]], "bridge .01 eth from arbitrum to base and transfer .019 eth to [0x66e751f8a564be5b796e0e6d5d68fc7fa2c89976]": [[{"name": "bridge", "args": {"amount": ".01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "transfer", "args": {"amount": ".019", "token": "eth", "recipient": "0x66e751f8a564be5b796e0e6d5d68fc7fa2c89976", "chainName": "base"}}]], "swap all 0xafb89a09d82fbde58f18ac6437b3fc81724e4df6 for degen on base": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "0xafb89a09d82fbde58f18ac6437b3fc81724e4df6", "outputToken": "degen", "chainName": "base"}}]], "unlock eth and usdc on lodestar": [[{"name": "unlock", "args": {"protocolName": "lodestar", "token": "eth"}}, {"name": "unlock", "args": {"protocolName": "lodestar", "token": "usdc", "amount": "outputAmount"}}]], "bridge all of my usdc on arbitrum to base and swap it to friend": [[{"name": "bridge", "args": {"amount": "all", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "friend", "chainName": "base"}}]], "swap 0.005eth to 0x576e2bed8f7b46d34016198911cdf9886f78bea7": [[{"name": "swap", "args": {"inputAmount": "0.005", "inputToken": "eth", "outputToken": "0x576e2bed8f7b46d34016198911cdf9886f78bea7"}}]], "bridge 0.009eth from base to arbitrum": [[{"name": "bridge", "args": {"amount": "0.009", "token": "eth", "sourceChainName": "base", "destinationChainName": "arbitrum"}}]], "withdraw eth and usdc on lodestar": [[{"name": "withdraw", "args": {"protocolName": "lodestar", "token": "eth"}}, {"name": "withdraw", "args": {"protocolName": "lodestar", "token": "usdc", "amount": "outputAmount"}}], [{"name": "withdraw", "args": {"protocolName": "lodestar", "token": "eth", "amount": "all"}}, {"name": "withdraw", "args": {"protocolName": "lodestar", "token": "usdc", "amount": "outputAmount"}}]], "claim all of my rewards across all chains from stargate and bridge then to arbitrum": [[{"name": "claim", "args": {"protocolName": "stargate", "token": "all", "chainName": "all"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "outputToken", "sourceChainName": "all", "destinationChainName": "arbitrum"}}]], "when my aave ltv hits 80%, deposit 200 usdc": [[{"name": "condition", "args": {"subject": "aave ltv", "comparator": "==", "value": "80%", "type": "ltv"}}, {"name": "deposit", "args": {"protocolName": "aave", "amount": "200", "token": "usdc"}}]], "buy maga when fdv < 50 billion": [[{"name": "swap", "args": {"outputToken": "maga"}}, {"name": "condition", "args": {"subject": "maga", "comparator": "<=", "value": "50000000000.0", "type": "fdv"}}]], "sell wld when fdv goes above 1,000,000,000,000": [[{"name": "swap", "args": {"inputToken": "wld"}}, {"name": "condition", "args": {"subject": "wld", "comparator": ">=", "value": "1000000000000", "type": "fdv"}}]], "when my lodestar health factor goes below 1.2, deposit all the usdt i have": [[{"name": "condition", "args": {"subject": "lodestar", "comparator": "<=", "value": "1.2", "type": "health factor"}}, {"name": "deposit", "args": {"protocolName": "lodestar", "amount": "all", "token": "usdt"}}]], "repay all my loans when morpho health factor goes below 1.1": [[{"name": "repay", "args": {"protocolName": "all"}}, {"name": "condition", "args": {"subject": "morpho", "comparator": "<=", "value": "1.1", "type": "health factor"}}], [{"name": "repay", "args": {"protocolName": "all", "amount": "all"}}, {"name": "condition", "args": {"subject": "morpho", "comparator": "<=", "value": "1.1", "type": "health factor"}}]], "when compound health factor increases to 2, withdraw 1000 dai from it": [[{"name": "condition", "args": {"subject": "compound", "comparator": ">=", "value": "2", "type": "health factor"}}, {"name": "withdraw", "args": {"protocolName": "compound", "amount": "1000", "token": "dai"}}]], "if fdv of stg is below 400 million, unstake my stg": [[{"name": "condition", "args": {"subject": "stg", "comparator": "<=", "value": "400000000.0", "type": "fdv"}}, {"name": "unstake", "args": {"token": "stg", "protocolName": "all"}}]], "bridge $0-$100 of eth from arbitrum to base every tuesday and thursday at 5 pm cet. randomly select debridge or jumper as bridge solution": [[{"name": "bridge", "args": {"amount_units": "usd", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base", "protocolName": "jumper"}}, {"name": "time", "args": {"start_time": "tuesday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "time", "args": {"start_time": "thursday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}]], "on arbitrum, close arb token short position on gmx, repay the usdc on lodestar and withdraw all lended eth on lodestar": [[{"name": "close", "args": {"protocolName": "gmx", "inputToken": "arb", "chainName": "arbitrum"}}, {"name": "repay", "args": {"protocolName": "lodestar", "token": "usdc", "chainName": "arbitrum", "amount": "outputAmount"}}, {"name": "withdraw", "args": {"protocolName": "lodestar", "amount": "all", "token": "eth", "chainName": "arbitrum"}}], [{"name": "close", "args": {"protocolName": "gmx", "inputToken": "arb", "chainName": "arbitrum"}}, {"name": "repay", "args": {"protocolName": "lodestar", "token": "usdc", "chainName": "arbitrum", "amount": "all"}}, {"name": "withdraw", "args": {"protocolName": "lodestar", "amount": "all", "token": "eth", "chainName": "arbitrum"}}]], "buy degen on base with 0.000001 eth when market cap moves up or down 0.1% from current price": [[{"name": "swap", "args": {"inputAmount": "0.000001", "inputToken": "eth", "outputToken": "degen", "chainName": "base"}}, {"name": "condition", "args": {"subject": "eth", "comparator": "<=", "value": "0.1%", "type": "price"}}], [{"name": "swap", "args": {"inputAmount": "0.000001", "inputToken": "eth", "outputToken": "degen", "chainName": "base"}}, {"name": "condition", "args": {"subject": "eth", "comparator": ">=", "value": "0.1%", "type": "price"}}]], "bridge $100 of eth from arbitrum to base every tuesday and thursday at 5 pm cet. randomly select debridge or jumper as bridging solution": [[{"name": "bridge", "args": {"amount": "100", "amount_units": "usd", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base", "protocolName": "jumper"}}, {"name": "time", "args": {"start_time": "tuesday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}, {"name": "time", "args": {"start_time": "thursday 5 pm cet", "recurrence": {"type": "weeks", "interval": 1}}}]], "deposit into the pendle yt-eth pool if pendle token fdv goes under 200000000": [[{"name": "deposit", "args": {"protocolName": "pendle", "poolName": "yt-eth"}}, {"name": "condition", "args": {"subject": "pendle", "comparator": "<=", "value": "200000000", "type": "fdv"}}]], "swap 0.01 eth to usdc on arbitrum, bridge to base and buy degen with it. then deposit in the degen eth pool on aerodrome": [[{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "degen", "chainName": "base"}}, {"name": "deposit", "args": {"protocolName": "aerodrome", "poolName": "degen-eth", "amount": "outputAmount", "token": "degen", "chainName": "base"}}], [{"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "usdc", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "degen", "chainName": "base"}}, {"name": "deposit", "args": {"protocolName": "aerodrome", "poolName": "degen-eth", "amount": "outputAmount", "token": "degen", "chainName": "base"}}, {"name": "deposit", "args": {"protocolName": "aerodrome", "poolName": "degen-eth", "amount": "outputAmount", "token": "eth", "chainName": "base"}}]], "bridge all my eth on ethereum from ethereum to arbitrum eth": [[{"name": "bridge", "args": {"amount": "all", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}]], "bridge 5$ equivalent of eth on op  using bungee": [[{"name": "bridge", "args": {"protocolName": "bungee", "amount": "5", "amount_units": "usd", "token": "eth", "destinationChainName": "optimism"}}]], "bridge 0.03 eth from arbitrum to blast then send 0.028 on blast to 0xc03e3da10525b93f182c7d9ff4d6aeca8a289bb4": [[{"name": "bridge", "args": {"amount": "0.03", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "blast"}}, {"name": "transfer", "args": {"amount": "0.028", "token": "eth", "recipient": "0xc03e3da10525b93f182c7d9ff4d6aeca8a289bb4", "chainName": "blast"}}]], "swap 19 000 000 meow on zksync to usdc": [[{"name": "swap", "args": {"inputAmount": "19000000", "inputToken": "meow", "outputToken": "usdc", "chainName": "zksync"}}]], "close all my positions on gmx on arbitrum and swap it back to ethreum": [[{"name": "close", "args": {"protocolName": "gmx", "chainName": "arbitrum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "outputToken", "sourceChainName": "arbitrum", "destinationChainName": "ethereum"}}]], "send all of my bnb on bsc to 0x10683d8452618cfcfea3b918d17a58d09d5db895 in 6 hours": [[{"name": "transfer", "args": {"amount": "all", "token": "bnb", "recipient": "0x10683d8452618cfcfea3b918d17a58d09d5db895", "chainName": "bsc"}}, {"name": "time", "args": {"start_time": "6 hours"}}]], "bridge 0.006 bnb from bsc to eth on base": [[{"name": "bridge", "args": {"amount": "0.006", "token": "bnb", "sourceChainName": "bsc", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "bnb", "outputToken": "eth", "chainName": "base"}}]], "bridge 0.006 bnb from bsc to base eth": [[{"name": "bridge", "args": {"amount": "0.006", "token": "bnb", "sourceChainName": "bsc", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "bnb", "outputToken": "eth", "chainName": "base"}}]], "bridge 0.02eth on arbitrum to base using debridge finance. then use 0.01 to buy $floppa on base": [[{"name": "bridge", "args": {"protocolName": "debridge", "amount": "0.02", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "floppa", "chainName": "base"}}]], "close my leveraged position on gmx": [[{"name": "close", "args": {"protocolName": "gmx"}}]], "bridge 15 usdc from base to polygon, buy matic with half, buy usdc with half": [[{"name": "bridge", "args": {"amount": "15", "token": "usdc", "sourceChainName": "base", "destinationChainName": "polygon"}}, {"name": "swap", "args": {"inputAmount": "half", "inputToken": "usdc", "outputToken": "matic", "chainName": "polygon"}}, {"name": "swap", "args": {"inputAmount": "half", "inputToken": "matic", "outputToken": "usdc", "chainName": "polygon"}}]], "bridge 0.01 eth from arbitrum to base and buy degen with 0.01 eth on base in 3 minutes": [[{"name": "bridge", "args": {"amount": "0.01", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base"}}, {"name": "swap", "args": {"inputAmount": "0.01", "inputToken": "eth", "outputToken": "degen", "chainName": "base"}}, {"name": "time", "args": {"start_time": "3 minutes"}}]], "buy degen with 0.005eth on base in the next 2 minutes": [[{"name": "swap", "args": {"inputAmount": "0.005", "inputToken": "eth", "outputToken": "degen", "chainName": "base"}}, {"name": "time", "args": {"start_time": "2 minutes"}}]], "swap all my available usdc back to eth on arbitrum": [[{"name": "swap", "args": {"inputAmount": "all", "inputToken": "usdc", "outputToken": "eth", "chainName": "arbitrum"}}]], "bridge 0.009 eth from arbitrum to base using bungee and bridge back the same amount from base to arbitrum using jumper": [[{"name": "bridge", "args": {"amount": "0.009", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base", "protocolName": "bungee"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "base", "destinationChainName": "arbitrum", "protocolName": "jumper"}}]], "bridge all my eth minus gas required from ethereum mainnet to arbitrum": [[{"name": "bridge", "args": {"amount": "all", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}]], "bridge 0.009 eth from arbitrum to base using bungee and bridge back the same amount from base to arbitrum using jumper at 12pm tommorow": [[{"name": "bridge", "args": {"amount": "0.009", "token": "eth", "sourceChainName": "arbitrum", "destinationChainName": "base", "protocolName": "bungee"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "base", "destinationChainName": "arbitrum", "protocolName": "jumper"}}, {"name": "time", "args": {"start_time": "12pm tomorrow"}}]], "remove my eth position from aave on mainnet and deposit it on arbitrum pendle": [[{"name": "withdraw", "args": {"protocolName": "aave", "token": "eth", "chainName": "ethereum"}}, {"name": "bridge", "args": {"amount": "outputAmount", "token": "eth", "sourceChainName": "ethereum", "destinationChainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "pendle", "amount": "outputAmount", "token": "eth", "chainName": "arbitrum"}}]], "bridge all of my usdc from base to bsc usdt": [[{"name": "bridge", "args": {"amount": "all", "token": "usdc", "sourceChainName": "base", "destinationChainName": "bsc"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "usdc", "outputToken": "usdt", "chainName": "bsc"}}]], "swap my virtual on base for eth": [[{"name": "swap", "args": {"inputToken": "virtual", "outputToken": "eth", "chainName": "base"}}]], "withdraw all collateral on compound": [[{"name": "withdraw", "args": {"protocolName": "compound", "amount": "all"}}]], "withdraw all eth collateral on compound": [[{"name": "withdraw", "args": {"protocolName": "compound", "amount": "all", "token": "eth"}}]], "close short position on gmx": [[{"name": "close", "args": {"protocolName": "gmx"}}]], "repay my 20usdc loan on lodestar and withdraw 0.01eth being lent": [[{"name": "repay", "args": {"protocolName": "lodestar", "amount": "20", "token": "usdc"}}, {"name": "withdraw", "args": {"protocolName": "lodestar", "amount": "0.01", "token": "eth"}}]], "repay all loans on compound": [[{"name": "repay", "args": {"protocolName": "compound", "amount": "all"}}]], "borrow  $3usdc on compound": [[{"name": "borrow", "args": {"protocolName": "compound", "amount": "3", "token": "usdc"}}]], "deposit $9 of eth on compound as collateral": [[{"name": "deposit", "args": {"protocolName": "compound", "amount": "9", "amount_units": "usd", "token": "eth"}}]], "use compound on arbitrum to borrow $3 usdc": [[{"name": "borrow", "args": {"protocolName": "compound", "amount": "3", "token": "usdc", "chainName": "arbitrum"}}]], "hello, please bridge all my eth on base to arbitrum and then swap 0.028eth to usdc": [[{"name": "bridge", "args": {"amount": "all", "token": "eth", "sourceChainName": "base", "destinationChainName": "arbitrum"}}, {"name": "swap", "args": {"inputAmount": "0.028", "inputToken": "eth", "outputToken": "usdc", "chainName": "arbitrum"}}]], "repay 20usdc loan on lodestar": [[{"name": "repay", "args": {"protocolName": "lodestar", "amount": "20", "token": "usdc"}}]], "long doge on gmx when funding rate goes above -0.13%": [[{"name": "long", "args": {"protocolName": "gmx", "outputToken": "doge"}}, {"name": "condition", "args": {"subject": "doge", "comparator": ">=", "value": "-0.13%", "type": "funding rate"}}], [{"name": "long", "args": {"protocolName": "gmx", "inputToken": "doge", "outputToken": "doge"}}, {"name": "condition", "args": {"subject": "doge", "comparator": ">=", "value": "-0.13%", "type": "funding rate"}}]], "close my ltc long on gmx if funding goes negative": [[{"name": "close", "args": {"protocolName": "gmx", "outputToken": "ltc"}}, {"name": "condition", "args": {"subject": "ltc", "comparator": "<=", "value": "0", "type": "funding rate"}}], [{"name": "close", "args": {"protocolName": "gmx", "inputToken": "ltc"}}, {"name": "condition", "args": {"subject": "ltc", "comparator": "<=", "value": "0", "type": "funding rate"}}]], "if open interest goes down 20%, long btc on gmx": [[{"name": "long", "args": {"protocolName": "gmx", "outputToken": "btc"}}, {"name": "condition", "args": {"subject": "btc", "comparator": "<=", "value": "20%", "type": "open interest"}}]], "close arb short on gmx if open interest increases 2x": [[{"name": "close", "args": {"protocolName": "gmx", "outputToken": "arb"}}, {"name": "condition", "args": {"subject": "arb", "comparator": "==", "value": "2x", "type": "open interest"}}], [{"name": "close", "args": {"protocolName": "gmx", "outputToken": "arb"}}, {"name": "condition", "args": {"subject": "arb", "comparator": ">=", "value": "2x", "type": "open interest"}}], [{"name": "close", "args": {"protocolName": "gmx", "inputToken": "arb"}}, {"name": "condition", "args": {"subject": "arb", "comparator": ">=", "value": "2x", "type": "open interest"}}]], "deposit weeth into pendle pt-weeth-27jun2024": [[{"name": "deposit", "args": {"protocolName": "pendle", "poolName": "pt-weeth-27jun2024", "token": "weeth"}}]], "withdraw from pendle ezeth pool and deposit into the eeth pool": [[{"name": "withdraw", "args": {"protocolName": "pendle", "poolName": "ezeth"}}, {"name": "deposit", "args": {"protocolName": "pendle", "poolName": "eeth", "amount": "outputAmount", "token": "outputToken"}}]], "withdraw from aave and deposit into compound when compound apy is greater than aave": [[{"name": "withdraw", "args": {"protocolName": "aave"}}, {"name": "deposit", "args": {"protocolName": "compound", "amount": "outputAmount", "token": "outputToken"}}, {"name": "condition", "args": {"subject": "compound", "comparator": ">=", "value": "aave", "type": "yield"}}]], "withdraw from my pendle position when the apy is less than 10%": [[{"name": "withdraw", "args": {"protocolName": "pendle"}}, {"name": "condition", "args": {"subject": "apy", "comparator": "<=", "value": "10%", "type": "yield"}}]], "when the pendle ezeth apy is greater than the pendle rseth apy, withdraw from my rseth position, swap to ezeth and deposit into the ezeth pool": [[{"name": "withdraw", "args": {"protocolName": "pendle", "poolName": "rseth", "token": "rseth"}}, {"name": "swap", "args": {"inputAmount": "outputAmount", "inputToken": "rseth", "outputToken": "ezeth", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "pendle", "poolName": "ezeth", "amount": "outputAmount", "token": "ezeth"}}, {"name": "condition", "args": {"subject": "pendle ezeth", "comparator": ">=", "value": "pendle rseth", "type": "yield"}}]], "withdraw all of my weeth from the pt-weeth-25apr2024 pendle pool on arbitrum. then deposit it into the pt-weeth-26jun2024 pendle pool": [[{"name": "withdraw", "args": {"protocolName": "pendle", "poolName": "pt-weeth-25apr2024", "amount": "all", "token": "weeth", "chainName": "arbitrum"}}, {"name": "deposit", "args": {"protocolName": "pendle", "poolName": "pt-weeth-26jun2024", "amount": "outputAmount", "token": "weeth", "chainName": "arbitrum"}}]]}